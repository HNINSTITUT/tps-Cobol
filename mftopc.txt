      *===============================================================*
      *--                INFORMATIONS GENERALES                     --*
      *---------------------------------------------------------------*
      *  NOM DU PROGRAMME : HNSO5A1                                   *
      *  NOM DU REDACTEUR :                                           *
      *  SOCIETE          : HNS                                       *
      *  DATE DE CREATION :                                           *
      *---------------------------------------------------------------*
      *--               OBJECTIFS GENERAUX DU PROGRAMME             --*
      *---------------------------------------------------------------*
      *                                                               *
      *                                                               *
      *---------------------------------------------------------------*
      *--               HISTORIQUE DES MODIFICATIONS                --*
      *---------------------------------------------------------------*
      * DATE  MODIF   ยง          NATURE DE LA MODIFICATION            *
      *---------------------------------------------------------------*
      * JJ/MM/SSAA    ยง                                               *
      *               ยง                                               *
      *===============================================================*

       IDENTIFICATION DIVISION.
       PROGRAM-ID.      HNSO5A1.

      *                  ==============================               *
      *=================<   ENVIRONMENT     DIVISION   >==============*
      *                  ==============================               *
      *                                                               *
      *===============================================================*

      **********************
       ENVIRONMENT DIVISION.
      **********************

      *======================
       CONFIGURATION SECTION.
      *======================

      *--------------
       SPECIAL-NAMES.
      *--------------
           DECIMAL-POINT IS COMMA.

      *=====================
       INPUT-OUTPUT SECTION.
      *=====================

      *-------------
       FILE-CONTROL.
      *-------------

      *                      -------------------------------------------
      *                      XXXXXXX : FICHIER DES XXXXX
      *                      -------------------------------------------
           SELECT  F-MVTS-E           ASSIGN TO INP001
                   FILE STATUS         IS WS-MVTS-E.
      *                      -------------------------------------------

      ***************
       DATA DIVISION.
      ***************

      *=============
       FILE SECTION.
      *=============

       FD  F-MVTS-E
      *    DATA RECORD IS F
           RECORDING MODE IS F
           RECORD CONTAINS 50 CHARACTERS.
       01  FS-MVTS-E PIC X(50).

      *========================
       WORKING-STORAGE SECTION.
      *========================
       01  WS-MVTS-E     PIC XX.
       01  WS-ENRG-F-MVTS.
         05 WS-MVTS-CPTE PIC 9(10).
         05 WS-MVTS-MVT.
           10 WS-MVTS-DATE.
             15 WS-MVTS-SS PIC 99.
             15 WS-MVTS-AA PIC 99.
           10 WS-MVTS-MM PIC 99.
           10 WS-MVTS-JJ PIC 99.
         05 WS-MVTS-CODE PIC X.
         05 WS-MVTS-MT PIC 9(8)V99.
         05 FILLER PIC X(21).
       01 WS-LASTER PIC X(50) VALUE ALL '*'.
       01 WS-LCPTE.
         05 FILLER PIC X(40)
           VALUE 'ACCOUNT NUMBER                     : '.
         05 WS-OCPT PIC 9(10).
       01 WS-LTIRET PIC X(50) VALUE ALL '-'.
       01 WS-LCB.
         05 FILLER PIC X(40)
           VALUE 'BANK CARD TOTAL                    : '.
         05 WS-OCB PIC 9(8)V99.
       01 WS-LRDAB.
         05 FILLER PIC X(40)
           VALUE 'ATM WITHDRAWAL TOTAL               : '.
         05 WS-ORDAB PIC 9(8)V99.
       01 WS-LDGUI.
         05 FILLER PIC X(40)
           VALUE 'COUNTER DEPOSIT TOTAL              : '.
         05 WS-ODGUI PIC 9(8)V99.
       01 WS-LBAL.
         05 FILLER PIC X(40)
           VALUE 'OPERATIONS BALANCE                 : '.
         05 WS-OBAL PIC 9(8)V99.
       01 WS-LECPT.
         05 FILLER PIC X(40)
           VALUE 'ACCOUNT ERROR                      : '.
         05 WS-ECPT PIC 9(8)V99.
       01 WS-LEMVT.
         05 FILLER PIC X(40)
           VALUE 'TRANSACTION CODE                   : '.
         05 WS-EMVT PIC 9(8)V99.
       01 WS-LEMT.
         05 FILLER PIC X(40)
           VALUE 'AMOUNT                                : '.
         05 WS-EMT PIC 9(8)V99.
       01 WS-CCLI PIC 99 VALUE 0.
       01 WS-CMVT PIC 99 VALUE 0.
       01 WS-CERR PIC 99 VALUE 0.
       01 WS-CRET PIC 99 VALUE 0.
       01 WS-CCB PIC 99 VALUE 0.
       01 WS-CDEP PIC 99 VALUE 0.
       01 WS-MVTS-CPTER PIC 9(10).

      *                  ==============================               *
      *=================<    PROCEDURE      DIVISION   >==============*
      *                  ==============================               *

      *===============================================================*
       PROCEDURE           DIVISION.

      *===============================================================*
      *===============================================================*
      *    STRUCTURATION DE LA PARTIE ALGORITHMIQUE DU PROGRAMME      *
      *---------------------------------------------------------------*
      *                                                               *
      *    1 : LES COMPOSANTS DU DIAGRAMME SONT CODES A L'AIDE DE     *
      *        DEUX PARAGRAPHES  XXXX-COMPOSANT-DEB                   *
      *                          XXYY-COMPOSANR-FIN                   *
      *                                                               *
      *    2 : XX REPRESENTE LE NIVEAU HIERARCHIQUE                   *
      *        YY DIFFERENCIE LES COMPOSANTS DE MEME NIVEAU           *
      *                                                               *
      *    3 : TOUT COMPOSANT EST PRECEDE D'UN CARTOUCHE DE           *
      *        COMMENTAIRE QUI EXPLICITE LE ROLE DU COMPOSANT         *
      *                                                               *
      *                                                               *
      *===============================================================*
      *===============================================================*


      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT PROGRAMME              *
      *               ==================================              *
      *---------------------------------------------------------------*

       0000-START-PROGRAM-DEB.
            PERFORM  6000-OPEN-F-MVTS-E-DEB
             THRU  6000-OPEN-F-MVTS-E-FIN.
            PERFORM  6010-READ-F-MVTS-E-DEB
             THRU  6010-READ-F-MVTS-E-FIN.

            PERFORM  1000-EXECUTION-OF-ACCOUNT-DEB
             THRU  1000-EXECUTION-OF-ACCOUNT-FIN
             UNTIL WS-MVTS-E = '10'.

             IF (WS-CMVT = 0)
               THEN DISPLAY 'FILE IS EMPTY'
             END-IF.
            PERFORM 6020-CLOSE-F-MVTS-E-DEB
             THRU 6020-CLOSE-F-MVTS-E-FIN.
                DISPLAY WS-LASTER.
                DISPLAY 'NUMBER OF CLIENTS                 : ' WS-CCLI.
                DISPLAY 'NUMBER OF TRANSACTIONS            : ' WS-CMVT.
                DISPLAY 'NUMBER OF TRANSACTIONS ERRORS     : ' WS-CERR.
                DISPLAY 'NUMBER OF WITHDRAWALS             : ' WS-CRET.
                DISPLAY 'NUMBER OF BANK CARDS              : ' WS-CCB.
                DISPLAY 'NUMBER OF DEPOSITS                : ' WS-CDEP.
                DISPLAY WS-LASTER.

            PERFORM 9999-FIN-PROGRAMME-DEB
             THRU 9999-FIN-PROGRAMME-FIN.
       0000-START-PROGRAM-FIN.
            EXIT.
       1000-EXECUTION-OF-ACCOUNT-DEB.
            MOVE 0 TO WS-ORDAB.
            MOVE 0 TO WS-ODGUI.
            MOVE 0 TO WS-OCB.
            MOVE 0 TO WS-OBAL.
            MOVE WS-MVTS-CPTE TO WS-MVTS-CPTER.

            PERFORM 2000-EXEC-OF-OP-DEB
               THRU 2000-EXEC-OF-OP-FIN
               UNTIL WS-MVTS-CPTE NOT = WS-MVTS-CPTER OR
                         WS-MVTS-E = '10'.
            COMPUTE WS-OBAL = WS-ODGUI - WS-OCB - WS-ORDAB.
            MOVE WS-MVTS-CPTER TO WS-OCPT.
            DISPLAY WS-LASTER.
            DISPLAY WS-LCPTE.
            DISPLAY WS-LTIRET.
            DISPLAY WS-LCB.
            DISPLAY WS-LRDAB.
            DISPLAY WS-LDGUI.
            DISPLAY WS-LTIRET.
            DISPLAY WS-LBAL.
            DISPLAY WS-LASTER.
            COMPUTE WS-CCLI = WS-CCLI + 1.
       1000-EXECUTION-OF-ACCOUNT-FIN.
            EXIT.
       2000-EXEC-OF-OP-DEB.
            COMPUTE WS-CMVT = WS-CMVT + 1.

            EVALUATE WS-MVTS-CODE
             WHEN 'R'
              PERFORM 3010-EXECUTION-WITHDRAWAL-DEB
               THRU 3010-EXECUTION-WITHDRAWAL-FIN
             WHEN 'C'
              PERFORM 3020-EXECUTION-CARD-DEB
               THRU 3020-EXECUTION-CARD-FIN
            WHEN 'D'
             PERFORM 3030-EXECUTION-DEPOSIT-DEB
              THRU 3030-EXECUTION-DEPOSIT-FIN
            WHEN OTHER
             PERFORM 3040-OTHER-DEB
              THRU 3040-OTHER-FIN
            END-EVALUATE.
             PERFORM 6010-READ-F-MVTS-E-DEB
              THRU 6010-READ-F-MVTS-E-FIN.
       2000-EXEC-OF-OP-FIN.
            EXIT.
       3010-EXECUTION-WITHDRAWAL-DEB.
            COMPUTE WS-ORDAB = WS-ORDAB + WS-MVTS-MT.
            COMPUTE WS-CRET = WS-CRET + 1.
       3010-EXECUTION-WITHDRAWAL-FIN.
            EXIT.
       3020-EXECUTION-CARD-DEB.
            COMPUTE WS-CCB = WS-CCB + 1.
            COMPUTE WS-OCB = WS-OCB + WS-MVTS-MT.
       3020-EXECUTION-CARD-FIN.
            EXIT.
       3030-EXECUTION-DEPOSIT-DEB.
            COMPUTE WS-CDEP = WS-CDEP + 1.
            COMPUTE WS-ODGUI = WS-ODGUI + WS-MVTS-MT.
       3030-EXECUTION-DEPOSIT-FIN.
            EXIT.
       3040-OTHER-DEB.
            MOVE WS-MVTS-CODE TO WS-EMVT.
            MOVE WS-MVTS-MT   TO WS-EMT.
            MOVE WS-MVTS-CPTE TO WS-ECPT
            COMPUTE WS-CERR = WS-CERR + 1.
            DISPLAY WS-LASTER.
            DISPLAY WS-LECPT.
            DISPLAY WS-LEMVT.
            DISPLAY WS-LEMT.
            DISPLAY WS-LASTER.
       3040-OTHER-FIN.
            EXIT.

       6000-OPEN-F-MVTS-E-DEB.
            OPEN INPUT F-MVTS-E.
            IF WS-MVTS-E NOT = '00'
            DISPLAY 'THERE IS A PROBLEM WITH THE OPENING OF F-MVT'
            DISPLAY 'THE VALUE OF FILE STAUTS = ' WS-MVTS-E
            PERFORM 9999-ERREUR-PROGRAMME-DEB
             THRU 9999-ERREUR-PROGRAMME-FIN
            END-IF.
       6000-OPEN-F-MVTS-E-FIN.
            EXIT.

       6010-READ-F-MVTS-E-DEB.
            READ F-MVTS-E INTO WS-ENRG-F-MVTS.
            IF NOT (WS-MVTS-E = '00' OR '10')
             DISPLAY 'THERE IS A PROBLEM WITH READING OF F-MVT'
             DISPLAY 'VALUE OF FILE STATUS = ' WS-MVTS-E
            PERFORM 9999-ERREUR-PROGRAMME-DEB
             THRU 9999-ERREUR-PROGRAMME-FIN
            END-IF.
       6010-READ-F-MVTS-E-FIN.
            EXIT.

       6020-CLOSE-F-MVTS-E-DEB.
            CLOSE F-MVTS-E.
            IF WS-MVTS-E NOT = '00'
             DISPLAY 'THERE IS A PROBLEM WITH CLOSING F-MVTS-E'
             DISPLAY 'VALUE OF FILE STATUS = ' WS-MVTS-E
            PERFORM 9999-ERREUR-PROGRAMME-DEB
             THRU 9999-ERREUR-PROGRAMME-FIN
            END-IF.
       6020-CLOSE-F-MVTS-E-FIN.
            EXIT.


      *===============================================================*
      *===============================================================*
      *    STRUCTURATION DE LA PARTIE INDEPENDANTE DU PROGRAMME       *
      *---------------------------------------------------------------*
      *                                                               *
      *   6XXX-  : ORDRES DE MANIPULATION DES FICHIERS                *
      *   7XXX-  : TRANSFERTS ET CALCULS COMPLEXES                    *
      *   8XXX-  : ORDRES DE MANIPULATION DES EDITIONS                *
      *   9XXX-  : PROTECTION FIN DE PROGRAMME                        *
      *   9999-  : PROTECTION FIN DE PROGRAMME                        *
      *                                                               *
      *===============================================================*
      *===============================================================*

      *---------------------------------------------------------------*
      *   6XXX-  : ORDRES DE MANIPULATION DES FICHIERS                *
      *---------------------------------------------------------------*
      *                                                               *
      *6000-ORDRE-FICHIER-DEB.
      *
      *6000-ORDRE-FICHIER-FIN.
      *     EXIT.
      *
      *---------------------------------------------------------------*
      *   7XXX-  : TRANSFERTS ET CALCULS COMPLEXES                    *
      *---------------------------------------------------------------*
      *
      *7000-ORDRE-CALCUL-DEB.
      *
      *7000-ORDRE-CALCUL-FIN.
      *     EXIT.
      *
      *---------------------------------------------------------------*
      *   8XXX-  : ORDRES DE MANIPULATION DES EDITIONS                *
      *---------------------------------------------------------------*

      *8999-STATISTIQUES-DEB.
      *
      *      DISPLAY '************************************************'
      *      DISPLAY '*     STATISTIQUES DU PROGRAMME XXXXXXXX       *'
      *      DISPLAY '*     ==================================       *'
      *      DISPLAY '************************************************'.
      *
      *8999-STATISTIQUES-FIN.
      *       EXIT.

      *---------------------------------------------------------------*
      *   9XXX-  : ORDRES DE MANIPULATION DES SOUS-PROGRAMMES         *
      *---------------------------------------------------------------*
      *
      *9000-APPEL-SP-DEB.
      *
      *9000-APPEL-SP-FIN.
      *     EXIT.
      *
      *---------------------------------------------------------------*
      *   9999-  : PROTECTION FIN DE PROGRAMME                        *
      *---------------------------------------------------------------*

       9999-FIN-PROGRAMME-DEB.

            DISPLAY '*==============================================*'
            DISPLAY '*     FIN NORMALE DU PROGRAMME HNSO5A1         *'
            DISPLAY '*==============================================*'
            STOP RUN.

       9999-FIN-PROGRAMME-FIN.
            EXIT.

       9999-ERREUR-PROGRAMME-DEB.

            DISPLAY '*==============================================*'
            DISPLAY '*        UNE ANOMALIE A ETE DETECTEE           *'
            DISPLAY '*     FIN ANORMALE DU PROGRAMME HNSO5A1        *'
            DISPLAY '*==============================================*'
            MOVE 12 TO RETURN-CODE.
            STOP RUN.

       9999-ERREUR-PROGRAMME-FIN.
            EXIT.


CBL    MAP,LIST,SSRANGE,FDUMP
      *===============================================================*
      *--                INFORMATIONS GENERALES                     --*
      *---------------------------------------------------------------*
      *  NOM DU PROGRAMME : HNSO5M2                                   *
      *  NOM DU REDACTEUR : REVERE ALAIN                              *
      *  SOCIETE          : GFI INFORMATIQUE                          *
      *  DATE DE CREATION : 18/08/2014                                *
      *---------------------------------------------------------------*
      *--               OBJECTIFS GENERAUX DU PROGRAMME             --*
      *---------------------------------------------------------------*
      * CRรฉER UN COMPTE-RENDU DES MOUVEMENTS BANCAIRE PAR CLIENT ET   *
      * POUR L'ENSEMBLE DES CLIENTS                                   *
      *---------------------------------------------------------------*
      *--               HISTORIQUE DES MODIFICATIONS                --*
      *---------------------------------------------------------------*
      * DATE  MODIF   ยง          NATURE DE LA MODIFICATION            *
      *---------------------------------------------------------------*
      *               ยง                                               *
      *               ยง                                               *
      *===============================================================*

       IDENTIFICATION DIVISION.
       PROGRAM-ID.      HNSO5M2.

      *                  ==============================               *
      *=================<   ENVIRONMENT     DIVISION   >==============*
      *                  ==============================               *
      *                                                               *
      *===============================================================*

      **********************
       ENVIRONMENT DIVISION.
      **********************

      *======================
       CONFIGURATION SECTION.
      *======================

      *--------------
       SPECIAL-NAMES.
      *--------------
           DECIMAL-POINT IS COMMA.

      *=====================
       INPUT-OUTPUT SECTION.
      *=====================

      *-------------
       FILE-CONTROL.
      *-------------

      *                      -------------------------------------------
      *                      F-MVTS-E FICHIER DES MOUVEMENTS BANCAIRES
      *                      -------------------------------------------
           SELECT  F-MVTS-E            ASSIGN TO INP001
                   FILE STATUS         IS WS-FS-MVTS.
      *                      -------------------------------------------

      *                      -------------------------------------------
      *                      F-ETATCLI-S FICHIER D ETAT DES CLIENTS
      *                      -------------------------------------------
           SELECT  F-ETATCLI-S         ASSIGN TO ETATCLI
                   FILE STATUS         IS WS-FS-ETATCLI.
      *                      -------------------------------------------

      *                      -------------------------------------------
      *                      F-ETATANO-S FICHIER D ETAT DES ANOMALIES
      *                      -------------------------------------------
           SELECT  F-ETATANO-S         ASSIGN TO ETATANO
                   FILE STATUS         IS WS-FS-ETATANO.
      *                      -------------------------------------------

      ***************
       DATA DIVISION.
      ***************

      *=============
       FILE SECTION.
      *=============

       FD  F-MVTS-E
           DATA RECORD IS FS-ENR-MVTS.
       01  FS-ENR-MVTS           PIC X(50).

       FD  F-ETATCLI-S
           DATA RECORD IS FS-ENR-ETATCLI.
       01  FS-ENR-ETATCLI        PIC X(80).

       FD  F-ETATANO-S
           DATA RECORD IS FS-ENR-ETATANO.
       01  FS-ENR-ETATANO        PIC X(80).

      *========================
       WORKING-STORAGE SECTION.
      *========================
       01  WS-FS-MVTS            PIC X(2).
      *FILE STATUS DU FICHIER F-MVTS-E

       01  WS-FS-ETATCLI         PIC X(2).
      *FILE STATUS DU FICHIER F-ETATCLI

       01  WS-FS-ETATANO         PIC X(2).
      *FILE STATUS DU FICHIER F-ETATANO

       01  WS-ENR-MVTS.
      *ENREGITREMENT DU FICHIER F-MVTS-E
           05 WS-MVTS-CPTE       PIC 9(10).
           05 WS-MVTS-DATE.
              10 WS-MVTS-ANNEE.
                 15 WS-MVTS-SS   PIC 99.
                 15 WS-MVTS-AA   PIC 99.
              10 WS-MVTS-MM      PIC 99.
              10 WS-MVTS-JJ      PIC 99.
           05 WS-MVTS-CODE       PIC X.
           05 WS-MVTS-MT         PIC 9(8)V99.
           05 FILLER             PIC X(21).

      ***************************************
      *DESCRIPTION DES LIGNE DU COMPTE RENDU*
      ***************************************

       01  WS-LCRE-ASTER.
           05 FILLER             PIC X(45) VALUE ALL '*'.
      *LIGNE DE 45 ETOILES
       01  WS-LCRE-TITRE.
           05 FILLER             PIC X(45) VALUE
      -          '*    COMPTE RENDU D''EXECUTION (COBTP02)     *'.
      *LIGNE CONTENANT LE TITRE DU COMPTE RENDU
       01  WS-LCRE-DETAIL.
           05 FILLER             PIC X(3)  VALUE '*'.
           05 WS-LCRE-DET-LIB-ED PIC X(30).
           05 FILLER             PIC X(3) VALUE ':'.
           05 WS-LCRE-DET-TOT-ED PIC ZZZZZ9.
           05 FILLER             PIC X(3) VALUE '  *'.
      *LIGNE DETAIL DU COMPTE RENDU

       01  WS-CCLI               PIC 9(6) VALUE ZERO.
      *NOMBRE DE CLIENTS
       01  WS-CMVT               PIC 9(6) VALUE ZERO.
      *NOMBRE DE MOUVEMENTS
       01  WS-CERR               PIC 9(6) VALUE ZERO.
      *NOMBRE DE MOUVEMENTS EN ERREUR
       01  WS-CRET               PIC 9(6) VALUE ZERO.
      *NOMBRE DE RETRAITS BANCAIRES
       01  WS-CCB                PIC 9(6) VALUE ZERO.
      *NOMBRE DE CARTE BLEUES
       01  WS-CDEP               PIC 9(6) VALUE ZERO.
      *NOMBRE DE DEPOT BANCAIRES
       01  WS-DATEAUJ.
           05 WS-DATEAUJ-AAAA      PIC 9(4).
           05 WS-DATEAUJ-MM        PIC 9(2).
           05 WS-DATEAUJ-JJ        PIC 9(2).
      *VARIABLE QUI VA RECUPERER LA DATE DU JOUR AFIN DE LA METTRE
      *AU BON FORMAT

      *******************************************
      *DESCRIPTION DES LIGNES DU FICHIER ETATCLI*
      *******************************************

       01  WS-LETAT-ASTER        PIC X(80) VALUE ALL '*'.
      *LIGNE DE 80 ETOILES
       01  WS-LETAT-ENT.
           05 FILLER             PIC X(20) VALUE
      -          '* NUMERO DE COMPTE:'.
           05 WS-LETAT-AST-CPTE-ED PIC 9(10).
           05 FILLER             PIC X(33) VALUE ALL SPACES.
           05 FILLER             PIC X(3) VALUE 'LE'.
           05 WS-LETAT-AST-DATE-ED.
              10 WS-LETAT-AST-JJ-ED PIC 9(2).
              10 FILLER          PIC X VALUE '/'.
              10 WS-LETAT-AST-MM-ED PIC 9(2).
              10 FILLER          PIC X VALUE '/'.
              10 WS-LETAT-AST-AAAA-ED PIC 9(4).
           05 FILLER             PIC X(2).
      *LIGNE ENTETE DE L ETAT CLIENT
       01  WS-LETAT-TITRE.
           05 FILLER             PIC X(47) VALUE '* LIBELLE'.
           05 FILLER             PIC X(15) VALUE '*     DEBIT'.
           05 FILLER             PIC X(16) VALUE '*     CREDIT   *'.
      *LIGNE DE TITRE DE L ETAT CLIENT
       01  WS-LETAT-DETAIL.
           05 FILLER             PIC X(2) VALUE '*'.
           05 WS-LETAT-DET-MVT-ED PIC X(45).
           05 FILLER             PIC X(3) VALUE ' *'.
           05 WS-LETAT-DET-DEBI-ED PIC ZZZZZZZZ9,99 BLANK WHEN ZERO.
           05 FILLER             PIC X(3) VALUE ' *'.
           05 WS-LETAT-DET-CRED-ED PIC ZZZZZZZZ9,99 BLANK WHEN ZERO.
           05 FILLER             PIC X(2) VALUE ' *'.
      *LIGNE DE DETAIL DE L ETAT CLIENT

       01  WS-LETAT-TOTAL.
           05 FILLER             PIC X(47) VALUE '* TOTAL'.
           05 FILLER             PIC X(3) VALUE ' *'.
           05 WS-LETAT-TOT-DEBI-ED PIC ZZZZZZZZ9,99 BLANK WHEN ZERO.
           05 FILLER             PIC X(3) VALUE ' *'.
           05 WS-LETAT-TOT-CRED-ED PIC ZZZZZZZZ9,99 BLANK WHEN ZERO.
           05 FILLER             PIC X(2) VALUE ' *'.
      *LIGNE DE TOTAL DE L ETAT CLIENT

       01  WS-DEBIT              PIC 9(9)V99.
      *CONTIENT LE DEBIT TOTAL DU CLIENT
       01  WS-CREDIT             PIC 9(9)V99.
      *CONTIENT LE CREDIT TOTAL DU CLIENT

       01  WS-MVTVALIDE            PIC 9.
      *=0 SI AUCUN MOUVEMENT VALIDE, 1 SINON.

      *******************************************
      *DESCRIPTION DES LIGNES DU FICHIER ETATANO*
      *******************************************

       01  WS-LANO-L1.
           05 FILLER               PIC X VALUE '*'.
           05 FILLER               PIC X(53) VALUE ALL '-'.
           05 FILLER               PIC X VALUE '*'.
      *LIGNE DE MISE EN FORME
       01  WS-LANO-TITRE           PIC X(55) VALUE
      -      '|  Nรธ COMPTE  |  CODE MOUVEMENT  |    MONTANT         |'.
      *LIGNE DE TITRE
       01  WS-LANO-L3.
           05 FILLER               PIC X VALUE '|'.
           05 FILLER               PIC X(53) VALUE ALL '-'.
           05 FILLER               PIC X VALUE '|'.
      *LIGNE DE MISE EN FORME
       01  WS-LANO-DETAIL.
           05 FILLER               PIC X(2) VALUE '|'.
           05 WS-LANO-DET-CPT-ED   PIC 9(10).
           05 FILLER               PIC X(11) VALUE '  |'.
           05 WS-LANO-DET-MVT-ED   PIC X.
           05 FILLER               PIC X(11) VALUE '         |'.
           05 WS-LANO-DET-MT-ED    PIC ZZZZZZZZZZZZ9,99.
           05 FILLER               PIC X(4) VALUE '   |'.
      *LIGNE DE DETAILS DU RAPPORT D'ANOMALIE

       01  WS-LANO-TOTAL.
           05 FILLER               PIC X(36) VALUE
      -     '| MONTANT TOTAL DES ANOMALIES    | '.
           05 WS-LANO-TOT-MT-ED    PIC ZZZZZZZZZZZZ9,99 VALUE ZERO.
      *LIGNE DU TOTAL DU RAPPORT D'ANOMALIE

       01  WS-PREMIEREANO          PIC 9 VALUE ZERO.
      *PERMET D'IDENTIFIER LA PREMIERE ANOMALIE AFIN DE CREER L ENTETE
       01  WS-TOTALMTANO           PIC 9(13)V99 VALUE ZERO.
      *MONTANT TOTAL DES MOUVEMENTS EN ANOMALIE

      *                  ==============================               *
      *=================<    PROCEDURE      DIVISION   >==============*
      *                  ==============================               *

      *===============================================================*
       PROCEDURE           DIVISION.

      *===============================================================*
      *===============================================================*
      *    STRUCTURATION DE LA PARTIE ALGORITHMIQUE DU PROGRAMME      *
      *---------------------------------------------------------------*
      *                                                               *
      *    1 : LES COMPOSANTS DU DIAGRAMME SONT CODES A L'AIDE DE     *
      *        DEUX PARAGRAPHES  XXXX-COMPOSANT-DEB                   *
      *                          XXYY-COMPOSANR-FIN                   *
      *                                                               *
      *    2 : XX REPRESENTE LE NIVEAU HIERARCHIQUE                   *
      *        YY DIFFERENCIE LES COMPOSANTS DE MEME NIVEAU           *
      *                                                               *
      *    3 : TOUT COMPOSANT EST PRECEDE D'UN CARTOUCHE DE           *
      *        COMMENTAIRE QUI EXPLICITE LE ROLE DU COMPOSANT         *
      *                                                               *
      *                                                               *
      *===============================================================*
      *===============================================================*


      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT PROGRAMME              *
      *               ==================================              *
      *OUVRE LE FICHIER F-MVTS-E, LE LIS ET INITIALISE LES VARIABLES  *
      *                                                               *
      *BOUCLE SUR LES LIGNES DU FICHIER F-MVTS-E                      *
      *                                                               *
      *FERME LE FICHIER F-MVTS-E, CALCUL LE NB DE MOUVEMENT, AFFICHE  *
      *LE COMPTE RENDU FINAL ET FERME LE PROGRAMME                    *
      *---------------------------------------------------------------*

       0000-PROGRAMME-DEB.
      *PREPARATION DU TRAITEMENT

           ACCEPT WS-DATEAUJ FROM DATE YYYYMMDD.
           MOVE WS-DATEAUJ-AAAA TO WS-LETAT-AST-AAAA-ED.
           MOVE WS-DATEAUJ-MM   TO WS-LETAT-AST-MM-ED.
           MOVE WS-DATEAUJ-JJ   TO WS-LETAT-AST-JJ-ED.

           PERFORM  6000-OPEN-FMVTS-DEB
              THRU  6000-OPEN-FMVTS-FIN.

           PERFORM  6010-READ-FMVTS-DEB
              THRU  6010-READ-FMVTS-FIN.

           PERFORM  6100-OPEN-ETATCLI-DEB
              THRU  6100-OPEN-ETATCLI-FIN.

           PERFORM  6200-OPEN-ETATANO-DEB
              THRU  6200-OPEN-ETATANO-FIN.

       0000-PROGRAMME-COR.
      *APPEL DU COMPOSANT SUIVANT

           PERFORM  1000-COMPTE-DEB
              THRU  1000-COMPTE-FIN
             UNTIL  WS-FS-MVTS = '10'.

       0000-PROGRAMME-FIN.
      *FIN DU TRAITEMENT

           COMPUTE WS-CMVT = WS-CERR
                           + WS-CRET
                           + WS-CCB
                           + WS-CDEP.

           PERFORM  8000-COMPTERENDU-DEB
              THRU  8000-COMPTERENDU-FIN.

           PERFORM  6020-CLOSE-FMVTS-DEB
              THRU  6020-CLOSE-FMVTS-FIN.

           PERFORM  6140-CLOSE-ETATCLI-DEB
              THRU  6140-CLOSE-ETATCLI-FIN.

           IF WS-PREMIEREANO = 1
           THEN
               PERFORM  6230-WRITE-ETATANOTOTAL-DEB
                  THRU  6230-WRITE-ETATANOTOTAL-FIN
           END-IF.

           PERFORM  6240-CLOSE-ETATANO-DEB
              THRU  6240-CLOSE-ETATANO-FIN.

           PERFORM  8999-STATISTIQUES-DEB
              THRU  8999-STATISTIQUES-FIN.

           PERFORM  9999-FIN-PROGRAMME-DEB
              THRU  9999-FIN-PROGRAMME-FIN.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT COMPTE                 *
      *               ==================================              *
      *AJOUTE UN AU COMPTE DE CLIENT, INITIALISE LES VALEURS DES      *
      *DIFFERENTS MOUVEMENTS DU CLIENT                                *
      *                                                               *
      *BOUCLE SUR LES MOUVEMENTS                                      *
      *                                                               *
      *CALCULE LA BALANCE TOTAL ET AFFICHE LE COMPTE RENDU CLIENT     *
      *****************************************************************

       1000-COMPTE-DEB.
      *PREPARATION DU TRAITEMENT

           MOVE WS-MVTS-CPTE TO WS-LETAT-AST-CPTE-ED.
           MOVE 0 TO WS-DEBIT WS-CREDIT WS-MVTVALIDE.
           ADD 1 TO WS-CCLI.

       1000-COMPTE-COR.
      *APPEL DU COMPOSANT SUIVANT

           PERFORM 2000-MOUVEMENT-DEB
              THRU 2000-MOUVEMENT-FIN
             UNTIL WS-LETAT-AST-CPTE-ED NOT = WS-MVTS-CPTE
                OR WS-FS-MVTS = '10'.

       1000-COMPTE-FIN.
      *FIN DU TRAITEMENT
           IF WS-MVTVALIDE = 1
           THEN
               PERFORM 6130-WRITE-ETATCLITOTAL-DEB
                  THRU 6130-WRITE-ETATCLITOTAL-FIN
           END-IF.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT COMPTE                 *
      *               ==================================              *
      *PASSE AU COMPOSANT SUIVANT SELON LA VALEUR DE WS-MVT-CODE      *
      *                                                               *
      *LIT LE PROCHAIN ENREGITREMENT DU FICHIER F-MVTS-E              *
      *                                                               *
      *****************************************************************

       2000-MOUVEMENT-DEB.

       2000-MOUVEMENT-COR.
      *APPEL DU COMPOSANT SUIVANT

           EVALUATE WS-MVTS-CODE
               WHEN 'R'   PERFORM 3000-RETRAIT-DEB
                             THRU 3000-RETRAIT-FIN
               WHEN 'C'   PERFORM 3010-CB-DEB
                             THRU 3010-CB-FIN
               WHEN 'D'   PERFORM 3020-DEPOT-DEB
                             THRU 3020-DEPOT-FIN
               WHEN OTHER PERFORM 3030-AUTRES-DEB
                             THRU 3030-AUTRES-FIN
           END-EVALUATE.

       2000-MOUVEMENT-FIN.
      *FIN DU TRAITEMENT

           PERFORM 6010-READ-FMVTS-DEB
              THRU 6010-READ-FMVTS-FIN.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT RETRAIT                *
      *               ==================================              *
      *AJOUTE UN AU COMPTEUR RETRAIT                                  *
      *AJOUT LE MONTANT DE LA TRANSACTION A LA SOMME DEBIT   DU CLIENT*
      *****************************************************************

       3000-RETRAIT-DEB.
           ADD 1 TO WS-CRET.
           ADD WS-MVTS-MT TO WS-DEBIT.

           IF WS-MVTVALIDE = 0
           THEN
               ADD 1 TO WS-MVTVALIDE
               PERFORM 6110-WRITE-ETATCLIENTETE-DEB
                  THRU 6110-WRITE-ETATCLIENTETE-FIN
           END-IF.

           MOVE 'RETRAIT DAB'   TO WS-LETAT-DET-MVT-ED.
           MOVE WS-MVTS-MT      TO WS-LETAT-DET-DEBI-ED.
           MOVE 0               TO WS-LETAT-DET-CRED-ED.
           PERFORM 6120-WRITE-ETATCLIDETAILS-DEB
              THRU 6120-WRITE-ETATCLIDETAILS-FIN.

       3000-RETRAIT-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT CB                     *
      *               ==================================              *
      *AJOUTE UN AU COMPTEUR CB                                       *
      *AJOUT LE MONTANT DE LA TRANSACTION A LA SOMME DEBIT   DU CLIENT*
      *****************************************************************

       3010-CB-DEB.
           ADD 1 TO WS-CCB.
           ADD WS-MVTS-MT TO WS-DEBIT.

           IF WS-MVTVALIDE = 0
           THEN
               ADD 1 TO WS-MVTVALIDE
               PERFORM 6110-WRITE-ETATCLIENTETE-DEB
                  THRU 6110-WRITE-ETATCLIENTETE-FIN
           END-IF.

           MOVE 'CARTE BLEUE'   TO WS-LETAT-DET-MVT-ED.
           MOVE WS-MVTS-MT      TO WS-LETAT-DET-DEBI-ED.
           MOVE 0               TO WS-LETAT-DET-CRED-ED.
           PERFORM 6120-WRITE-ETATCLIDETAILS-DEB
              THRU 6120-WRITE-ETATCLIDETAILS-FIN.

       3010-CB-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT DEPOT                  *
      *               ==================================              *
      *AJOUTE UN AU COMPTEUR DEPOT                                    *
      *AJOUT LE MONTANT DE LA TRANSACTION A LA SOMME CREDIT  DU CLIENT*
      *****************************************************************

       3020-DEPOT-DEB.
           ADD 1 TO WS-CDEP.
           ADD WS-MVTS-MT TO WS-CREDIT.

           IF WS-MVTVALIDE = 0
           THEN
               ADD 1 TO WS-MVTVALIDE
               PERFORM 6110-WRITE-ETATCLIENTETE-DEB
                  THRU 6110-WRITE-ETATCLIENTETE-FIN
           END-IF.

           MOVE 'DEPOT GUICHET' TO WS-LETAT-DET-MVT-ED
           MOVE 0               TO WS-LETAT-DET-DEBI-ED.
           MOVE WS-MVTS-MT      TO WS-LETAT-DET-CRED-ED.
           PERFORM 6120-WRITE-ETATCLIDETAILS-DEB
              THRU 6120-WRITE-ETATCLIDETAILS-FIN.

       3020-DEPOT-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT AUTRES                 *
      *               ==================================              *
      *AJOUTE UN AU COMPTEUR ERREUR                                   *
      *GENERE L ETAT ERREUR POUR LE MOUVEMENT EN COURS                *
      *****************************************************************

       3030-AUTRES-DEB.
           ADD 1 TO WS-CERR.
           ADD WS-MVTS-MT TO WS-TOTALMTANO.

           IF WS-PREMIEREANO = 0
           THEN
               PERFORM  6210-WRITE-ETATANOENTETE-DEB
                  THRU  6210-WRITE-ETATANOENTETE-FIN
               ADD 1 TO WS-PREMIEREANO
           END-IF.

           PERFORM 6220-WRITE-ETATANODETAILS-DEB
              THRU 6220-WRITE-ETATANODETAILS-FIN.

       3030-AUTRES-FIN.
           EXIT.

      *===============================================================*
      *===============================================================*
      *    STRUCTURATION DE LA PARTIE INDEPENDANTE DU PROGRAMME       *
      *---------------------------------------------------------------*
      *                                                               *
      *   6XXX-  : ORDRES DE MANIPULATION DES FICHIERS                *
      *   7XXX-  : TRANSFERTS ET CALCULS COMPLEXES                    *
      *   8XXX-  : ORDRES DE MANIPULATION DES EDITIONS                *
      *   9XXX-  : PROTECTION FIN DE PROGRAMME                        *
      *   9999-  : PROTECTION FIN DE PROGRAMME                        *
      *                                                               *
      *===============================================================*
      *===============================================================*

      *---------------------------------------------------------------*
      *   6XXX-  : ORDRES DE MANIPULATION DES FICHIERS                *
      *---------------------------------------------------------------*
      *                                                               *
       6000-OPEN-FMVTS-DEB.
           OPEN INPUT F-MVTS-E.
           IF WS-FS-MVTS NOT = '00'
           THEN
               IF WS-FS-MVTS = '10'
                 DISPLAY 'FICHIER MVTS VIDE'
               ELSE
                 DISPLAY 'ERREUR D''OUVERTURE DU FICHIER F-MVTS-E'
      -                  ', CODE = ' WS-FS-MVTS
                 PERFORM 9999-ERREUR-PROGRAMME-DEB
                    THRU 9999-ERREUR-PROGRAMME-FIN
               END-IF
           END-IF.

       6000-OPEN-FMVTS-FIN.
           EXIT.

       6010-READ-FMVTS-DEB.
           READ F-MVTS-E INTO WS-ENR-MVTS.
           IF WS-FS-MVTS NOT = '00' AND WS-FS-MVTS NOT = '10'
           THEN
               DISPLAY 'ERREUR DE LECTURE DU FICHIER F-MVTS-E, CODE = '
      -                WS-FS-MVTS
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.
       6010-READ-FMVTS-FIN.
           EXIT.

       6020-CLOSE-FMVTS-DEB.
           CLOSE F-MVTS-E.
           IF WS-FS-MVTS NOT = '00'
           THEN
               DISPLAY 'ERREUR DE FERMETURE DU FICHIER F-MVTS-E'
      -                ', CODE = ' WS-FS-MVTS
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

       6020-CLOSE-FMVTS-FIN.
           EXIT.

       6100-OPEN-ETATCLI-DEB.
           OPEN OUTPUT F-ETATCLI-S.

           IF WS-FS-ETATCLI NOT = '00'
           THEN
                 DISPLAY 'ERREUR D''OUVERTURE DU FICHIER F-ETATCLI'
      -                  ', CODE = ' WS-FS-ETATCLI
                 PERFORM 9999-ERREUR-PROGRAMME-DEB
                    THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

       6100-OPEN-ETATCLI-FIN.
           EXIT.

       6110-WRITE-ETATCLIENTETE-DEB.
           WRITE FS-ENR-ETATCLI
                 FROM WS-LETAT-ASTER AFTER PAGE
           END-WRITE.

           WRITE FS-ENR-ETATCLI
                 FROM WS-LETAT-ENT
           END-WRITE.

           WRITE FS-ENR-ETATCLI
                 FROM WS-LETAT-ASTER
           END-WRITE.

           WRITE FS-ENR-ETATCLI
                 FROM WS-LETAT-TITRE
           END-WRITE.

           WRITE FS-ENR-ETATCLI
                 FROM WS-LETAT-ASTER
           END-WRITE.

       6110-WRITE-ETATCLIENTETE-FIN.
           EXIT.

       6120-WRITE-ETATCLIDETAILS-DEB.
           WRITE FS-ENR-ETATCLI
                 FROM WS-LETAT-DETAIL
           END-WRITE.

       6120-WRITE-ETATCLIDETAILS-FIN.
           EXIT.

       6130-WRITE-ETATCLITOTAL-DEB.
           MOVE WS-DEBIT  TO WS-LETAT-TOT-DEBI-ED.
           MOVE WS-CREDIT TO WS-LETAT-TOT-CRED-ED.

           WRITE FS-ENR-ETATCLI
                 FROM WS-LETAT-ASTER
           END-WRITE.

           WRITE FS-ENR-ETATCLI
                 FROM WS-LETAT-TOTAL
           END-WRITE.

           WRITE FS-ENR-ETATCLI
                 FROM WS-LETAT-ASTER
           END-WRITE.

       6130-WRITE-ETATCLITOTAL-FIN.
           EXIT.

       6140-CLOSE-ETATCLI-DEB.
           CLOSE F-ETATCLI-S.
           IF WS-FS-ETATCLI NOT = '00'
           THEN
               DISPLAY 'ERREUR DE FERMETURE DU FICHIER F-ETATCLI-S'
      -                ' CODE = ' WS-FS-ETATCLI
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

       6140-CLOSE-ETATCLI-FIN.
           EXIT.

       6200-OPEN-ETATANO-DEB.
           OPEN OUTPUT F-ETATANO-S.

           IF WS-FS-ETATANO NOT = '00'
           THEN
                 DISPLAY 'ERREUR D''OUVERTURE DU FICHIER F-ETATANO'
      -                  ', CODE = ' WS-FS-ETATANO
                 PERFORM 9999-ERREUR-PROGRAMME-DEB
                    THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

       6200-OPEN-ETATANO-FIN.
           EXIT.

       6210-WRITE-ETATANOENTETE-DEB.
           WRITE FS-ENR-ETATANO
                 FROM WS-LANO-L1
           END-WRITE.

           WRITE FS-ENR-ETATANO
                 FROM WS-LANO-TITRE
           END-WRITE.

           WRITE FS-ENR-ETATANO
                 FROM WS-LANO-L3
           END-WRITE.

       6210-WRITE-ETATANOENTETE-FIN.
           EXIT.

       6220-WRITE-ETATANODETAILS-DEB.
           MOVE WS-MVTS-CPTE TO WS-LANO-DET-CPT-ED.
           MOVE WS-MVTS-CODE TO WS-LANO-DET-MVT-ED.
           MOVE WS-MVTS-MT   TO WS-LANO-DET-MT-ED.

           WRITE FS-ENR-ETATANO
                 FROM WS-LANO-DETAIL
           END-WRITE.

       6220-WRITE-ETATANODETAILS-FIN.
           EXIT.

       6230-WRITE-ETATANOTOTAL-DEB.
           WRITE FS-ENR-ETATANO
                 FROM WS-LANO-L3
           END-WRITE.

           MOVE WS-TOTALMTANO TO WS-LANO-TOT-MT-ED.
           WRITE FS-ENR-ETATANO
                 FROM WS-LANO-TOTAL
           END-WRITE.

           WRITE FS-ENR-ETATANO
                 FROM WS-LANO-L1
           END-WRITE.

       6230-WRITE-ETATANOTOTAL-FIN.
           EXIT.

       6240-CLOSE-ETATANO-DEB.
           CLOSE F-ETATANO-S.
           IF WS-FS-ETATANO NOT = '00'
           THEN
               DISPLAY 'ERREUR DE FERMETURE DU FICHIER F-ETATANO-S'
      -                ' CODE = ' WS-FS-ETATANO
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

       6240-CLOSE-ETATANO-FIN.
           EXIT.

      *
      *---------------------------------------------------------------*
      *   7XXX-  : TRANSFERTS ET CALCULS COMPLEXES                    *
      *---------------------------------------------------------------*
      *
      *7000-ORDRE-CALCUL-DEB.
      *
      *7000-ORDRE-CALCUL-FIN.
      *     EXIT.
      *
      *---------------------------------------------------------------*
      *   8XXX-  : ORDRES DE MANIPULATION DES EDITIONS                *
      *---------------------------------------------------------------*

       8000-COMPTERENDU-DEB.
           DISPLAY WS-LCRE-ASTER.
           DISPLAY WS-LCRE-TITRE.
           DISPLAY WS-LCRE-ASTER.
           MOVE 'NOMBRE DE CLIENTS' TO WS-LCRE-DET-LIB-ED.
           MOVE WS-CCLI             TO WS-LCRE-DET-TOT-ED.
           DISPLAY WS-LCRE-DETAIL.
           MOVE 'NOMBRE DE MOUVEMENTS' TO WS-LCRE-DET-LIB-ED.
           MOVE WS-CMVT                TO WS-LCRE-DET-TOT-ED.
           DISPLAY WS-LCRE-DETAIL.
           MOVE 'NOMBRE DE MOUVEMENTS ERRONES' TO WS-LCRE-DET-LIB-ED.
           MOVE WS-CERR                        TO WS-LCRE-DET-TOT-ED.
           DISPLAY WS-LCRE-DETAIL.
           MOVE 'NOMBRE DE RETRAITS' TO WS-LCRE-DET-LIB-ED.
           MOVE WS-CRET              TO WS-LCRE-DET-TOT-ED.
           DISPLAY WS-LCRE-DETAIL.
           MOVE 'NOMBRE DE CARTES BLEUES' TO WS-LCRE-DET-LIB-ED.
           MOVE WS-CCB                    TO WS-LCRE-DET-TOT-ED.
           DISPLAY WS-LCRE-DETAIL.
           MOVE 'NOMBRE DE DEPOTS' TO WS-LCRE-DET-LIB-ED.
           MOVE WS-CDEP            TO WS-LCRE-DET-TOT-ED.
           DISPLAY WS-LCRE-DETAIL.
           DISPLAY WS-LCRE-ASTER.

       8000-COMPTERENDU-FIN.
           EXIT.

       8999-STATISTIQUES-DEB.

            DISPLAY '************************************************'
            DISPLAY '*     STATISTIQUES DU PROGRAMME HNSO5M2        *'
            DISPLAY '*     ==================================       *'
            DISPLAY '************************************************'.

       8999-STATISTIQUES-FIN.
            EXIT.

      *---------------------------------------------------------------*
      *   9XXX-  : ORDRES DE MANIPULATION DES SOUS-PROGRAMMES         *
      *---------------------------------------------------------------*
      *
      *9000-APPEL-SP-DEB.
      *
      *9000-APPEL-SP-FIN.
      *     EXIT.
      *
      *---------------------------------------------------------------*
      *   9999-  : PROTECTION FIN DE PROGRAMME                        *
      *---------------------------------------------------------------*

       9999-FIN-PROGRAMME-DEB.

            DISPLAY '*==============================================*'
            DISPLAY '*     FIN NORMALE DU PROGRAMME HNSO5M2         *'
            DISPLAY '*==============================================*'
            STOP RUN.

       9999-FIN-PROGRAMME-FIN.
            EXIT.

       9999-ERREUR-PROGRAMME-DEB.

            DISPLAY '*==============================================*'
            DISPLAY '*        UNE ANOMALIE A ETE DETECTEE           *'
            DISPLAY '*     FIN ANORMALE DU PROGRAMME HNSO5M2        *'
            DISPLAY '*==============================================*'
            MOVE 12 TO RETURN-CODE.
            STOP RUN.

       9999-ERREUR-PROGRAMME-FIN.
            EXIT.


CBL    MAP,LIST,SSRANGE,FDUMP
      *===============================================================*
      *--                INFORMATIONS GENERALES                     --*
      *---------------------------------------------------------------*
      *  NOM DU PROGRAMME : HNSO5M3                                   *
      *  NOM DU REDACTEUR : REVERE ALAIN                              *
      *  SOCIETE          : GFI INFORMATIQUE                          *
      *  DATE DE CREATION : 20/08/2014                                *
      *---------------------------------------------------------------*
      *--               OBJECTIFS GENERAUX DU PROGRAMME             --*
      *---------------------------------------------------------------*
      *CRรฉER :                                                        *
      *       - UN COMPTE RENDU GLOBAL DES MOUVEMENTS ET DES CLIENTS  *
      *       - UN COMPTE RENDU DรฉTAILLรฉ DES MOUVEMENTS PAR COMPTE    *
      *       - UN รฉTAT D'ANALYSE DES ANOMALIES (CODES MOUVEMENTS     *
      * รฉRONNรฉS                                                       *
      *       - UN FICHIER CLIENT QUI CONTIENDRA LES DONNรฉES COMBINรฉES*
      * DU FICHIER CLIENT EN ENTRรฉE ET DU FICHIER MOUVEMENT           *
      *---------------------------------------------------------------*
      *--               HISTORIQUE DES MODIFICATIONS                --*
      *---------------------------------------------------------------*
      * DATE  MODIF   ยง          NATURE DE LA MODIFICATION            *
      *---------------------------------------------------------------*
      * 22/08/2014    ยง CORRECTIONS APPORTEES AU PROGRAMME            *
      *===============================================================*

       IDENTIFICATION DIVISION.
       PROGRAM-ID.      HNSO5M3.

      *                  ==============================               *
      *=================<   ENVIRONMENT     DIVISION   >==============*
      *                  ==============================               *
      *                                                               *
      *===============================================================*

      **********************
       ENVIRONMENT DIVISION.
      **********************

      *======================
       CONFIGURATION SECTION.
      *======================

      *--------------
       SPECIAL-NAMES.
      *--------------
           DECIMAL-POINT IS COMMA.

      *=====================
       INPUT-OUTPUT SECTION.
      *=====================

      *-------------
       FILE-CONTROL.
      *-------------

      ********************
      *FICHIERS EN ENTREE*
      ********************

      *                      -------------------------------------------
      *                      F-MVTS-E : FICHIER DES MOUVEMENTS
      *                      -------------------------------------------
           SELECT  F-MVTS-E            ASSIGN TO INP001
                   FILE STATUS         IS WS-FS-MVTS-E.
      *                      -------------------------------------------

      *                      -------------------------------------------
      *                      F-CPTE-E : FICHIER DES COMPTES EN ENTREE
      *                      -------------------------------------------
           SELECT  F-CPTE-E            ASSIGN TO INP002
                   FILE STATUS         IS WS-FS-CPTE-E.
      *                      -------------------------------------------

      ********************
      *FICHIERS EN SORTIE*
      ********************

      *                      -------------------------------------------
      *                      F-CPTE-S : FICHIER DES COMPTES EN SORTIE
      *                      -------------------------------------------
           SELECT  F-CPTE-S            ASSIGN TO OUT001
                   FILE STATUS         IS WS-FS-CPTE-S.
      *                      -------------------------------------------

      *                      -------------------------------------------
      *                      F-ETATCLI-S : FICHIER D ETAT DES CLIENTS
      *                      -------------------------------------------
           SELECT  F-ETATCLI-S         ASSIGN TO ETATCLI
                   FILE STATUS         IS WS-FS-ETATCLI-S.
      *                      -------------------------------------------

      *                      -------------------------------------------
      *                      F-ETATANO-S : FICHIER D ETAT DES ANOMALIES
      *                      -------------------------------------------
           SELECT  F-ETATANO-S         ASSIGN TO ETATANO
                   FILE STATUS         IS WS-FS-ETATANO-S.
      *                      -------------------------------------------

      ***************
       DATA DIVISION.
      ***************

      *=============
       FILE SECTION.
      *=============

       FD  F-MVTS-E
           RECORD CONTAINS 50 CHARACTERS.
       01  FS-ENRG-F-MVTS            PIC X(50).

       FD  F-CPTE-E
           RECORD CONTAINS 50 CHARACTERS.
       01  FS-ENRG-F-CPTE            PIC X(50).

       FD  F-CPTE-S
           RECORD CONTAINS 50 CHARACTERS.
       01  FS-ENRG-F-CPTS            PIC X(50).

       FD  F-ETATCLI-S
           RECORD CONTAINS 78 CHARACTERS.
       01  FS-ENRG-F-ETATCLI         PIC X(78).

       FD  F-ETATANO-S
           RECORD CONTAINS 78 CHARACTERS.
       01  FS-ENRG-F-ETATANO         PIC X(78).

      *========================
       WORKING-STORAGE SECTION.
      *========================
      *      -------------------------------------------------        *
      *-----< DESCRIPTION DES ENREGISTREMENTS DU FICHIER MVTS >-------*
      *      -------------------------------------------------        *
      *
       01  WS-ENRG-F-MVTS.
         05  WS-MVTS-CPTE                        PIC 9(10).
         05  WS-MVTS-DATE.
             10  WS-MVTS-ANNEE.
                 15  WS-MVTS-SS                  PIC 9(2).
                 15  WS-MVTS-AA                  PIC 9(2).
             10  WS-MVTS-MM                      PIC 9(2).
             10  WS-MVTS-JJ                      PIC 9(2).
         05  WS-MVTS-CODE                        PIC X.
             88  WS-MVTS-CODE-RETRAIT            VALUE 'R'.
             88  WS-MVTS-CODE-DEPOT              VALUE 'D'.
             88  WS-MVTS-CODE-CB                 VALUE 'C'.
         05  WS-MVTS-MT                          PIC 9(8)V99.
         05  FILLER                              PIC X(21) VALUE SPACES.

       01  WS-FS-MVTS-E                          PIC XX.
           88 WS-FS-MVTS-FINFICHIER                 VALUE '10'.
           88 WS-FS-MVTS-OPERATIONOK                VALUE '00'.

      *       ------------------------------------------------       *
      *------< DEFINITION DES ENREGISTREMENTS DU FICHIER CPTE >------*
      *       ------------------------------------------------       *
      *
       01  WS-ENRG-F-CPTE.
         05  WS-CPTE-CPTE                        PIC 9(10).
         05  WS-CPTE-DCREA.
                 10  WS-CPTE-DCREA-SSAA.
                       15  WS-CPTE-DCREA-SS      PIC 9(2).
                       15  WS-CPTE-DCREA-AA      PIC 9(2).
                 10  WS-CPTE-DCREA-MM            PIC 9(2).
                 10  WS-CPTE-DCREA-JJ            PIC 9(2).
         05  WS-CPTE-SOLDE                       PIC S9(8)V99.
         05  WS-CPTE-DMAJ.
                 10  WS-CPTE-DMAJ-SSAA.
                       15 WS-CPTE-DMAJ-SS        PIC 9(2).
                       15 WS-CPTE-DMAJ-AA        PIC 9(2).
                 10  WS-CPTE-DMAJ-MM             PIC 9(2).
                 10  WS-CPTE-DMAJ-JJ             PIC 9(2).
         05  FILLER                              PIC X(14) VALUE SPACES.

       01  WS-FS-CPTE-E                          PIC XX.
           88 WS-FS-CPTE-FINFICHIER              VALUE '10'.
           88 WS-FS-CPTE-OPERATIONOK             VALUE '00'.

      *       ------------------------------------------------        *
      *------< DEFINITION DES ENREGISTREMENTS DU FICHIER CPTS >-------*
      *       ------------------------------------------------        *
      *
       01  WS-ENRG-F-CPTS.
      *===> WS-CPTS-CPTS -> WS-CPTS-CPTE
         05  WS-CPTS-CPTE                        PIC 9(10).
         05  WS-CPTS-DCREA.
                 10  WS-CPTS-DCREA-SSAA.
                       15  WS-CPTS-DCREA-SS      PIC 9(2).
                       15  WS-CPTS-DCREA-AA      PIC 9(2).
                 10  WS-CPTS-DCREA-MM            PIC 9(2).
                 10  WS-CPTS-DCREA-JJ            PIC 9(2).
         05  WS-CPTS-SOLDE                       PIC S9(8)V99.
         05  WS-CPTS-DMAJ.
                 10  WS-CPTS-DMAJ-SSAA.
                       15 WS-CPTS-DMAJ-SS        PIC 9(2).
                       15 WS-CPTS-DMAJ-AA        PIC 9(2).
                 10  WS-CPTS-DMAJ-MM             PIC 9(2).
                 10  WS-CPTS-DMAJ-JJ             PIC 9(2).
         05  FILLER                              PIC X(14) VALUE SPACES.

       01  WS-FS-CPTE-S                          PIC XX.
           88 WS-FS-CPTS-FINFICHIER              VALUE '10'.
           88 WS-FS-CPTS-OPERATIONOK             VALUE '00'.

      **************************************
      *DEFINITION DES FILE STATUS MANQUANTS*
      **************************************

       01  WS-FS-ETATCLI-S                       PIC XX.
           88 WS-FS-ETATCLI-FINFICHIER           VALUE '10'.
           88 WS-FS-ETATCLI-OPERATIONOK          VALUE '00'.

       01  WS-FS-ETATANO-S                       PIC XX.
           88 WS-FS-ETATANO-FINFICHIER           VALUE '10'.
           88 WS-FS-ETATANO-OPERATIONOK          VALUE '00'.

      *                 -------------------------------               *
      *---------------< DEFINITION DES ZONES D'EDITION >--------------*
      *                 -------------------------------               *
      *
      *< DEFINITION DES ZONES D'EDITION DE L'ENTETE DE L'ETAT CLIENT >*
      *
       01  WS-ENTETE-L1.
         05 FILLER                    PIC X     VALUE  '!'.
         05 FILLER                    PIC X(76) VALUE ALL '-'.
         05 FILLER                    PIC X     VALUE  '!'.
      *
       01  WS-ENTETE-L2.
         05 FILLER                    PIC X     VALUE '!'.
         05 FILLER                    PIC X(76) VALUE SPACES.
         05 FILLER                    PIC X     VALUE '!'.
      *
       01  WS-ENTETE-L3.
         05 FILLER                    PIC X     VALUE '!'.
         05 FILLER                    PIC X(22) VALUE SPACES.
         05 FILLER                    PIC X(11) VALUE 'RELEVE DES '.
         05 FILLER                    PIC X(15) VALUE 'COMPTES CLIENTS'.
         05 FILLER                    PIC X(28) VALUE SPACES.
         05 FILLER                    PIC X     VALUE '!'.
      *
       01  WS-ENTETE-L4.
         05 FILLER                    PIC X     VALUE '!'.
         05 FILLER                    PIC X(22) VALUE SPACES.
         05 FILLER                    PIC X(26) VALUE ALL '='.
         05 FILLER                    PIC X(28) VALUE SPACES.
         05 FILLER                    PIC X     VALUE '!'.
      *
       01  WS-ENTETE-L5.
         05 FILLER                    PIC X     VALUE '!'.
         05 FILLER                    PIC X(26) VALUE SPACES.
         05 FILLER                    PIC X(14) VALUE 'SERVICE CLIENT'.
         05 FILLER                    PIC X(36) VALUE SPACES.
         05 FILLER                    PIC X     VALUE '!'.
      *
       01  WS-ENTETE-L6.
         05 FILLER                    PIC X     VALUE '!'.
         05 FILLER                    PIC X(26) VALUE SPACES.
         05 FILLER                    PIC X(14) VALUE ALL '='.
         05 FILLER                    PIC X(36) VALUE SPACES.
         05 FILLER                    PIC X     VALUE '!'.
      *
       01  WS-ENTETE-L7.
         05 FILLER                    PIC X     VALUE '!'.
         05 FILLER                    PIC X(25) VALUE SPACES.
         05 FILLER                    PIC X(3)  VALUE 'LE '.
         05 WS-ENTETE-L7-DATE.
            10 WS-L7-JJ-ED            PIC 9(2).
            10 FILLER                 PIC X(3)  VALUE ' / '.
            10 WS-L7-MM-ED            PIC 9(2).
            10 FILLER                 PIC X(3)  VALUE ' / '.
            10 WS-L7-SS-ED            PIC 9(2).
            10 WS-L7-AA-ED            PIC 9(2).
         05 FILLER                    PIC X(34)  VALUE SPACES.
         05 FILLER                    PIC X      VALUE '!'.
      *
       01  WS-ENTETE-L8.
         05 FILLER                    PIC X     VALUE '!'.
         05 FILLER                    PIC X(25) VALUE SPACES.
         05 FILLER                    PIC X(17) VALUE ALL '='.
         05 FILLER                    PIC X(34) VALUE SPACES.
         05 FILLER                    PIC X     VALUE '!'.
      *
      *------< DEFINITION DES ZONES D'EDITION DE L'ETAT CLIENT >------*
      *
       01  WS-LETAT-DATE-PAGE.
         05 FILLER                    PIC X     VALUE '!'.
         05 FILLER                    PIC X(11) VALUE ' RELEVE DU '.
         05 WS-LETAT-DATE-ED.
            10 WS-LETAT-JJ-ED         PIC 9(2).
            10 FILLER                 PIC X     VALUE '/'.
            10 WS-LETAT-MM-ED         PIC 9(2).
            10 FILLER                 PIC X(1)  VALUE '/'.
            10 WS-LETAT-SS-ED         PIC 9(2).
            10 WS-LETAT-AA-ED         PIC 9(2).
         05 FILLER                    PIC X(44) VALUE SPACES.
         05 FILLER                    PIC X(7)  VALUE 'PAGE : '.
         05 WS-LETAT-PAGE-ED          PIC Z9.
         05 FILLER                    PIC X(3)  VALUE '  !'.
      *
       01 WS-LETAT-NUMCPT.
         05 FILLER                    PIC X(2)  VALUE '! '.
         05 FILLER                    PIC X(9)  VALUE 'NUMERO DE'.
         05 FILLER                    PIC X(9)  VALUE ' COMPTE: '.
         05 WS-LETAT-NUMCPT-ED        PIC 9(10).
         05 FILLER                    PIC X(27) VALUE SPACES.
         05 WS-LETAT-OPEN-ED          PIC X(18).
         05 FILLER                    PIC X(3)  VALUE '  !'.
      *
       01  WS-LETAT-SOLD-OP.
         05 FILLER                    PIC X(2)  VALUE '! '.
         05 WS-LETAT-LIB-ED           PIC X(20) VALUE SPACES.
         05 FILLER                    PIC X(3)  VALUE ' :'.
         05 WS-LETAT-SOLD-ED          PIC ZZZZZZZ9,99DB.
         05 FILLER                    PIC X(19) VALUE SPACES.
         05 WS-LETAT-CLOSE-ED         PIC X(19) VALUE SPACES.
         05 FILLER                    PIC X(2)  VALUE ' !'.
      *
       01  WS-LETAT-TITRES.
         05 FILLER                    PIC X(9)  VALUE '! LIBELLE'.
         05 FILLER                    PIC X(20) VALUE SPACES.
         05 FILLER                    PIC X     VALUE '!'.
         05 FILLER                    PIC X(4)  VALUE SPACES.
         05 FILLER                    PIC X(4)  VALUE 'DATE'.
         05 FILLER                    PIC X(4)  VALUE SPACES.
         05 FILLER                    PIC X     VALUE '!'.
         05 FILLER                    PIC X(5)  VALUE SPACES.
         05 FILLER                    PIC X(5)  VALUE 'DEBIT'.
         05 FILLER                    PIC X(6)  VALUE SPACES.
         05 FILLER                    PIC X     VALUE '!'.
         05 FILLER                    PIC X(5)  VALUE SPACES.
         05 FILLER                    PIC X(6)  VALUE 'CREDIT'.
         05 FILLER                    PIC X(6)  VALUE SPACES.
         05 FILLER                    PIC X     VALUE '!'.
      *
       01  WS-LETAT-DETAIL-OP.
         05 FILLER                    PIC X(2)  VALUE '! '.
         05 WS-LETAT-OP-LIB-ED        PIC X(27).
         05 FILLER                    PIC X(2)  VALUE '! '.
         05 WS-LETAT-OP-JJ-ED         PIC 9(2).
         05 FILLER                    PIC X     VALUE '/'.
         05 WS-LETAT-OP-MM-ED         PIC 9(2).
         05 FILLER                    PIC X     VALUE '/'.
         05 WS-LETAT-OP-SS-ED         PIC 9(2).
         05 WS-LETAT-OP-AA-ED         PIC 9(2).
         05 FILLER                    PIC X(2)  VALUE ' !'.
         05 FILLER                    PIC X(4)  VALUE SPACES.
         05 WS-LETAT-OP-DEBIT-ED      PIC ZZZZZZZ9,99
                                      BLANK WHEN ZERO.
         05 FILLER                    PIC X(2)  VALUE ' !'.
         05 FILLER                    PIC X(4)  VALUE SPACES.
         05 WS-LETAT-OP-CREDIT-ED     PIC ZZZZZZZ9,99
                                      BLANK WHEN ZERO.
         05 FILLER                    PIC X(3)  VALUE '  !'.
      *
       01  WS-LETAT-TOT-OP.
         05 FILLER                    PIC X(42) VALUE
                                      '! TOTAL DES OPERATIONS'.
         05 FILLER                    PIC X     VALUE '!'.
         05 FILLER                    PIC X(4)  VALUE SPACES.
         05 WS-LETAT-TOTDB-ED         PIC ZZZZZZZ9,99 BLANK WHEN ZERO.
         05 FILLER                    PIC X(6)  VALUE ' !    '.
         05 WS-LETAT-TOTCR-ED         PIC ZZZZZZZ9,99 BLANK WHEN ZERO.
         05 FILLER                    PIC X(3)  VALUE '  !'.
      *
      *------< DEFINITION DES ZONES D'EDITION DE L'ETAT ANOMALIE >----*
      * LES LIGNES 1, 2, 7 ET 8 SONT COMMUNES AUX 2 ETATS, ELLES NE   *
      * SONT DONC PAS DECRITES UNE SECONDE FOIS DANS L'EDITION DE ANO *
      *
       01  WS-LANO-ENTETE-L3.
         05 FILLER                  PIC X     VALUE '!'.
         05 FILLER                  PIC X(12) VALUE SPACES.
         05 FILLER                  PIC X(10) VALUE 'DETAIL DES'.
         05 FILLER                  PIC X(13) VALUE ' ANOMALIES DU'.
         05 FILLER                  PIC X(13) VALUE ' FICHIER DES '.
         05 FILLER                  PIC X(11) VALUE 'MOUVEMENTS '.
         05 FILLER                  PIC X(9)  VALUE 'BANCAIRES'.
         05 FILLER                  PIC X(8)  VALUE SPACES.
         05 FILLER                  PIC X     VALUE '!'.
      *
       01  WS-LANO-ENTETE-L4.
         05 FILLER                  PIC X     VALUE '!'.
         05 FILLER                  PIC X(12) VALUE SPACES.
         05 FILLER                  PIC X(56) VALUE ALL '='.
         05 FILLER                  PIC X(8)  VALUE SPACES.
         05 FILLER                  PIC X     VALUE '!'.
      *
       01  WS-LANO-ENTETE-L5.
         05 FILLER                  PIC X     VALUE '!'.
         05 FILLER                  PIC X(26) VALUE SPACES.
         05 FILLER                  PIC X(8)  VALUE 'SERVICE '.
         05 FILLER                  PIC X(9)  VALUE 'COMPTABLE'.
         05 FILLER                  PIC X(33) VALUE SPACES.
         05 FILLER                  PIC X     VALUE '!'.
      *
       01  WS-LANO-ENTETE-L6.
         05 FILLER                  PIC X     VALUE '!'.
         05 FILLER                  PIC X(26) VALUE SPACES.
         05 FILLER                  PIC X(17) VALUE ALL '='.
         05 FILLER                  PIC X(33) VALUE SPACES.
         05 FILLER                  PIC X     VALUE '!'.
      *
       01  WS-LANO-L1.
         05 FILLER                  PIC X     VALUE '*'.
         05 FILLER                  PIC X(53) VALUE ALL '-'.
         05 FILLER                  PIC X     VALUE '*'.
      *
       01  WS-LANO-TITRES.
         05 FILLER                  PIC X(3)  VALUE '!  '.
         05 FILLER                  PIC X(11) VALUE 'Nยฐ COMPTE  '.
         05 FILLER                  PIC X(3)  VALUE '!  '.
         05 FILLER                  PIC X(14) VALUE 'CODE MOUVEMENT'.
         05 FILLER                  PIC X(3)  VALUE '  !'.
         05 FILLER                  PIC X(4)  VALUE SPACES.
         05 FILLER                  PIC X(7)  VALUE 'MONTANT'.
         05 FILLER                  PIC X(9)  VALUE SPACES.
         05 FILLER                  PIC X     VALUE '!'.
      *
       01  WS-LANO-L3.
         05 FILLER                  PIC X     VALUE '!'.
         05 FILLER                  PIC X(53) VALUE ALL '-'.
         05 FILLER                  PIC X     VALUE '!'.
      *
       01 WS-LANO-DETAIL.
         05 FILLER                PIC X(2)  VALUE '! '.
         05 WS-LANO-NUMCPT-ED     PIC 9(10).
         05 FILLER                PIC X(3)  VALUE '  !'.
         05 FILLER                PIC X(8)  VALUE SPACES.
         05 WS-LANO-CODEMVT-ED    PIC X.
         05 FILLER                PIC X(9)  VALUE SPACES.
         05 FILLER                PIC X     VALUE '!'.
         05 FILLER                PIC X(6)  VALUE SPACES.
         05 WS-LANO-MONTANT-ED    PIC ZZZZZZZ9,99 BLANK WHEN ZERO.
         05 FILLER                PIC X(3)  VALUE SPACES.
         05 FILLER                PIC X     VALUE '!'.
      *
       01  WS-LANO-TOTAL.
         05 FILLER                PIC X(2)  VALUE '! '.
         05 FILLER                PIC X(18) VALUE 'MONTANT TOTAL DES '.
         05 FILLER                PIC X(9)  VALUE 'ANOMALIES'.
         05 FILLER                PIC X(4)  VALUE SPACES.
         05 FILLER                PIC X     VALUE '!'.
         05 FILLER                PIC X(5)  VALUE SPACES.
         05 WS-LANO-TOTAL-ED      PIC ZZZZZZZZ9,99.
         05 FILLER                PIC X(3)  VALUE SPACES.
         05 FILLER                PIC X     VALUE '!'.
      *
       01  WS-LANO-OK.
         05 FILLER                PIC X(22)  VALUE ALL SPACES.
         05 FILLER                PIC X(15)  VALUE 'PAS D''ANOMALIES'.
         05 FILLER                PIC X(16)  VALUE ' DANS LE FICHIER'.
         05 FILLER                PIC X(4)   VALUE ' MVT'.
         05 FILLER                PIC X(21)  VALUE ALL SPACES.
      *
      *------< DEFINITION DES ZONES D'EDITION DE FIN D'EXECUTION >-----*
      *
       01  WS-LCRE-TITRE.
         05 FILLER                PIC X(45)  VALUE
                   '*    COMPTE-RENDU D''EXECUTION (COBTP03)     *'.
      *
       01  WS-LCRE-ASTER.
         05 FILLER                PIC X(45)  VALUE ALL '*'.
      *
       01  WS-LCRE-DETAIL.
         05 FILLER                PIC X(3)    VALUE '*'.
         05 WS-LCRE-DET-LIB-ED    PIC X(30)   VALUE SPACES.
         05 FILLER                PIC X(3)    VALUE ':'.
         05 WS-LCRE-DET-TOT-ED    PIC ZZZZZ9.
         05 FILLER                PIC X(3)    VALUE '  *'.

      ****************************************************
      *DEFINITION DES VARIABLES NECESSAIRES AU TRAITEMENT*
      ****************************************************

      *VARIABLE QUI PERMETTRA DE METTRE LA DATE DU JOUR AU BON FORMAT
       01  WS-DATEAUJ.
           05 WS-DATEAUJ-SS        PIC 9(2).
           05 WS-DATEAUJ-AA        PIC 9(2).
           05 WS-DATEAUJ-MM        PIC 9(2).
           05 WS-DATEAUJ-JJ        PIC 9(2).

      *VARIABLE CONTENANT LE NOMBRE DE CLIENTS
       01  WS-CCLI                 PIC S9(6) COMP VALUE ZERO.

      *VARIABLE CONTENANT LE NOMBRE DE NOUVEAUX CLIENTS
       01  WS-CCLINOUV             PIC S9(6) COMP VALUE ZERO.

      *VARIABLE CONTENANT LE NOMBRE DE CLIENTS SANS NOUVEAU MOUVEMENT
       01  WS-CCLISO               PIC S9(6) COMP VALUE ZERO.

      *VARIABLE CONTENANT LE NOMBRE DE CLIENTS STANDARDS
       01  WS-CCLISTND             PIC S9(6) COMP VALUE ZERO.

      *VARIABLE CONTENANT LE NOMBRE DE MOUVEMENTS
       01  WS-CMVT                 PIC S9(6) COMP VALUE ZERO.

      *VARIABLE CONTENANT LE NOMBRE DE MOUVEMENTS EN ERREUR
       01  WS-CERR                 PIC S9(6) COMP VALUE ZERO.

      *VARIABLE CONTENANT LE NOMBRE DE MOUVEMENTS DE RETRAIT
       01  WS-CRET                 PIC S9(6) COMP VALUE ZERO.

      *VARIABLE CONTENANT LE NOMBRE DE MOUVEMENTS DE CARTE BLEUE
       01  WS-CCB                  PIC S9(6) COMP VALUE ZERO.

      *VARIABLE CONTENANT LE NOMBRE DE MOUVEMENTS DE DEPOT
       01  WS-CDEP                 PIC S9(6) COMP VALUE ZERO.

      *VARIABLE CONTENANT LE NUMERO DE LA PAGE
       01  WS-PAGE                 PIC S9(6) COMP.

      *VARIABLE CONTENANT LE TOTAL DEBIT D'UN CLIENT
       01  WS-TOTDB                PIC S9(8)V99 COMP-3.

      *VARIABLE CONTENANT LE TOTAL CREDIT D'UN CLIENT
       01  WS-TOTCR                PIC S9(8)V99 COMP-3.

      *VARIABLE CONTENANT LE MONTANT TOTAL DES ANOMALIES
       01  WS-ANO-MNTTOTAL         PIC S9(9)V99 COMP VALUE ZERO.

      *
      *                  ==============================               *
      *=================<    PROCEDURE      DIVISION   >==============*
      *                  ==============================               *

      *===============================================================*
       PROCEDURE           DIVISION.

      *===============================================================*
      *===============================================================*
      *    STRUCTURATION DE LA PARTIE ALGORITHMIQUE DU PROGRAMME      *
      *---------------------------------------------------------------*
      *                                                               *
      *    1 : LES COMPOSANTS DU DIAGRAMME SONT CODES A L'AIDE DE     *
      *        DEUX PARAGRAPHES  XXXX-COMPOSANT-DEB                   *
      *                          XXYY-COMPOSANR-FIN                   *
      *                                                               *
      *    2 : XX REPRESENTE LE NIVEAU HIERARCHIQUE                   *
      *        YY DIFFERENCIE LES COMPOSANTS DE MEME NIVEAU           *
      *                                                               *
      *    3 : TOUT COMPOSANT EST PRECEDE D'UN CARTOUCHE DE           *
      *        COMMENTAIRE QUI EXPLICITE LE ROLE DU COMPOSANT         *
      *                                                               *
      *                                                               *
      *===============================================================*
      *===============================================================*


      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT PROGRAMME              *
      *               ==================================              *
      *OUVRE LES FICHIERS ET EDITE LES ENTETES CLIENTS ET ANOMALIE    *
      *                                                               *
      *BOUCLE SUR LE COMPOSANT ASSORTIMENT TANT QUE LES FICHIERS NE   *
      *SONT PAS FINIS                                                 *
      *                                                               *
      *EDITE LE COMPTE RENDU, LE BAS DE FICHIER ANOMALIE ET FERME LES *
      *FICHIERS                                                       *
      *---------------------------------------------------------------*

       0000-PROGRAMME-DEB.
           PERFORM  6000-OPEN-MVTS-DEB
              THRU  6000-OPEN-MVTS-FIN.

           PERFORM  6100-OPEN-CPTE-DEB
              THRU  6100-OPEN-CPTE-FIN.

           PERFORM  6200-OPEN-CPTS-DEB
              THRU  6200-OPEN-CPTS-FIN.

           PERFORM  6300-OPEN-ETATCLI-DEB
              THRU  6300-OPEN-ETATCLI-FIN.

           PERFORM  6400-OPEN-ETATANO-DEB
              THRU  6400-OPEN-ETATANO-FIN.

           PERFORM  6010-READ-MVTS-DEB
              THRU  6010-READ-MVTS-FIN.

           PERFORM  6110-READ-CPTE-DEB
              THRU  6110-READ-CPTE-FIN.

           ACCEPT WS-DATEAUJ FROM DATE YYYYMMDD.
           MOVE WS-DATEAUJ-SS TO WS-L7-SS-ED.
           MOVE WS-DATEAUJ-AA TO WS-L7-AA-ED.
           MOVE WS-DATEAUJ-MM TO WS-L7-MM-ED.
           MOVE WS-DATEAUJ-JJ TO WS-L7-JJ-ED.

           PERFORM  6310-WRITE-ETATCLI-PAGEUNE-DEB
              THRU  6310-WRITE-ETATCLI-PAGEUNE-FIN.

           PERFORM  6410-WRITE-ETATANO-PAGEUNE-DEB
              THRU  6410-WRITE-ETATANO-PAGEUNE-FIN.

           PERFORM  6420-WRITE-ETATANO-ENTETE-DEB
              THRU  6420-WRITE-ETATANO-ENTETE-FIN.

       0000-PROGRAMME-COR.

           PERFORM  1000-ASSORTIMENT-DEB
              THRU  1000-ASSORTIMENT-FIN
             UNTIL  WS-FS-MVTS-FINFICHIER AND WS-FS-CPTE-FINFICHIER.

       0000-PROGRAMME-FIN.

           COMPUTE WS-CCLI = WS-CCLINOUV + WS-CCLISO + WS-CCLISTND.

           COMPUTE WS-CMVT = WS-CERR + WS-CRET + WS-CCB + WS-CDEP.

           MOVE WS-ANO-MNTTOTAL TO WS-LANO-TOTAL-ED.

           PERFORM  6440-WRITE-ETATANO-TOTAL-DEB
              THRU  6440-WRITE-ETATANO-TOTAL-FIN.

           PERFORM  8000-COMPTERENDU-ENTETE-DEB
              THRU  8000-COMPTERENDU-ENTETE-FIN.

           MOVE 'NOMBRE DE CLIENTS'            TO WS-LCRE-DET-LIB-ED.

           MOVE WS-CCLI                        TO WS-LCRE-DET-TOT-ED.

           PERFORM  8010-COMPTERENDU-DETAILS-DEB
              THRU  8010-COMPTERENDU-DETAILS-FIN.

           MOVE 'NOMBRE DE CLIENTS NOUVEAUX'   TO WS-LCRE-DET-LIB-ED.

           MOVE WS-CCLINOUV                    TO WS-LCRE-DET-TOT-ED.

           PERFORM  8010-COMPTERENDU-DETAILS-DEB
              THRU  8010-COMPTERENDU-DETAILS-FIN.

           MOVE 'NOMBRE DE CLIENTS SANS OPรฉR.' TO WS-LCRE-DET-LIB-ED.

           MOVE WS-CCLISO                      TO WS-LCRE-DET-TOT-ED.

           PERFORM  8010-COMPTERENDU-DETAILS-DEB
              THRU  8010-COMPTERENDU-DETAILS-FIN.

           MOVE 'NOMBRE DE CLIENTS STANDARDS'  TO WS-LCRE-DET-LIB-ED.

           MOVE WS-CCLISTND                    TO WS-LCRE-DET-TOT-ED.

           PERFORM  8010-COMPTERENDU-DETAILS-DEB
              THRU  8010-COMPTERENDU-DETAILS-FIN.

           MOVE 'NOMBRE DE MOUVEMENTS'         TO WS-LCRE-DET-LIB-ED.

           MOVE WS-CMVT                        TO WS-LCRE-DET-TOT-ED.

           PERFORM  8010-COMPTERENDU-DETAILS-DEB
              THRU  8010-COMPTERENDU-DETAILS-FIN.

           MOVE 'NOMBRE DE MOUVEMENTS ERRONรฉS' TO WS-LCRE-DET-LIB-ED.

           MOVE WS-CERR                        TO WS-LCRE-DET-TOT-ED.

           PERFORM  8010-COMPTERENDU-DETAILS-DEB
              THRU  8010-COMPTERENDU-DETAILS-FIN.

           MOVE 'NOMBRE DE RETRAITS'           TO WS-LCRE-DET-LIB-ED.

           MOVE WS-CRET                        TO WS-LCRE-DET-TOT-ED.

           PERFORM  8010-COMPTERENDU-DETAILS-DEB
              THRU  8010-COMPTERENDU-DETAILS-FIN.

           MOVE 'NOMBRE DE CARTES BLEUES'      TO WS-LCRE-DET-LIB-ED.

           MOVE WS-CCB                         TO WS-LCRE-DET-TOT-ED.

           PERFORM  8010-COMPTERENDU-DETAILS-DEB
              THRU  8010-COMPTERENDU-DETAILS-FIN.

           MOVE 'NOMBRE DE DรฉPรดTS'             TO WS-LCRE-DET-LIB-ED.

           MOVE WS-CDEP                        TO WS-LCRE-DET-TOT-ED.

           PERFORM  8010-COMPTERENDU-DETAILS-DEB
              THRU  8010-COMPTERENDU-DETAILS-FIN.

           PERFORM  8020-COMPTERENDU-BDP-DEB
              THRU  8020-COMPTERENDU-BDP-FIN.

           PERFORM  6020-CLOSE-MVTS-DEB
              THRU  6020-CLOSE-MVTS-FIN.

           PERFORM  6120-CLOSE-CPTE-DEB
              THRU  6120-CLOSE-CPTE-FIN.

           PERFORM  6220-CLOSE-CPTS-DEB
              THRU  6220-CLOSE-CPTS-FIN.

           PERFORM  6350-CLOSE-ETATCLI-DEB
              THRU  6350-CLOSE-ETATCLI-FIN.

           PERFORM  6450-CLOSE-ETATANO-DEB
              THRU  6450-CLOSE-ETATANO-FIN.

           PERFORM  8999-STATISTIQUES-DEB
              THRU  8999-STATISTIQUES-FIN

           PERFORM  9999-FIN-PROGRAMME-DEB
              THRU  9999-FIN-PROGRAMME-FIN.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT ASSORTIMENT            *
      *               ====================================            *
      *OUVRE LES COMPOSANTS CLISANSMVT, CLIAVECMVT OU MVTSANSCLI SELON*
      *LES VALEURS DE NUMERO DE COMPTE DES FICHIERS COMPTE ET CLIENTS *
      *---------------------------------------------------------------*

       1000-ASSORTIMENT-DEB.
           EXIT.

       1000-ASSORTIMENT-COR.

           EVALUATE TRUE
           WHEN WS-CPTE-CPTE < WS-MVTS-CPTE
                                PERFORM 2000-CLISANSMVT-DEB
                                   THRU 2000-CLISANSMVT-FIN
           WHEN WS-CPTE-CPTE = WS-MVTS-CPTE
                                PERFORM 2010-CLIAVECMVT-DEB
                                   THRU 2010-CLIAVECMVT-FIN
           WHEN WS-CPTE-CPTE > WS-MVTS-CPTE
                                PERFORM 2020-MVTSANSCLI-DEB
                                   THRU 2020-MVTSANSCLI-FIN
           END-EVALUATE.

       1000-ASSORTIMENT-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT CLTSANSMVT             *
      *               ===================================             *
      *AJOUTE UN CLIENT SANS MOUVEMENT, ENREGISTRE LE CLIENT DANS LE  *
      *FICHIER COMPTE EN SORTIE SANS MODIFICATION ET LIT UN NOUVEL    *
      *ENREGISTREMENT DU FICHIER COMPTE                               *
      *---------------------------------------------------------------*

       2000-CLISANSMVT-DEB.

           ADD 1 TO WS-CCLISO.

           MOVE WS-ENRG-F-CPTE TO WS-ENRG-F-CPTS.

           PERFORM 6210-WRITE-CPTS-DEB
              THRU 6210-WRITE-CPTS-FIN.

           PERFORM 6110-READ-CPTE-DEB
              THRU 6110-READ-CPTE-FIN.

       2000-CLISANSMVT-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT CLTAVECMVT             *
      *               ===================================             *
      *AJOUTE UN CLIENT STANDARD, INITIALISE LES VALEURS DEBITS ET    *
      *CREDITS POUR LE CLIENT EN COURS ET EDITE L ENTETE DE CLIENT    *
      *                                                               *
      *BOUCLE SUR LE COMPOSANT TRTTRAITEMENT TANT QUE LE FICHIER      *
      *MOUVEMENT N EST PAS VIDE OU QU ON A PAS ATTEINT UN NOUVEAU     *
      *CLIENT DANS LE FICHIER MOUVEMENT                               *
      *                                                               *
      *EDITE LE SOLDE CLIENT ET LIT UN NOUVEL ENREGISTREMENT DU       *
      *FICHIER COMPTE                                                 *
      *---------------------------------------------------------------*

       2010-CLIAVECMVT-DEB.

           MOVE WS-CPTE-CPTE TO WS-CPTS-CPTE.

           MOVE WS-CPTE-DCREA TO WS-CPTS-DCREA.

           ADD 1 TO WS-CCLISTND.

           MOVE 0 TO WS-TOTDB WS-TOTCR.

           MOVE 1 TO WS-PAGE.

           MOVE WS-DATEAUJ-SS TO WS-LETAT-SS-ED.
           MOVE WS-DATEAUJ-AA TO WS-LETAT-AA-ED.
           MOVE WS-DATEAUJ-MM TO WS-LETAT-MM-ED.
           MOVE WS-DATEAUJ-JJ TO WS-LETAT-JJ-ED.

           MOVE WS-PAGE TO WS-LETAT-PAGE-ED.

           MOVE WS-CPTS-CPTE TO WS-LETAT-NUMCPT-ED.

           MOVE SPACE TO WS-LETAT-OPEN-ED.

           MOVE 'ANCIEN SOLDE' TO WS-LETAT-LIB-ED.

           MOVE WS-CPTE-SOLDE TO WS-LETAT-SOLD-ED.

           PERFORM 6320-WRITE-ETATCLI-ENTETE-DEB
              THRU 6320-WRITE-ETATCLI-ENTETE-FIN.

       2010-CLIAVECMVT-COR.

           PERFORM 3000-TRTMOUVEMENT-DEB
              THRU 3000-TRTMOUVEMENT-FIN
             UNTIL WS-FS-MVTS-FINFICHIER
                OR WS-CPTE-CPTE NOT = WS-MVTS-CPTE.

       2010-CLIAVECMVT-FIN.

           MOVE WS-TOTDB TO WS-LETAT-TOTDB-ED.

           MOVE WS-TOTCR TO WS-LETAT-TOTCR-ED.

           MOVE 'NOUVEAU SOLDE' TO WS-LETAT-LIB-ED.

           COMPUTE WS-CPTS-SOLDE = WS-CPTE-SOLDE + WS-TOTCR - WS-TOTDB.

           MOVE WS-CPTS-SOLDE TO WS-LETAT-SOLD-ED.

           PERFORM 6340-WRITE-ETATCLI-SOLDE-DEB
              THRU 6340-WRITE-ETATCLI-SOLDE-FIN.

           PERFORM 6210-WRITE-CPTS-DEB
              THRU 6210-WRITE-CPTS-FIN.

           PERFORM 6110-READ-CPTE-DEB
              THRU 6110-READ-CPTE-FIN.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT MVTSANSCLI             *
      *               ===================================             *
      *AJOUTE UN NOUVEAU CLIENT, INITIALISE LES VALEURS DEBITS ET     *
      *CREDITS POUR LE CLIENT EN COURS ET EDITE L ENTETE DE CLIENT    *
      *                                                               *
      *BOUCLE SUR LE COMPOSANT TRTTRAITEMENT TANT QUE LE FICHIER      *
      *MOUVEMENT N EST PAS VIDE OU QU ON A PAS ATTEINT UN NOUVEAU     *
      *CLIENT DANS LE FICHIER MOUVEMENT                               *
      *                                                               *
      *EDITE LE SOLDE CLIENT                                          *
      *---------------------------------------------------------------*

       2020-MVTSANSCLI-DEB.

           MOVE WS-MVTS-CPTE TO WS-CPTS-CPTE.

           MOVE WS-MVTS-DATE TO WS-CPTS-DCREA.

           ADD 1 TO WS-CCLINOUV.

           MOVE 0 TO WS-TOTDB WS-TOTCR.

           MOVE 1 TO WS-PAGE.

           MOVE WS-DATEAUJ-SS TO WS-LETAT-SS-ED.
           MOVE WS-DATEAUJ-AA TO WS-LETAT-AA-ED.
           MOVE WS-DATEAUJ-MM TO WS-LETAT-MM-ED.
           MOVE WS-DATEAUJ-JJ TO WS-LETAT-JJ-ED.

           MOVE WS-PAGE TO WS-LETAT-PAGE-ED.

           MOVE WS-CPTS-CPTE TO WS-LETAT-NUMCPT-ED.

           MOVE 'CREATION DE COMPTE' TO WS-LETAT-OPEN-ED.

           MOVE 'ANCIEN SOLDE' TO WS-LETAT-LIB-ED.

           MOVE 0 TO WS-LETAT-SOLD-ED.

           PERFORM 6320-WRITE-ETATCLI-ENTETE-DEB
              THRU 6320-WRITE-ETATCLI-ENTETE-FIN.

       2020-MVTSANSCLI-COR.

           PERFORM 3000-TRTMOUVEMENT-DEB
              THRU 3000-TRTMOUVEMENT-FIN
             UNTIL WS-FS-MVTS-FINFICHIER
                OR WS-CPTS-CPTE NOT = WS-MVTS-CPTE.

       2020-MVTSANSCLI-FIN.

           MOVE WS-TOTDB TO WS-LETAT-TOTDB-ED.

           MOVE WS-TOTCR TO WS-LETAT-TOTCR-ED.

           MOVE 'NOUVEAU SOLDE' TO WS-LETAT-LIB-ED.

           COMPUTE WS-CPTS-SOLDE = WS-TOTCR - WS-TOTDB.

           MOVE WS-CPTS-SOLDE TO WS-LETAT-SOLD-ED.

           PERFORM 6340-WRITE-ETATCLI-SOLDE-DEB
              THRU 6340-WRITE-ETATCLI-SOLDE-FIN.

           IF WS-TOTDB > 0 OR WS-TOTCR > 0
           THEN
               PERFORM 6210-WRITE-CPTS-DEB
                  THRU 6210-WRITE-CPTS-FIN.
           END-IF.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT TRTMOUVEMENT           *
      *               =====================================           *
      *OUVRE LE COMPOSANT TRTRETRAIT, TRTDEPOT, TRTCB OU TRTANOMALIE  *
      *SELON LE CODE DU MOUVEMENT                                     *
      *                                                               *
      *METS A JOUR LA DATE DE MAJ DU FICHIER COMPTE EN SORTIE ET LIT  *
      *UN NOUVEL ENREGISTREMENT DU FICHIER MOUVEMENT                  *
      *---------------------------------------------------------------*

       3000-TRTMOUVEMENT-DEB.
           EXIT.

       3000-TRTMOUVEMENT-COR.

           EVALUATE TRUE
           WHEN WS-MVTS-CODE-RETRAIT PERFORM 4000-TRTRETRAIT-DEB
                                        THRU 4000-TRTRETRAIT-FIN
           WHEN WS-MVTS-CODE-DEPOT   PERFORM 4010-TRTDEPOT-DEB
                                        THRU 4010-TRTDEPOT-FIN
           WHEN WS-MVTS-CODE-CB      PERFORM 4020-TRTCB-DEB
                                        THRU 4020-TRTCB-FIN
           WHEN OTHER                PERFORM 4030-TRTANOMALIE-DEB
                                        THRU 4030-TRTANOMALIE-FIN
           END-EVALUATE.

       3000-TRTMOUVEMENT-FIN.

           MOVE WS-MVTS-DATE TO WS-CPTS-DMAJ.

           PERFORM 6010-READ-MVTS-DEB
              THRU 6010-READ-MVTS-FIN.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT TRTRETRAIT             *
      *               ===================================             *
      *AJOUTE UN MOUVEMENT DE RETRAIT, AJOUTE LE MONTANT DU MOUVEMENT *
      *AU DEBIT ET EDITE LE DETAIL DU MOUVEMENT                       *
      *---------------------------------------------------------------*

       4000-TRTRETRAIT-DEB.

           ADD 1 TO WS-CRET.

           ADD WS-MVTS-MT TO WS-TOTDB.

           MOVE 'RETRAIT DAB' TO WS-LETAT-OP-LIB-ED.

           MOVE WS-MVTS-JJ TO WS-LETAT-OP-JJ-ED.

           MOVE WS-MVTS-MM TO WS-LETAT-OP-MM-ED.

           MOVE WS-MVTS-SS TO WS-LETAT-OP-SS-ED.

           MOVE WS-MVTS-AA TO WS-LETAT-OP-AA-ED.

           MOVE WS-MVTS-MT TO WS-LETAT-OP-DEBIT-ED.

           MOVE 0          TO WS-LETAT-OP-CREDIT-ED.

           PERFORM 6330-WRITE-ETATCLI-DETAILS-DEB
              THRU 6330-WRITE-ETATCLI-DETAILS-FIN.

       4000-TRTRETRAIT-FIN.
           EXIT.
      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT TRTDEPOT               *
      *               =================================               *
      *AJOUTE UN MOUVEMENT DE DEPOTT, AJOUTE LE MONTANT DU MOUVEMENT  *
      *AU CREDIT ET EDITE LE DETAIL DU MOUVEMENT                      *
      *---------------------------------------------------------------*

       4010-TRTDEPOT-DEB.

           ADD 1 TO WS-CDEP.

           ADD WS-MVTS-MT TO WS-TOTCR.

           MOVE 'DEPOT GUICHET' TO WS-LETAT-OP-LIB-ED.

           MOVE WS-MVTS-JJ TO WS-LETAT-OP-JJ-ED.

           MOVE WS-MVTS-MM TO WS-LETAT-OP-MM-ED.

           MOVE WS-MVTS-SS TO WS-LETAT-OP-SS-ED.

           MOVE WS-MVTS-AA TO WS-LETAT-OP-AA-ED.

           MOVE 0          TO WS-LETAT-OP-DEBIT-ED.

           MOVE WS-MVTS-MT TO WS-LETAT-OP-CREDIT-ED.

           PERFORM 6330-WRITE-ETATCLI-DETAILS-DEB
              THRU 6330-WRITE-ETATCLI-DETAILS-FIN.

       4010-TRTDEPOT-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT TRTCB                  *
      *               ==============================                  *
      *AJOUTE UN MOUVEMENT DE CB, AJOUTE LE MONTANT DU MOUVEMENT      *
      *AU DEBIT ET EDITE LE DETAIL DU MOUVEMENT                       *
      *---------------------------------------------------------------*

       4020-TRTCB-DEB.

           ADD 1 TO WS-CCB.

           ADD WS-MVTS-MT TO WS-TOTDB.

           MOVE 'CARTE BLEUE' TO WS-LETAT-OP-LIB-ED.

           MOVE WS-MVTS-JJ TO WS-LETAT-OP-JJ-ED.

           MOVE WS-MVTS-MM TO WS-LETAT-OP-MM-ED.

           MOVE WS-MVTS-SS TO WS-LETAT-OP-SS-ED.

           MOVE WS-MVTS-AA TO WS-LETAT-OP-AA-ED.

           MOVE WS-MVTS-MT TO WS-LETAT-OP-DEBIT-ED.

           MOVE 0          TO WS-LETAT-OP-CREDIT-ED.

           PERFORM 6330-WRITE-ETATCLI-DETAILS-DEB
              THRU 6330-WRITE-ETATCLI-DETAILS-FIN.

       4020-TRTCB-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT TRTANOMALIE            *
      *               ====================================            *
      *AJOUTE UN MOUVEMENT EN ERREUR, EDITE LE DETAIL DE L ANOMALIE ET*
      *AJOUTE LE MONTANT DE L ANOMALIE AU MONTANT TOTAL DES ANOMALIES *
      *---------------------------------------------------------------*

       4030-TRTANOMALIE-DEB.

           ADD 1 TO WS-CERR.

           MOVE WS-MVTS-CPTE TO WS-LANO-NUMCPT-ED.

           MOVE WS-MVTS-CODE TO WS-LANO-CODEMVT-ED.

           MOVE WS-MVTS-MT TO WS-LANO-MONTANT-ED.

           PERFORM 6430-WRITE-ETATANO-DETAILS-DEB
              THRU 6430-WRITE-ETATANO-DETAILS-FIN.

           ADD WS-MVTS-MT TO WS-ANO-MNTTOTAL.

       4030-TRTANOMALIE-FIN.
           EXIT.

      *===============================================================*
      *===============================================================*
      *    STRUCTURATION DE LA PARTIE INDEPENDANTE DU PROGRAMME       *
      *---------------------------------------------------------------*
      *                                                               *
      *   6XXX-  : ORDRES DE MANIPULATION DES FICHIERS                *
      *   7XXX-  : TRANSFERTS ET CALCULS COMPLEXES                    *
      *   8XXX-  : ORDRES DE MANIPULATION DES EDITIONS                *
      *   9XXX-  : PROTECTION FIN DE PROGRAMME                        *
      *   9999-  : PROTECTION FIN DE PROGRAMME                        *
      *                                                               *
      *===============================================================*
      *===============================================================*

      *---------------------------------------------------------------*
      *   6XXX-  : ORDRES DE MANIPULATION DES FICHIERS                *
      *---------------------------------------------------------------*
      *                                                               *
       6000-OPEN-MVTS-DEB.
           OPEN INPUT F-MVTS-E.
           IF NOT WS-FS-MVTS-OPERATIONOK
           THEN
               IF WS-FS-MVTS-FINFICHIER
                 DISPLAY 'FICHIER MVTS VIDE'
                 PERFORM 9999-FIN-PROGRAMME-DEB
                    THRU 9999-FIN-PROGRAMME-FIN
               ELSE
                 DISPLAY 'ERREUR D''OUVERTURE DU FICHIER F-MVTS-E'
      -                  ', CODE = ' WS-FS-MVTS-E
                 PERFORM 9999-ERREUR-PROGRAMME-DEB
                    THRU 9999-ERREUR-PROGRAMME-FIN
               END-IF
           END-IF.

       6000-OPEN-MVTS-FIN.
           EXIT.

       6010-READ-MVTS-DEB.

           READ F-MVTS-E INTO WS-ENRG-F-MVTS
           IF NOT WS-FS-MVTS-OPERATIONOK AND NOT WS-FS-MVTS-FINFICHIER
           THEN
               DISPLAY 'ERREUR DE LECTURE DU FICHIER F-MVTS-E, CODE = '
      -                WS-FS-MVTS-E
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           IF WS-FS-MVTS-FINFICHIER
           THEN
               MOVE HIGH-VALUE TO WS-ENRG-F-MVTS
           END-IF.
       6010-READ-MVTS-FIN.
           EXIT.

       6020-CLOSE-MVTS-DEB.

           CLOSE F-MVTS-E.
           IF NOT WS-FS-MVTS-OPERATIONOK
           THEN
               DISPLAY 'ERREUR DE FERMETURE DU FICHIER F-MVTS-E'
      -                ', CODE = ' WS-FS-MVTS-E
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

       6020-CLOSE-MVTS-FIN.
           EXIT.

       6100-OPEN-CPTE-DEB.

           OPEN INPUT F-CPTE-E.
           IF NOT WS-FS-CPTE-OPERATIONOK
           THEN
               IF WS-FS-CPTE-FINFICHIER
                 DISPLAY 'FICHIER COMPTE EN ENTREE VIDE'
                 PERFORM 9999-FIN-PROGRAMME-DEB
                    THRU 9999-FIN-PROGRAMME-FIN
               ELSE
                 DISPLAY 'ERREUR D''OUVERTURE DU FICHIER F-CPTE-E'
      -                  ', CODE = ' WS-FS-CPTE-E
                 PERFORM 9999-ERREUR-PROGRAMME-DEB
                    THRU 9999-ERREUR-PROGRAMME-FIN
               END-IF
           END-IF.

       6100-OPEN-CPTE-FIN.
           EXIT.

       6110-READ-CPTE-DEB.

           READ F-CPTE-E INTO WS-ENRG-F-CPTE
           IF NOT WS-FS-CPTE-OPERATIONOK AND NOT WS-FS-CPTE-FINFICHIER
           THEN
               DISPLAY 'ERREUR DE LECTURE DU FICHIER F-CPTE-E, CODE = '
      -                WS-FS-CPTE-E
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           IF WS-FS-CPTE-FINFICHIER
           THEN
               MOVE HIGH-VALUE TO WS-ENRG-F-CPTE
           END-IF.

       6110-READ-CPTE-FIN.
           EXIT.

       6120-CLOSE-CPTE-DEB.

           CLOSE F-CPTE-E.
           IF NOT WS-FS-CPTE-OPERATIONOK
           THEN
               DISPLAY 'ERREUR DE FERMETURE DU FICHIER F-CPTE-E'
      -                ', CODE = ' WS-FS-CPTE-E
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

       6120-CLOSE-CPTE-FIN.
           EXIT.

       6200-OPEN-CPTS-DEB.

           OPEN OUTPUT F-CPTE-S.
           IF NOT WS-FS-CPTS-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''OUVERTURE DU FICHIER F-CPTE-S'
      -                  ', CODE = ' WS-FS-CPTE-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

       6200-OPEN-CPTS-FIN.
           EXIT.

       6210-WRITE-CPTS-DEB.

           WRITE FS-ENRG-F-CPTS
                 FROM WS-ENRG-F-CPTS.
           IF NOT WS-FS-CPTS-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER F-CPTE-S'
                         ', CODE = ' WS-FS-CPTE-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

       6210-WRITE-CPTS-FIN.
           EXIT.

       6220-CLOSE-CPTS-DEB.

           CLOSE F-CPTE-S.
           IF NOT WS-FS-CPTS-OPERATIONOK
           THEN
               DISPLAY 'ERREUR DE FERMETURE DU FICHIER F-CPTE-S'
      -                ', CODE = ' WS-FS-CPTE-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

       6220-CLOSE-CPTS-FIN.
           EXIT.

       6300-OPEN-ETATCLI-DEB.

           OPEN OUTPUT F-ETATCLI-S.
           IF NOT WS-FS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''OUVERTURE DU FICHIER F-ETATCLI-S'
      -                  ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

       6300-OPEN-ETATCLI-FIN.
           EXIT.

       6310-WRITE-ETATCLI-PAGEUNE-DEB.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-ENTETE-L1 AFTER PAGE.
           IF NOT WS-FS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER F-ETATCLI-S'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-ENTETE-L2.
           IF NOT WS-FS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER F-ETATCLI-S'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-ENTETE-L3.
           IF NOT WS-FS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER F-ETATCLI-S'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-ENTETE-L4.
           IF NOT WS-FS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER F-ETATCLI-S'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-ENTETE-L2.
           IF NOT WS-FS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER F-ETATCLI-S'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-ENTETE-L2.
           IF NOT WS-FS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER F-ETATCLI-S'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-ENTETE-L5.
           IF NOT WS-FS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER F-ETATCLI-S'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-ENTETE-L6.
           IF NOT WS-FS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER F-ETATCLI-S'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-ENTETE-L2.
           IF NOT WS-FS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER F-ETATCLI-S'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-ENTETE-L7.
           IF NOT WS-FS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER F-ETATCLI-S'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-ENTETE-L8.
           IF NOT WS-FS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER F-ETATCLI-S'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-ENTETE-L2.
           IF NOT WS-FS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER F-ETATCLI-S'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-ENTETE-L1.
           IF NOT WS-FS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER F-ETATCLI-S'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

       6310-WRITE-ETATCLI-PAGEUNE-FIN.
           EXIT.

       6320-WRITE-ETATCLI-ENTETE-DEB.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-ENTETE-L1 AFTER PAGE.
           IF NOT WS-FS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER F-ETATCLI-S'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-LETAT-DATE-PAGE.
           IF NOT WS-FS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER F-ETATCLI-S'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-LETAT-NUMCPT.
           IF NOT WS-FS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER F-ETATCLI-S'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-ENTETE-L1.
           IF NOT WS-FS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER F-ETATCLI-S'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-LETAT-SOLD-OP.
           IF NOT WS-FS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER F-ETATCLI-S'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-ENTETE-L1.
           IF NOT WS-FS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER F-ETATCLI-S'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-LETAT-TITRES.
           IF NOT WS-FS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER F-ETATCLI-S'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-ENTETE-L1.
           IF NOT WS-FS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER F-ETATCLI-S'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

       6320-WRITE-ETATCLI-ENTETE-FIN.
           EXIT.

       6330-WRITE-ETATCLI-DETAILS-DEB.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-LETAT-DETAIL-OP.
           IF NOT WS-FS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER F-ETATCLI-S'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

       6330-WRITE-ETATCLI-DETAILS-FIN.
           EXIT.

       6340-WRITE-ETATCLI-SOLDE-DEB.
           WRITE FS-ENRG-F-ETATCLI

                 FROM WS-ENTETE-L1.
           IF NOT WS-FS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER F-ETATCLI-S'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-LETAT-TOT-OP.
           IF NOT WS-FS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER F-ETATCLI-S'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-ENTETE-L1.
           IF NOT WS-FS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER F-ETATCLI-S'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-LETAT-SOLD-OP.
           IF NOT WS-FS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER F-ETATCLI-S'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-ENTETE-L1.
           IF NOT WS-FS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER F-ETATCLI-S'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

       6340-WRITE-ETATCLI-SOLDE-FIN.
           EXIT.

       6350-CLOSE-ETATCLI-DEB.

           CLOSE F-ETATCLI-S.
           IF NOT WS-FS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR DE FERMETURE DU FICHIER F-ETATCLI-S'
      -                ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

       6350-CLOSE-ETATCLI-FIN.
           EXIT.

       6400-OPEN-ETATANO-DEB.

           OPEN OUTPUT F-ETATANO-S.
           IF NOT WS-FS-ETATANO-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''OUVERTURE DU FICHIER F-ETATANO-S'
      -                  ', CODE = ' WS-FS-ETATANO-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

       6400-OPEN-ETATANO-FIN.
           EXIT.

       6410-WRITE-ETATANO-PAGEUNE-DEB.

           WRITE FS-ENRG-F-ETATANO
                 FROM WS-ENTETE-L1 AFTER PAGE.
           IF NOT WS-FS-ETATANO-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER F-ETATANO-S'
                         ', CODE = ' WS-FS-ETATANO-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATANO
                 FROM WS-ENTETE-L2.
           IF NOT WS-FS-ETATANO-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER F-ETATANO-S'
                         ', CODE = ' WS-FS-ETATANO-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATANO
                 FROM WS-LANO-ENTETE-L3.
           IF NOT WS-FS-ETATANO-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER F-ETATANO-S'
                         ', CODE = ' WS-FS-ETATANO-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATANO
                 FROM WS-LANO-ENTETE-L4.
           IF NOT WS-FS-ETATANO-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER F-ETATANO-S'
                         ', CODE = ' WS-FS-ETATANO-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATANO
                 FROM WS-ENTETE-L2.
           IF NOT WS-FS-ETATANO-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER F-ETATANO-S'
                         ', CODE = ' WS-FS-ETATANO-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATANO
                 FROM WS-LANO-ENTETE-L5.
           IF NOT WS-FS-ETATANO-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER F-ETATANO-S'
                         ', CODE = ' WS-FS-ETATANO-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATANO
                 FROM WS-LANO-ENTETE-L6.
           IF NOT WS-FS-ETATANO-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER F-ETATANO-S'
                         ', CODE = ' WS-FS-ETATANO-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATANO
                 FROM WS-ENTETE-L2.
           IF NOT WS-FS-ETATANO-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER F-ETATANO-S'
                         ', CODE = ' WS-FS-ETATANO-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATANO
                 FROM WS-ENTETE-L7.
           IF NOT WS-FS-ETATANO-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER F-ETATANO-S'
                         ', CODE = ' WS-FS-ETATANO-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATANO
                 FROM WS-ENTETE-L8.
           IF NOT WS-FS-ETATANO-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER F-ETATANO-S'
                         ', CODE = ' WS-FS-ETATANO-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATANO
                 FROM WS-ENTETE-L2.
           IF NOT WS-FS-ETATANO-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER F-ETATANO-S'
                         ', CODE = ' WS-FS-ETATANO-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATANO
                 FROM WS-ENTETE-L1.
           IF NOT WS-FS-ETATANO-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER F-ETATANO-S'
                         ', CODE = ' WS-FS-ETATANO-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

       6410-WRITE-ETATANO-PAGEUNE-FIN.
           EXIT.

       6420-WRITE-ETATANO-ENTETE-DEB.

           WRITE FS-ENRG-F-ETATANO
                 FROM WS-LANO-L1.
           IF NOT WS-FS-ETATANO-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER F-ETATANO-S'
                         ', CODE = ' WS-FS-ETATANO-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATANO
                 FROM WS-LANO-TITRES.
           IF NOT WS-FS-ETATANO-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER F-ETATANO-S'
                         ', CODE = ' WS-FS-ETATANO-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATANO
                 FROM WS-LANO-L3.
           IF NOT WS-FS-ETATANO-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER F-ETATANO-S'
                         ', CODE = ' WS-FS-ETATANO-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

       6420-WRITE-ETATANO-ENTETE-FIN.
           EXIT.

       6430-WRITE-ETATANO-DETAILS-DEB.

           WRITE FS-ENRG-F-ETATANO
                 FROM WS-LANO-DETAIL.
           IF NOT WS-FS-ETATANO-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER F-ETATANO-S'
                         ', CODE = ' WS-FS-ETATANO-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

       6430-WRITE-ETATANO-DETAILS-FIN.
           EXIT.

       6440-WRITE-ETATANO-TOTAL-DEB.

           WRITE FS-ENRG-F-ETATANO
                 FROM WS-LANO-L3.
           IF NOT WS-FS-ETATANO-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER F-ETATANO-S'
                         ', CODE = ' WS-FS-ETATANO-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATANO
                 FROM WS-LANO-TOTAL.
           IF NOT WS-FS-ETATANO-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER F-ETATANO-S'
                         ', CODE = ' WS-FS-ETATANO-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATANO
                 FROM WS-LANO-L1.
           IF NOT WS-FS-ETATANO-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER F-ETATANO-S'
                         ', CODE = ' WS-FS-ETATANO-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

       6440-WRITE-ETATANO-TOTAL-FIN.
           EXIT.

       6450-CLOSE-ETATANO-DEB.

           CLOSE F-ETATANO-S.
           IF NOT WS-FS-ETATANO-OPERATIONOK
           THEN
               DISPLAY 'ERREUR DE FERMETURE DU FICHIER F-ETATANO-S'
      -                ', CODE = ' WS-FS-ETATANO-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

       6450-CLOSE-ETATANO-FIN.
           EXIT.

      *
      *---------------------------------------------------------------*
      *   7XXX-  : TRANSFERTS ET CALCULS COMPLEXES                    *
      *---------------------------------------------------------------*
      *
      *7000-ORDRE-CALCUL-DEB.
      *
      *7000-ORDRE-CALCUL-FIN.
      *     EXIT.
      *
      *---------------------------------------------------------------*
      *   8XXX-  : ORDRES DE MANIPULATION DES EDITIONS                *
      *---------------------------------------------------------------*

       8000-COMPTERENDU-ENTETE-DEB.

           DISPLAY WS-LCRE-ASTER.

           DISPLAY WS-LCRE-TITRE.

           DISPLAY WS-LCRE-ASTER.

       8000-COMPTERENDU-ENTETE-FIN.
           EXIT.

       8010-COMPTERENDU-DETAILS-DEB.

           DISPLAY WS-LCRE-DETAIL.

       8010-COMPTERENDU-DETAILS-FIN.
           EXIT.

       8020-COMPTERENDU-BDP-DEB.

           DISPLAY WS-LCRE-ASTER.

       8020-COMPTERENDU-BDP-FIN.
           EXIT.

       8999-STATISTIQUES-DEB.

            DISPLAY '************************************************'
            DISPLAY '*     STATISTIQUES DU PROGRAMME HNSO5M3        *'
            DISPLAY '*     ==================================       *'
            DISPLAY '************************************************'.

       8999-STATISTIQUES-FIN.
            EXIT.

      *---------------------------------------------------------------*
      *   9XXX-  : ORDRES DE MANIPULATION DES SOUS-PROGRAMMES         *
      *---------------------------------------------------------------*
      *
      *9000-APPEL-SP-DEB.
      *
      *9000-APPEL-SP-FIN.
      *     EXIT.
      *
      *---------------------------------------------------------------*
      *   9999-  : PROTECTION FIN DE PROGRAMME                        *
      *---------------------------------------------------------------*

       9999-FIN-PROGRAMME-DEB.

            DISPLAY '*==============================================*'
            DISPLAY '*     FIN NORMALE DU PROGRAMME HNSO5M3         *'
            DISPLAY '*==============================================*'
            STOP RUN.

       9999-FIN-PROGRAMME-FIN.
            EXIT.

       9999-ERREUR-PROGRAMME-DEB.

            DISPLAY '*==============================================*'
            DISPLAY '*        UNE ANOMALIE A ETE DETECTEE           *'
            DISPLAY '*     FIN ANORMALE DU PROGRAMME HNSO5M3        *'
            DISPLAY '*==============================================*'
            MOVE 12 TO RETURN-CODE.
            STOP RUN.

       9999-ERREUR-PROGRAMME-FIN.
            EXIT.
CBL    MAP,LIST,SSRANGE,FDUMP
      *===============================================================*
      *--                INFORMATIONS GENERALES                     --*
      *---------------------------------------------------------------*
      *  NOM DU PROGRAMME : HNSO5M4                                   *
      *  NOM DU REDACTEUR : REVERE ALAIN                              *
      *  SOCIETE          : GFI INFORMATIQUE                          *
      *  DATE DE CREATION : 22/08/2014                                *
      *---------------------------------------------------------------*
      *--               OBJECTIFS GENERAUX DU PROGRAMME             --*
      *---------------------------------------------------------------*
      *CE PROGRAMME METS A JOUR LE FICHIER COMPTE SELON LES MOUVEMENTS*
      *BANCAIRES ET EDITE DIFFERENTS ETATS.                           *
      *---------------------------------------------------------------*
      *--               HISTORIQUE DES MODIFICATIONS                --*
      *---------------------------------------------------------------*
      * DATE  MODIF   ยง          NATURE DE LA MODIFICATION            *
      *---------------------------------------------------------------*
      *               ยง                                               *
      *===============================================================*

       IDENTIFICATION DIVISION.
       PROGRAM-ID.      HNSO5M4.

      *                  ==============================               *
      *=================<   ENVIRONMENT     DIVISION   >==============*
      *                  ==============================               *
      *                                                               *
      *===============================================================*

      **********************
       ENVIRONMENT DIVISION.
      **********************

      *======================
       CONFIGURATION SECTION.
      *======================

      *--------------
       SPECIAL-NAMES.
      *--------------
           DECIMAL-POINT IS COMMA.

      *=====================
       INPUT-OUTPUT SECTION.
      *=====================

      *-------------
       FILE-CONTROL.
      *-------------

      *******************
      *FICHIER EN ENTREE*
      *******************

      *                      -------------------------------------------
      *                      F-MVT-E : FICHIER DES MOUVEMENTS BANCAIRE
      *                      -------------------------------------------
           SELECT  F-MVTS-E            ASSIGN TO INP001
                   FILE STATUS         IS WS-FS-MVTS-E.
      *                      -------------------------------------------

      **************************
      *FICHIER EN ENTREE/SORTIE*
      **************************

      *                      -------------------------------------------
      *                      F-CPTE-ES : FICHIER DES COMPTES
      *                      -------------------------------------------
           SELECT  F-CPTE-ES           ASSIGN TO IO001
                   ORGANIZATION        IS INDEXED
                   ACCESS MODE         IS RANDOM
                   RECORD KEY          IS FS-CPT-CPTE
                   FILE STATUS         IS WS-FS-CPTE-ES.
      *                      -------------------------------------------

      *******************
      *FICHIER EN SORTIE*
      *******************

      *                      -------------------------------------------
      *                      F-ETATCLI-S : FICHIER D'ETAT CLIENTS
      *                      -------------------------------------------
           SELECT  F-ETATCLI-S         ASSIGN TO ETATCLI
                   FILE STATUS         IS WS-FS-ETATCLI-S.
      *                      -------------------------------------------

      *                      -------------------------------------------
      *                      F-ETATANO-S : FICHIER D'ETAT ANOMALIES
      *                      -------------------------------------------
           SELECT  F-ETATANO-S         ASSIGN TO ETATANO
                   FILE STATUS         IS WS-FS-ETATANO-S.
      *                      -------------------------------------------
      ***************
       DATA DIVISION.
      ***************

      *=============
       FILE SECTION.
      *=============

       FD  F-MVTS-E
           RECORD CONTAINS 50 CHARACTERS.
       01  FS-ENRG-F-MVTS         PIC X(50).

       FD  F-CPTE-ES
           RECORD CONTAINS 50 CHARACTERS.
       01  FS-ENRG-F-CPT.
           05 FS-CPT-CPTE         PIC X(10).
           05 FILLER              PIC X(40).

       FD  F-ETATCLI-S
           RECORD CONTAINS 78 CHARACTERS.
       01  FS-ENRG-F-ETATCLI      PIC X(78).

       FD  F-ETATANO-S
           RECORD CONTAINS 78 CHARACTERS.
       01  FS-ENRG-F-ETATANO      PIC X(78).

      *========================
       WORKING-STORAGE SECTION.
      *========================

      **********************************
      *DESCRIPTION DES LIGNES D'EDITION*
      **********************************
           COPY TP4LEDIT.

      ************************************************
      *DESCRIPTION DE L'ENREGISTREMENT MVTS EN ENTRรฉE*
      ************************************************
           COPY TP4MVTS.

      ***************************************
      *DESCRIPTION DE LENREGISTREMENT COMPTE*
      ***************************************
           COPY TP4CPT.

      ******************************
      *DESCRIPTION DES FILES STATUS*
      ******************************
       01  WS-FS-MVTS-E                 PIC XX.
           88 WS-MVTS-OPERATIONOK       VALUE '00'.
           88 WS-MVTS-FINFICHIER        VALUE '10'.

       01  WS-FS-CPTE-ES                PIC XX.
           88 WS-CPTE-OPERATIONOK       VALUE '00'.
           88 WS-CPTE-FINFICHIER        VALUE '10'.
           88 WS-CPTE-ENRINEXISTANT     VALUE '23'.

       01  WS-FS-ETATCLI-S              PIC XX.
           88 WS-ETATCLI-OPERATIONOK    VALUE '00'.
           88 WS-ETATCLI-FINFICHIER     VALUE '10'.

       01  WS-FS-ETATANO-S              PIC XX.
           88 WS-ETATANO-OPERATIONOK       VALUE '00'.
           88 WS-ETATANO-FINFICHIER        VALUE '10'.

      ****************************
      *DECLARATIONS DES VARIABLES*
      ****************************
      *VARIABLE QUI PERMETTRA DE METTRE LA DATE DU JOUR AU BON FORMAT
       01  WS-DATEAUJ.
           05 WS-DATEAUJ-SS        PIC 9(2).
           05 WS-DATEAUJ-AA        PIC 9(2).
           05 WS-DATEAUJ-MM        PIC 9(2).
           05 WS-DATEAUJ-JJ        PIC 9(2).

      *VARIABLE CONTENANT LE NOMBRE DE CLIENTS
       01  WS-CCLI                 PIC S9(6) COMP VALUE ZERO.

      *VARIABLE CONTENANT LE NOMBRE DE NOUVEAUX CLIENTS
       01  WS-CCLINOUV             PIC S9(6) COMP VALUE ZERO.

      *VARIABLE CONTENANT LE NOMBRE DE CLIENTS CLOTURANT LEUR COMPTE
       01  WS-CCLICLO              PIC S9(6) COMP VALUE ZERO.

      *VARIABLE CONTENANT LE NOMBRE DE CLIENTS STANDARDS
       01  WS-CCLISTND             PIC S9(6) COMP VALUE ZERO.

      *VARIABLE CONTENANT LE NOMBRE DE CLIENTS ERRONES
       01  WS-CCLIERR              PIC S9(6) COMP VALUE ZERO.
      *VARIABLE CONTENANT LE NOMBRE DE MOUVEMENTS
       01  WS-CMVT                 PIC S9(6) COMP VALUE ZERO.

      *VARIABLE CONTENANT LE NOMBRE DE MOUVEMENTS EN ERREUR
       01  WS-CERR                 PIC S9(6) COMP VALUE ZERO.

      *VARIABLE CONTENANT LE NOMBRE DE MOUVEMENTS DE RETRAIT
       01  WS-CRET                 PIC S9(6) COMP VALUE ZERO.

      *VARIABLE CONTENANT LE NOMBRE DE MOUVEMENTS DE CARTE BLEUE
       01  WS-CCB                  PIC S9(6) COMP VALUE ZERO.

      *VARIABLE CONTENANT LE NOMBRE DE MOUVEMENTS DE DEPOT
       01  WS-CDEP                 PIC S9(6) COMP VALUE ZERO.

      *VARIABLE CONTENANT LE NUMERO DE LA PAGE DE L ETAT CLIENT
       01  WS-PAGE                 PIC S9(6) COMP.

      *VARIABLE CONTENANT LE NUMERO DE LA LIGNE DE L ETAT CLIENT
       01  WS-NUMLIGNE             PIC S9(6) COMP.

      *VARIABLE CONTENANT LE TOTAL DEBIT D'UN CLIENT
       01  WS-STOTDB               PIC S9(8)V99 COMP-3.

      *VARIABLE CONTENANT LE TOTAL CREDIT D'UN CLIENT
       01  WS-STOTCR               PIC S9(8)V99 COMP-3.

      *VARIABLE CONTENANT LE MONTANT TOTAL DES ANOMALIES
       01  WS-ANO-MNTTOTAL         PIC S9(9)V99 COMP VALUE ZERO.

      *VARIABLE QUI PERMETTRA D'IDENTIFIER FACILEMENT LE CODE MVT
       01  WS-CODEMOUVEMENT        PIC X.
           88 WS-CODERETRAIT       VALUE 'R'.
           88 WS-CODECB            VALUE 'C'.
           88 WS-CODEDEPOT         VALUE 'D'.
           88 WS-CODECLOTURE       VALUE 'K'.

      *VARIABLE QUI CONTIENT LE NUMERO DU CLIENT ETUDIE
       01  WS-CPTE                 PIC 9(10).

      *                  ==============================               *
      *=================<    PROCEDURE      DIVISION   >==============*
      *                  ==============================               *

      *===============================================================*
       PROCEDURE           DIVISION.

      *===============================================================*
      *===============================================================*
      *    STRUCTURATION DE LA PARTIE ALGORITHMIQUE DU PROGRAMME      *
      *---------------------------------------------------------------*
      *                                                               *
      *    1 : LES COMPOSANTS DU DIAGRAMME SONT CODES A L'AIDE DE     *
      *        DEUX PARAGRAPHES  XXXX-COMPOSANT-DEB                   *
      *                          XXYY-COMPOSANR-FIN                   *
      *                                                               *
      *    2 : XX REPRESENTE LE NIVEAU HIERARCHIQUE                   *
      *        YY DIFFERENCIE LES COMPOSANTS DE MEME NIVEAU           *
      *                                                               *
      *    3 : TOUT COMPOSANT EST PRECEDE D'UN CARTOUCHE DE           *
      *        COMMENTAIRE QUI EXPLICITE LE ROLE DU COMPOSANT         *
      *                                                               *
      *                                                               *
      *===============================================================*
      *===============================================================*


      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT PROGRAMME              *
      *               ==================================              *
      *OUVRE LES FICHIERS, รฉDITE LES PREMIERES PAGES DES รฉTATS CLIENTS
      *ET ANOMALIE.
      *
      *BOUCLE SUR LE COMPOSANT MOUVEMENT TANT QU'IL Y A ENCORE UN
      *ENREGISTREMENT DANS LE FICHIER MVTS
      *
      *EDITE LES FINS D'รฉTATS, LE COMPTE RENDU ET FERME LES FICHIERS
      *---------------------------------------------------------------*

       0000-PROGRAMME-DEB.

           PERFORM  6000-OPEN-MVTS-DEB
              THRU  6000-OPEN-MVTS-FIN.

           PERFORM  6100-OPEN-CPTE-DEB
              THRU  6100-OPEN-CPTE-FIN.

           PERFORM  6200-OPEN-ETATCLI-DEB
              THRU  6200-OPEN-ETATCLI-FIN.

           PERFORM  6300-OPEN-ETATANO-DEB
              THRU  6300-OPEN-ETATANO-DEB.

           PERFORM  6020-READ-MVTS-DEB
              THRU  6020-READ-MVTS-FIN.

           ACCEPT WS-DATEAUJ FROM DATE YYYYMMDD.
           MOVE WS-DATEAUJ-SS TO WS-L7-SS-ED WS-LETAT-SS-ED.
           MOVE WS-DATEAUJ-AA TO WS-L7-AA-ED WS-LETAT-AA-ED.
           MOVE WS-DATEAUJ-MM TO WS-L7-MM-ED WS-LETAT-MM-ED.
           MOVE WS-DATEAUJ-JJ TO WS-L7-JJ-ED WS-LETAT-JJ-ED.

           PERFORM  6220-WRITE-ETATCLI-PAGEUNE-DEB
              THRU  6220-WRITE-ETATCLI-PAGEUNE-FIN.

           PERFORM  6320-WRITE-ETATANO-PAGEUNE-DEB
              THRU  6320-WRITE-ETATANO-PAGEUNE-FIN.

           PERFORM  6330-WRITE-ETATANO-ENTETE-DEB
              THRU  6330-WRITE-ETATANO-ENTETE-FIN.

       0000-PROGRAMME-COR.

           PERFORM  1000-MOUVEMENT-DEB
              THRU  1000-MOUVEMENT-FIN
             UNTIL  WS-MVTS-FINFICHIER.

       0000-PROGRAMME-FIN.

           COMPUTE WS-CCLI = WS-CCLINOUV + WS-CCLISTND + WS-CCLICLO
      -                     + WS-CCLIERR.

           COMPUTE WS-CMVT = WS-CERR + WS-CRET + WS-CCB + WS-CDEP
      -                     + WS-CCLICLO.

           PERFORM  8000-COMPTERENDU-ENTETE-DEB
              THRU  8000-COMPTERENDU-ENTETE-FIN.

           MOVE 'NOMBRE DE CLIENTS'            TO WS-LCRE-DET-LIB-ED.

           MOVE WS-CCLI                        TO WS-LCRE-DET-TOT-ED.

           PERFORM  8010-COMPTERENDU-DETAILS-DEB
              THRU  8010-COMPTERENDU-DETAILS-FIN.

           MOVE 'NOMBRE DE CLIENTS NOUVEAUX'   TO WS-LCRE-DET-LIB-ED.

           MOVE WS-CCLINOUV                    TO WS-LCRE-DET-TOT-ED.

           PERFORM  8010-COMPTERENDU-DETAILS-DEB
              THRU  8010-COMPTERENDU-DETAILS-FIN.

           MOVE 'NOMBRE DE CLIENTS CLOTURE'    TO WS-LCRE-DET-LIB-ED.

           MOVE WS-CCLICLO                     TO WS-LCRE-DET-TOT-ED.

           PERFORM  8010-COMPTERENDU-DETAILS-DEB
              THRU  8010-COMPTERENDU-DETAILS-FIN.

           MOVE 'NOMBRE DE CLIENTS STANDARDS'  TO WS-LCRE-DET-LIB-ED.

           MOVE WS-CCLISTND                    TO WS-LCRE-DET-TOT-ED.

           PERFORM  8010-COMPTERENDU-DETAILS-DEB
              THRU  8010-COMPTERENDU-DETAILS-FIN.

           MOVE 'NOMBRE DE CLIENTS EN ERREUR'  TO WS-LCRE-DET-LIB-ED.

           MOVE WS-CCLIERR                     TO WS-LCRE-DET-TOT-ED.

           PERFORM  8010-COMPTERENDU-DETAILS-DEB
              THRU  8010-COMPTERENDU-DETAILS-FIN.

           MOVE 'NOMBRE DE MOUVEMENTS'         TO WS-LCRE-DET-LIB-ED.

           MOVE WS-CMVT                        TO WS-LCRE-DET-TOT-ED.

           PERFORM  8010-COMPTERENDU-DETAILS-DEB
              THRU  8010-COMPTERENDU-DETAILS-FIN.

           MOVE 'NOMBRE DE MOUVEMENTS ERRONรฉS' TO WS-LCRE-DET-LIB-ED.

           MOVE WS-CERR                        TO WS-LCRE-DET-TOT-ED.

           PERFORM  8010-COMPTERENDU-DETAILS-DEB
              THRU  8010-COMPTERENDU-DETAILS-FIN.

           MOVE 'NOMBRE DE RETRAITS'           TO WS-LCRE-DET-LIB-ED.

           MOVE WS-CRET                        TO WS-LCRE-DET-TOT-ED.

           PERFORM  8010-COMPTERENDU-DETAILS-DEB
              THRU  8010-COMPTERENDU-DETAILS-FIN.

           MOVE 'NOMBRE DE CARTES BLEUES'      TO WS-LCRE-DET-LIB-ED.

           MOVE WS-CCB                         TO WS-LCRE-DET-TOT-ED.

           PERFORM  8010-COMPTERENDU-DETAILS-DEB
              THRU  8010-COMPTERENDU-DETAILS-FIN.

           MOVE 'NOMBRE DE DรฉPOTS'             TO WS-LCRE-DET-LIB-ED.

           MOVE WS-CDEP                        TO WS-LCRE-DET-TOT-ED.

           PERFORM  8010-COMPTERENDU-DETAILS-DEB
              THRU  8010-COMPTERENDU-DETAILS-FIN.

           MOVE 'NOMBRE DE CLOTURE'            TO WS-LCRE-DET-LIB-ED.

           MOVE WS-CCLICLO                     TO WS-LCRE-DET-TOT-ED.

           PERFORM  8010-COMPTERENDU-DETAILS-DEB
              THRU  8010-COMPTERENDU-DETAILS-FIN.

           PERFORM  8020-COMPTERENDU-BDP-DEB
              THRU  8020-COMPTERENDU-BDP-FIN.

           IF WS-ANO-MNTTOTAL > 0
           THEN
               MOVE WS-ANO-MNTTOTAL TO WS-LANO-TOTAL-ED

               PERFORM  6350-WRITE-ETATANO-TOTAL-DEB
                  THRU  6350-WRITE-ETATANO-TOTAL-FIN
           ELSE
               PERFORM  6360-WRITE-ETATANO-OK-DEB
                  THRU  6360-WRITE-ETATANO-OK-FIN
           END-IF.

           PERFORM  6010-CLOSE-MVTS-DEB
              THRU  6010-CLOSE-MVTS-FIN.

           PERFORM  6110-CLOSE-CPTE-DEB
              THRU  6110-CLOSE-CPTE-FIN.

           PERFORM  6210-CLOSE-ETATCLI-DEB
              THRU  6210-CLOSE-ETATCLI-FIN.

           PERFORM  6310-CLOSE-ETATANO-DEB
              THRU  6310-CLOSE-ETATANO-FIN.

           PERFORM  8999-STATISTIQUES-DEB
              THRU  8999-STATISTIQUES-FIN

           PERFORM  9999-FIN-PROGRAMME-DEB
              THRU  9999-FIN-PROGRAMME-FIN.
            EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT MOUVEMENT              *
      *               ==================================              *
      *INITIALISE DIFFERENTES VARIABLES
      *
      *VรฉRIFIE SI LE COMPTE PRรฉSENT DANS L'ENREGISTREMENT DU FICHIER
      *MOUVEMENT EXISTE OU NON ET LANCE CLIENTAVECMVT OU MVTSANSCLIENT
      *---------------------------------------------------------------*

       1000-MOUVEMENT-DEB.

           MOVE WS-MVTS-CPTE TO FS-CPT-CPTE.

           PERFORM 6120-READ-CPTE-DEB
              THRU 6120-READ-CPTE-FIN.

           MOVE 1 TO WS-PAGE.

           MOVE WS-PAGE TO WS-LETAT-PAGE-ED.

           MOVE 'ANCIEN SOLDE' TO WS-LETAT-LIB-ED.

       1000-MOUVEMENT-COR.

           IF NOT WS-CPTE-ENRINEXISTANT
           THEN
               PERFORM 2000-CLIENTAVECMVT-DEB
                  THRU 2000-CLIENTAVECMVT-FIN
           ELSE
               PERFORM 2010-MVTSANSCLIENT-DEB
                  THRU 2010-MVTSANSCLIENT-FIN
           END-IF.

       1000-MOUVEMENT-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT CLIENTAVECMVT          *
      *               ======================================          *
      *INITIALISE DIFFERENTES VARIABLES
      *
      *VERIFIE LE CODE DU PREMIER ENREGISTREMENT ET LANCE LE COMPOSANT
      *CLOTURECOMPTE OU MODIFIERCLIENT SELON SA VALEUR
      *---------------------------------------------------------------*

       2000-CLIENTAVECMVT-DEB.

           MOVE WS-CPT-CPTE TO WS-CPTE WS-LETAT-NUMCPT-ED.

           MOVE WS-CPT-SOLDE TO WS-LETAT-SOLD-ED.

       2000-CLIENTAVECMVT-COR.

           IF WS-CODECLOTURE
           THEN
               PERFORM 3000-CLOTURECOMPTE-DEB
                  THRU 3000-CLOTURECOMPTE-FIN
           ELSE
               PERFORM 3010-MODIFIERCLIENT-DEB
                  THRU 3010-MODIFIERCLIENT-FIN
           END-IF.

       2000-CLIENTAVECMVT-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT MVTSANSCLIENT          *
      *               ======================================          *
      *INITIALISE DIFFERENTES VARIABLES
      *
      *VERIFIE LE CODE DU MOUVEMENT ET LANCE LE COMPOSANT ANONOUVCLIENT
      *OU AJOUTERCLIENT SELON SA VALEUR
      *---------------------------------------------------------------*

       2010-MVTSANSCLIENT-DEB.

           MOVE WS-MVTS-CPTE TO WS-CPT-CPTE WS-CPTE.

           MOVE WS-MVTS-DATE TO WS-CPT-DCREA.

           MOVE WS-CPT-CPTE TO WS-LETAT-NUMCPT-ED.

           MOVE 0 TO WS-LETAT-SOLD-ED.

       2010-MVTSANSCLIENT-COR.

           IF WS-CODECLOTURE
           THEN
               PERFORM 3020-ANONOUVCLIENT-DEB
                  THRU 3020-ANONOUVCLIENT-FIN
           ELSE
               PERFORM 3030-AJOUTERCLIENT-DEB
                  THRU 3030-AJOUTERCLIENT-FIN
           END-IF.

       2010-MVTSANSCLIENT-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT CLOTURECOMPTE          *
      *               ======================================          *
      *INITIALISE DIFFERENTES VARIABLES, EDITE L'รฉTAT DU COMPTE ET
      *LIT UN NOUVEL ENREGISTREMENT DU FICHIER MVTS. AJOUTE 1 AU NOMBRE
      *DE CLIENTS CLOTURANT LEUR COMPTE
      *
      *BOUCLE SUR LE COMPOSANT ANOMALIE SI DES ENREGISTREMENTS SONT
      *PRESENTS APRES L'ENREGISTREMENT DE CLOTURE
      *---------------------------------------------------------------*

       3000-CLOTURECOMPTE-DEB.

           MOVE 'CLOTURE DE COMPTE' TO WS-LETAT-OPEN-ED.

           PERFORM 6230-WRITE-ETATCLI-CLOTURE-DEB
              THRU 6230-WRITE-ETATCLI-CLOTURE-FIN.

           PERFORM 6020-READ-MVTS-DEB
              THRU 6020-READ-MVTS-FIN.

           ADD 1 TO WS-CCLICLO.

       3000-CLOTURECOMPTE-COR.

           PERFORM 4000-ANOMALIE-DEB
              THRU 4000-ANOMALIE-FIN
             UNTIL WS-MVTS-FINFICHIER
                OR WS-MVTS-CPTE NOT = WS-CPTE.

       3000-CLOTURECOMPTE-FIN.

           PERFORM 6130-DELETE-CPTE-DEB
              THRU 6130-DELETE-CPTE-FIN.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT MODIFIERCLIENT         *
      *               =======================================         *
      *INITIALISE DIFFERENTES VARIABLES, AJOUTE 1 AU COMPTEUR DE CLIENT
      *STANDARD ET EDITE L'ENTETE DE L'ETAT DU CLIENT
      *
      *BOUCLE SUR LE COMPOSANT TRTMOUVEMENT TANT QUE DES MOUVEMENTS
      *EXISTE POUR LE CLIENT EN COURS
      *
      *EDITE LE SOLDE DU CLIENT ET MODIFIE SES VALEURS DANS LE FICHIER
      *COMPTE
      *---------------------------------------------------------------*

       3010-MODIFIERCLIENT-DEB.

           ADD 1 TO WS-CCLISTND.

           MOVE ' ' TO WS-LETAT-OPEN-ED.

           PERFORM 6240-WRITE-ETATCLI-ENTETE-DEB
              THRU 6240-WRITE-ETATCLI-ENTETE-FIN.

           MOVE 0 TO WS-STOTDB WS-STOTCR WS-NUMLIGNE.

       3010-MODIFIERCLIENT-COR.

           PERFORM 4010-TRTMOUVEMENT-DEB
              THRU 4010-TRTMOUVEMENT-FIN
             UNTIL WS-MVTS-FINFICHIER
                OR WS-MVTS-CPTE NOT = WS-CPTE.

       3010-MODIFIERCLIENT-FIN.

           MOVE 'TOTAL DES OPERATIONS' TO WS-LETAT-TOTLB-ED.
           MOVE WS-STOTDB TO WS-LETAT-TOTDB-ED.

           MOVE WS-STOTCR TO WS-LETAT-TOTCR-ED.

           MOVE 'NOUVEAU SOLDE' TO WS-LETAT-LIB-ED.

           COMPUTE WS-CPT-SOLDE = WS-CPT-SOLDE + WS-STOTCR - WS-STOTDB.

           MOVE WS-CPT-SOLDE TO WS-LETAT-SOLD-ED.

           IF WS-STOTCR > 0 OR WS-STOTDB > 0
           THEN
               PERFORM 6140-REWRITE-CPTE-DEB
                  THRU 6140-REWRITE-CPTE-FIN
           END-IF.

           PERFORM 6250-WRITE-ETATCLI-SOLDE-DEB
              THRU 6250-WRITE-ETATCLI-SOLDE-FIN.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT ANONOUVCLIENT          *
      *               ======================================          *
      *AJOUTE 1 AU NOMBRE DE CLIENTS EN ERREUR, EDITE L'รฉTAT DU CLIENT
      *ET LANCE LE COMPOSANT ANOMALIE
      *---------------------------------------------------------------*

       3020-ANONOUVCLIENT-DEB.

           ADD 1 TO WS-CCLIERR.

           MOVE 'ANOMALIE CLIENT' TO WS-LETAT-OPEN-ED.

           PERFORM 6230-WRITE-ETATCLI-CLOTURE-DEB
              THRU 6230-WRITE-ETATCLI-CLOTURE-FIN.

       3020-ANONOUVCLIENT-COR.

           PERFORM 4000-ANOMALIE-DEB
              THRU 4000-ANOMALIE-FIN
             UNTIL WS-MVTS-FINFICHIER
                OR WS-MVTS-CPTE NOT = WS-CPTE.

       3020-ANONOUVCLIENT-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT AJOUTERCLIENT          *
      *               ======================================          *
      *INITIALISE DIFFERENTES VARIABLES, AJOUTE 1 AU NOMBRE DE NOUVEAUX
      *CLIENTS ET EDITE L'ENTETE DU CLIENT
      *
      *BOUCLE SUR LE COMPOSANT TRTMOUVEMENT POUR TRAITER LES DIFFรฉRENTS
      *MOUVEMENTS DU CLIENT
      *
      *EDITE LE SOLDE DU CLIENT ET AJOUTE LE CLIENT AU FICHIER COMPTE
      *---------------------------------------------------------------*

       3030-AJOUTERCLIENT-DEB.

           MOVE WS-MVTS-CPTE TO WS-CPT-CPTE.

           ADD 1 TO WS-CCLINOUV.

           MOVE 'CREATION DE COMPTE' TO WS-LETAT-OPEN-ED.

           MOVE 0 TO WS-CPT-SOLDE.

           MOVE WS-MVTS-DATE TO WS-CPT-DCREA.

           PERFORM 6240-WRITE-ETATCLI-ENTETE-DEB
              THRU 6240-WRITE-ETATCLI-ENTETE-FIN.

           MOVE 0 TO WS-STOTDB WS-STOTCR WS-NUMLIGNE.

       3030-AJOUTERCLIENT-COR.

           PERFORM 4010-TRTMOUVEMENT-DEB
              THRU 4010-TRTMOUVEMENT-FIN
             UNTIL WS-MVTS-FINFICHIER
                OR WS-MVTS-CPTE NOT = WS-CPTE.

       3030-AJOUTERCLIENT-FIN.

           MOVE 'TOTAL DES OPERATIONS' TO WS-LETAT-TOTLB-ED.

           MOVE WS-STOTDB TO WS-LETAT-TOTDB-ED.

           MOVE WS-STOTCR TO WS-LETAT-TOTCR-ED.

           MOVE 'NOUVEAU SOLDE' TO WS-LETAT-LIB-ED.

           COMPUTE WS-CPT-SOLDE = WS-CPT-SOLDE + WS-STOTCR - WS-STOTDB.

           MOVE WS-CPT-SOLDE TO WS-LETAT-SOLD-ED.

           PERFORM 6250-WRITE-ETATCLI-SOLDE-DEB
              THRU 6250-WRITE-ETATCLI-SOLDE-FIN.

           IF WS-STOTDB > 0 OR WS-STOTCR > 0
           THEN
               PERFORM 6150-WRITE-CPTE-DEB
                  THRU 6150-WRITE-CPTE-FIN
           END-IF.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT ANOMALIE               *
      *               =================================               *
      *LANCE LE COMPOSANT ANOMALIE
      *
      *LIT LE NOUVEL ENREGISTREMENT DU FICHIER MVTS
      *---------------------------------------------------------------*

       4000-ANOMALIE-DEB.
           EXIT.

       4000-ANOMALIE-COR.

           PERFORM 5000-TRTANOMALIE-DEB
              THRU 5000-TRTANOMALIE-FIN.

       4000-ANOMALIE-FIN.

           PERFORM 6020-READ-MVTS-DEB
              THRU 6020-READ-MVTS-FIN.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT TRTMOUVEMENT           *
      *               =====================================           *
      *LANCE LE COMPOSANT TRTRETRAIT,TRTDEPOT,TRTCB OU TRTANOMALIE
      *SELON LE CODE DU MOUVEMENT
      *
      *LIT UN NOUVEL ENREGISTREMENT DU FICHIER MVTS
      *---------------------------------------------------------------*

       4010-TRTMOUVEMENT-DEB.
           EXIT.

       4010-TRTMOUVEMENT-COR.

           EVALUATE TRUE
           WHEN WS-CODERETRAIT PERFORM 5010-TRTRETRAIT-DEB
                                  THRU 5010-TRTRETRAIT-FIN
           WHEN WS-CODEDEPOT   PERFORM 5020-TRTDEPOT-DEB
                                  THRU 5020-TRTDEPOT-FIN
           WHEN WS-CODECB      PERFORM 5030-TRTCB-DEB
                                  THRU 5030-TRTCB-FIN
           WHEN OTHER          PERFORM 5000-TRTANOMALIE-DEB
                                  THRU 5000-TRTANOMALIE-FIN
           END-EVALUATE.

       4010-TRTMOUVEMENT-FIN.

           PERFORM 6020-READ-MVTS-DEB
              THRU 6020-READ-MVTS-FIN.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT TRTANOMALIE            *
      *               ====================================            *
      *AJOUTE 1 AU COMPTEUR D ANOMALIE, EDITE LE DรฉTAIL DE L'ANOMALIE
      *---------------------------------------------------------------*

       5000-TRTANOMALIE-DEB.

           ADD 1 TO WS-CERR.

           MOVE WS-MVTS-CPTE TO WS-LANO-NUMCPT-ED.

           MOVE WS-MVTS-CODE TO WS-LANO-CODEMVT-ED.

           MOVE WS-MVTS-MT   TO WS-LANO-MONTANT-ED WS-ANO-MNTTOTAL.

           PERFORM 6340-WRITE-ETATANO-DETAILS-DEB
              THRU 6340-WRITE-ETATANO-DETAILS-FIN.

       5000-TRTANOMALIE-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT TRTRETRAIT             *
      *               ===================================             *
      *AJOUTE 1 AU COMPTEUR DE RETRAIT, GERE LE BAS DE PAGE, AJOUTE
      *LE MONTANT DU MOUVEMENT AU DEBIT ET EDITE LE DรฉTAILS CLIENTS
      *---------------------------------------------------------------*

       5010-TRTRETRAIT-DEB.

           ADD 1 TO WS-CRET WS-NUMLIGNE

           IF WS-NUMLIGNE = 6
           THEN
               PERFORM 7000-GERERBDP-DEB
                  THRU 7000-GERERBDP-FIN
           END-IF.

           MOVE 'RETRAIT DAB' TO WS-LETAT-OP-LIB-ED.

           ADD WS-MVTS-MT TO WS-STOTDB.

           PERFORM 7010-GERERDATEOP-DEB
              THRU 7010-GERERDATEOP-FIN.

           MOVE WS-MVTS-MT TO WS-LETAT-OP-DEBIT-ED.

           MOVE 0          TO WS-LETAT-OP-CREDIT-ED.

           PERFORM 6260-WRITE-ETATCLI-DETAILS-DEB
              THRU 6260-WRITE-ETATCLI-DETAILS-FIN.

           MOVE WS-MVTS-DATE TO WS-CPT-DMAJ.

       5010-TRTRETRAIT-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT TRTDEPOT               *
      *               =================================               *
      *AJOUTE 1 AU COMPTEUR DE DEPOT  , GERE LE BAS DE PAGE, AJOUTE
      *LE MONTANT DU MOUVEMENT AU CREDIT ET EDITE LE DรฉTAILS CLIENTS
      *---------------------------------------------------------------*

       5020-TRTDEPOT-DEB.

           ADD 1 TO WS-CDEP WS-NUMLIGNE

           IF WS-NUMLIGNE = 6
           THEN
               PERFORM 7000-GERERBDP-DEB
                  THRU 7000-GERERBDP-FIN
           END-IF.

           MOVE 'DEPOT GUICHET' TO WS-LETAT-OP-LIB-ED.

           ADD WS-MVTS-MT TO WS-STOTCR.

           PERFORM 7010-GERERDATEOP-DEB
              THRU 7010-GERERDATEOP-FIN.

           MOVE 0          TO WS-LETAT-OP-DEBIT-ED.

           MOVE WS-MVTS-MT TO WS-LETAT-OP-CREDIT-ED.

           PERFORM 6260-WRITE-ETATCLI-DETAILS-DEB
              THRU 6260-WRITE-ETATCLI-DETAILS-FIN.

           MOVE WS-MVTS-DATE TO WS-CPT-DMAJ.

       5020-TRTDEPOT-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT TRTCB                  *
      *               ==============================                  *
      *AJOUTE 1 AU COMPTEUR DE CB     , GERE LE BAS DE PAGE, AJOUTE
      *LE MONTANT DU MOUVEMENT AU DEBIT  ET EDITE LE DรฉTAILS CLIENTS
      *---------------------------------------------------------------*

       5030-TRTCB-DEB.

           ADD 1 TO WS-CCB WS-NUMLIGNE

           IF WS-NUMLIGNE = 6
           THEN
               PERFORM 7000-GERERBDP-DEB
                  THRU 7000-GERERBDP-FIN
           END-IF.

           MOVE 'CARTE BLEUE' TO WS-LETAT-OP-LIB-ED.

           ADD WS-MVTS-MT TO WS-STOTDB.

           PERFORM 7010-GERERDATEOP-DEB
              THRU 7010-GERERDATEOP-FIN.

           MOVE WS-MVTS-MT TO WS-LETAT-OP-DEBIT-ED.

           MOVE 0          TO WS-LETAT-OP-CREDIT-ED.

           PERFORM 6260-WRITE-ETATCLI-DETAILS-DEB
              THRU 6260-WRITE-ETATCLI-DETAILS-FIN.

           MOVE WS-MVTS-DATE TO WS-CPT-DMAJ.

       5030-TRTCB-FIN.
           EXIT.

      *===============================================================*
      *===============================================================*
      *    STRUCTURATION DE LA PARTIE INDEPENDANTE DU PROGRAMME       *
      *---------------------------------------------------------------*
      *                                                               *
      *   6XXX-  : ORDRES DE MANIPULATION DES FICHIERS                *
      *   7XXX-  : TRANSFERTS ET CALCULS COMPLEXES                    *
      *   8XXX-  : ORDRES DE MANIPULATION DES EDITIONS                *
      *   9XXX-  : PROTECTION FIN DE PROGRAMME                        *
      *   9999-  : PROTECTION FIN DE PROGRAMME                        *
      *                                                               *
      *===============================================================*
      *===============================================================*

      *---------------------------------------------------------------*
      *   6XXX-  : ORDRES DE MANIPULATION DES FICHIERS                *
      *---------------------------------------------------------------*
      *                                                               *
       6000-OPEN-MVTS-DEB.

           OPEN INPUT F-MVTS-E.
           IF NOT WS-MVTS-OPERATIONOK
           THEN
               IF WS-MVTS-FINFICHIER
                 DISPLAY 'FICHIER MVTS VIDE'
                 PERFORM 9999-FIN-PROGRAMME-DEB
                    THRU 9999-FIN-PROGRAMME-FIN
               ELSE
                 DISPLAY 'ERREUR D''OUVERTURE DU FICHIER MVTS'
      -                  ', CODE = ' WS-FS-MVTS-E
                 PERFORM 9999-ERREUR-PROGRAMME-DEB
                    THRU 9999-ERREUR-PROGRAMME-FIN
               END-IF
           END-IF.

       6000-OPEN-MVTS-FIN.
           EXIT.

       6010-CLOSE-MVTS-DEB.

           CLOSE F-MVTS-E.
           IF NOT WS-MVTS-OPERATIONOK
           THEN
               DISPLAY 'ERREUR DE FERMETURE DU FICHIER MVTS'
      -                ', CODE = ' WS-FS-MVTS-E
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

       6010-CLOSE-MVTS-FIN.
           EXIT.

       6020-READ-MVTS-DEB.

           READ F-MVTS-E INTO WS-ENRG-F-MVTS
           IF NOT WS-MVTS-OPERATIONOK AND NOT WS-MVTS-FINFICHIER
           THEN
               DISPLAY 'ERREUR DE LECTURE DU FICHIER MVTS, CODE = '
      -                WS-FS-MVTS-E
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.
           IF WS-MVTS-FINFICHIER
           THEN
               MOVE HIGH-VALUE TO WS-ENRG-F-MVTS
           END-IF.

           MOVE WS-MVTS-CODE TO WS-CODEMOUVEMENT.

       6020-READ-MVTS-FIN.
           EXIT.

       6100-OPEN-CPTE-DEB.

           OPEN I-O F-CPTE-ES.
           IF NOT WS-CPTE-OPERATIONOK
           THEN
               IF WS-CPTE-FINFICHIER
                 DISPLAY 'FICHIER COMPTE VIDE'
                 PERFORM 9999-FIN-PROGRAMME-DEB
                    THRU 9999-FIN-PROGRAMME-FIN
               ELSE
                 DISPLAY 'ERREUR D''OUVERTURE DU FICHIER COMPTE'
      -                  ', CODE = ' WS-FS-CPTE-ES
                 PERFORM 9999-ERREUR-PROGRAMME-DEB
                    THRU 9999-ERREUR-PROGRAMME-FIN
               END-IF
           END-IF.

       6100-OPEN-CPTE-FIN.
           EXIT.

       6110-CLOSE-CPTE-DEB.

           CLOSE F-CPTE-ES.
           IF NOT WS-CPTE-OPERATIONOK
           THEN
               DISPLAY 'ERREUR DE FERMETURE DU FICHIER COMPTE'
      -                ', CODE = ' WS-FS-CPTE-ES
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

       6110-CLOSE-CPTE-FIN.
           EXIT.

       6120-READ-CPTE-DEB.

           READ F-CPTE-ES INTO WS-ENRG-F-CPT
           IF NOT WS-CPTE-OPERATIONOK AND NOT WS-CPTE-FINFICHIER
              AND NOT WS-CPTE-ENRINEXISTANT
           THEN
               DISPLAY 'ERREUR DE LECTURE DU FICHIER COMPTE, CODE = '
      -                WS-FS-CPTE-ES
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

       6120-READ-CPTE-FIN.
           EXIT.

       6130-DELETE-CPTE-DEB.

           DELETE F-CPTE-ES.
           IF NOT WS-CPTE-OPERATIONOK
           THEN
               DISPLAY 'ERREUR DE SUPPRESSION DU FICHIER COMPTE'
      -                ', CODE = ' WS-FS-CPTE-ES
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

       6130-DELETE-CPTE-FIN.
           EXIT.

       6140-REWRITE-CPTE-DEB.

           REWRITE FS-ENRG-F-CPT FROM WS-ENRG-F-CPT
           IF NOT WS-CPTE-OPERATIONOK
           THEN
               DISPLAY 'ERREUR DE REECRITURE DU FICHIER COMPTE'
      -                ', CODE = ' WS-FS-CPTE-ES
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

       6140-REWRITE-CPTE-FIN.
           EXIT.

       6150-WRITE-CPTE-DEB.

           WRITE FS-ENRG-F-CPT FROM WS-ENRG-F-CPT
           IF NOT WS-CPTE-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DU FICHIER COMPTE'
      -                ', CODE = ' WS-FS-CPTE-ES
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

       6150-WRITE-CPTE-FIN.
           EXIT.

       6200-OPEN-ETATCLI-DEB.

           OPEN OUTPUT F-ETATCLI-S.
           IF NOT WS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''OUVERTURE DU FICHIER ETAT CLIENT'
      -                  ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

       6200-OPEN-ETATCLI-FIN.
           EXIT.

       6210-CLOSE-ETATCLI-DEB.

           CLOSE F-ETATCLI-S.
           IF NOT WS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR DE FERMETURE DU FICHIER ETAT CLIENT'
      -                ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

       6210-CLOSE-ETATCLI-FIN.
           EXIT.

       6220-WRITE-ETATCLI-PAGEUNE-DEB.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-ENTETE-L1 AFTER PAGE.
           IF NOT WS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT CLIENT'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-ENTETE-L2.
           IF NOT WS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT CLIENT'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-ENTETE-L3.
           IF NOT WS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT CLIENT'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-ENTETE-L4.
           IF NOT WS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT CLIENT'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-ENTETE-L2.
           IF NOT WS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT CLIENT'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-ENTETE-L2.
           IF NOT WS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT CLIENT'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-ENTETE-L5.
           IF NOT WS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT CLIENT'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-ENTETE-L6.
           IF NOT WS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT CLIENT'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-ENTETE-L2.
           IF NOT WS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT CLIENT'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-ENTETE-L7.
           IF NOT WS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT CLIENT'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-ENTETE-L8.
           IF NOT WS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT CLIENT'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-ENTETE-L2.
           IF NOT WS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT CLIENT'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-ENTETE-L1.
           IF NOT WS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT CLIENT'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

       6220-WRITE-ETATCLI-PAGEUNE-FIN.
           EXIT.

       6230-WRITE-ETATCLI-CLOTURE-DEB.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-ENTETE-L1 AFTER PAGE.
           IF NOT WS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT CLIENT'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-LETAT-DATE-PAGE.
           IF NOT WS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT CLIENT'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-LETAT-NUMCPT.
           IF NOT WS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT CLIENT'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-ENTETE-L1.
           IF NOT WS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT CLIENT'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-LETAT-SOLD-OP.
           IF NOT WS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT CLIENT'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-ENTETE-L1.
           IF NOT WS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT CLIENT'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

       6230-WRITE-ETATCLI-CLOTURE-FIN.
           EXIT.

       6240-WRITE-ETATCLI-ENTETE-DEB.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-ENTETE-L1 AFTER PAGE.
           IF NOT WS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT CLIENT'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-LETAT-DATE-PAGE.
           IF NOT WS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT CLIENT'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-LETAT-NUMCPT.
           IF NOT WS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT CLIENT'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-ENTETE-L1.
           IF NOT WS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT CLIENT'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-LETAT-SOLD-OP.
           IF NOT WS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT CLIENT'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-ENTETE-L1.
           IF NOT WS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT CLIENT'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-LETAT-TITRES.
           IF NOT WS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT CLIENT'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-ENTETE-L1.
           IF NOT WS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT CLIENT'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

       6240-WRITE-ETATCLI-ENTETE-FIN.
           EXIT.

       6250-WRITE-ETATCLI-SOLDE-DEB.

           WRITE FS-ENRG-F-ETATCLI

                 FROM WS-ENTETE-L1.
           IF NOT WS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETATCLIENT'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-LETAT-TOT-OP.
           IF NOT WS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETATCLIENT'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-ENTETE-L1.
           IF NOT WS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETATCLIENT'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-LETAT-SOLD-OP.
           IF NOT WS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETATCLIENT'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-ENTETE-L1.
           IF NOT WS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETATCLIENT'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

       6250-WRITE-ETATCLI-SOLDE-FIN.
           EXIT.

       6260-WRITE-ETATCLI-DETAILS-DEB.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-LETAT-DETAIL-OP.
           IF NOT WS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT CLIENT'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

       6260-WRITE-ETATCLI-DETAILS-FIN.
           EXIT.

       6300-OPEN-ETATANO-DEB.

           OPEN OUTPUT F-ETATANO-S.
           IF NOT WS-ETATANO-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''OUVERTURE DU FICHIER ETAT ANO'
      -                  ', CODE = ' WS-FS-ETATANO-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

       6300-OPEN-ETATANO-FIN.
           EXIT.

       6310-CLOSE-ETATANO-DEB.

           CLOSE F-ETATANO-S.
           IF NOT WS-ETATANO-OPERATIONOK
           THEN
               DISPLAY 'ERREUR DE FERMETURE DU FICHIER ETAT ANO'
      -                ', CODE = ' WS-FS-ETATANO-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

       6310-CLOSE-ETATANO-FIN.
           EXIT.

       6320-WRITE-ETATANO-PAGEUNE-DEB.

           WRITE FS-ENRG-F-ETATANO
                 FROM WS-ENTETE-L1 AFTER PAGE.
           IF NOT WS-ETATANO-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT ANO'
                         ', CODE = ' WS-FS-ETATANO-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATANO
                 FROM WS-ENTETE-L2.
           IF NOT WS-ETATANO-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT ANO'
                         ', CODE = ' WS-FS-ETATANO-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATANO
                 FROM WS-LANO-ENTETE-L3.
           IF NOT WS-ETATANO-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT ANO'
                         ', CODE = ' WS-FS-ETATANO-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATANO
                 FROM WS-LANO-ENTETE-L4.
           IF NOT WS-ETATANO-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT ANO'
                         ', CODE = ' WS-FS-ETATANO-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATANO
                 FROM WS-ENTETE-L2.
           IF NOT WS-ETATANO-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT ANO'
                         ', CODE = ' WS-FS-ETATANO-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATANO
                 FROM WS-LANO-ENTETE-L5.
           IF NOT WS-ETATANO-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT ANO'
                         ', CODE = ' WS-FS-ETATANO-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATANO
                 FROM WS-LANO-ENTETE-L6.
           IF NOT WS-ETATANO-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT ANO'
                         ', CODE = ' WS-FS-ETATANO-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATANO
                 FROM WS-ENTETE-L2.
           IF NOT WS-ETATANO-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT ANO'
                         ', CODE = ' WS-FS-ETATANO-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATANO
                 FROM WS-ENTETE-L7.
           IF NOT WS-ETATANO-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT ANO'
                         ', CODE = ' WS-FS-ETATANO-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATANO
                 FROM WS-ENTETE-L8.
           IF NOT WS-ETATANO-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT ANO'
                         ', CODE = ' WS-FS-ETATANO-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATANO
                 FROM WS-ENTETE-L2.
           IF NOT WS-ETATANO-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT ANO'
                         ', CODE = ' WS-FS-ETATANO-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATANO
                 FROM WS-ENTETE-L1.
           IF NOT WS-ETATANO-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT ANO'
                         ', CODE = ' WS-FS-ETATANO-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

       6320-WRITE-ETATANO-PAGEUNE-FIN.
           EXIT.

       6330-WRITE-ETATANO-ENTETE-DEB.

           WRITE FS-ENRG-F-ETATANO
                 FROM WS-LANO-L1.
           IF NOT WS-ETATANO-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT ANO'
                         ', CODE = ' WS-FS-ETATANO-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATANO
                 FROM WS-LANO-TITRES.
           IF NOT WS-ETATANO-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT ANO'
                         ', CODE = ' WS-FS-ETATANO-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATANO
                 FROM WS-LANO-L3.
           IF NOT WS-ETATANO-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT ANO'
                         ', CODE = ' WS-FS-ETATANO-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

       6330-WRITE-ETATANO-ENTETE-FIN.
           EXIT.

       6340-WRITE-ETATANO-DETAILS-DEB.

           WRITE FS-ENRG-F-ETATANO
                 FROM WS-LANO-DETAIL.
           IF NOT WS-ETATANO-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT ANO'
      -                  ', CODE = ' WS-FS-ETATANO-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

       6340-WRITE-ETATANO-DETAILS-FIN.
           EXIT.

       6350-WRITE-ETATANO-TOTAL-DEB.

           WRITE FS-ENRG-F-ETATANO
                 FROM WS-LANO-L3.
           IF NOT WS-ETATANO-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT ANO'
                         ', CODE = ' WS-FS-ETATANO-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATANO
                 FROM WS-LANO-TOTAL.
           IF NOT WS-ETATANO-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT ANO'
                         ', CODE = ' WS-FS-ETATANO-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATANO
                 FROM WS-LANO-L1.
           IF NOT WS-ETATANO-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT ANO'
                         ', CODE = ' WS-FS-ETATANO-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

       6350-WRITE-ETATANO-TOTAL-FIN.
           EXIT.

       6360-WRITE-ETATANO-OK-DEB.

           WRITE FS-ENRG-F-ETATANO
                 FROM WS-LANO-OK.
           IF NOT WS-ETATANO-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT ANO'
                         ', CODE = ' WS-FS-ETATANO-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

       6360-WRITE-ETATANO-OK-FIN.
           EXIT.

      *
      *---------------------------------------------------------------*
      *   7XXX-  : TRANSFERTS ET CALCULS COMPLEXES                    *
      *---------------------------------------------------------------*

       7000-GERERBDP-DEB.

           MOVE 1 TO WS-NUMLIGNE

           MOVE 'SOUS-TOTAL DES OPERATIONS' TO WS-LETAT-TOTLB-ED.

           MOVE WS-STOTDB TO WS-LETAT-TOTDB-ED.

           MOVE WS-STOTCR TO WS-LETAT-TOTCR-ED.

           ADD 1 TO WS-PAGE.

           MOVE WS-PAGE TO WS-LETAT-PAGE-ED.
           MOVE 'SOLDE INTERMEDIAIRE' TO WS-LETAT-LIB-ED.

           COMPUTE WS-CPT-SOLDE = WS-CPT-SOLDE + WS-STOTCR - WS-STOTDB.

           MOVE WS-CPT-SOLDE TO WS-LETAT-SOLD-ED.

           PERFORM 6250-WRITE-ETATCLI-SOLDE-DEB
              THRU 6250-WRITE-ETATCLI-SOLDE-FIN.

           PERFORM 6240-WRITE-ETATCLI-ENTETE-DEB
              THRU 6240-WRITE-ETATCLI-ENTETE-FIN.

           MOVE 0 TO WS-STOTDB WS-STOTCR.

       7000-GERERBDP-FIN.
           EXIT.

       7010-GERERDATEOP-DEB.

           MOVE WS-MVTS-JJ TO WS-LETAT-OP-JJ-ED.

           MOVE WS-MVTS-MM TO WS-LETAT-OP-MM-ED.

           MOVE WS-MVTS-AA TO WS-LETAT-OP-SS-ED.

           MOVE WS-MVTS-SS TO WS-LETAT-OP-SS-ED.

       7010-GERERDATEOP-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *   8XXX-  : ORDRES DE MANIPULATION DES EDITIONS                *
      *---------------------------------------------------------------*

       8000-COMPTERENDU-ENTETE-DEB.

           DISPLAY WS-LCRE-ASTER.

           DISPLAY WS-LCRE-TITRE.

           DISPLAY WS-LCRE-ASTER.

       8000-COMPTERENDU-ENTETE-FIN.
           EXIT.

       8010-COMPTERENDU-DETAILS-DEB.

           DISPLAY WS-LCRE-DETAIL.

       8010-COMPTERENDU-DETAILS-FIN.
           EXIT.

       8020-COMPTERENDU-BDP-DEB.

           DISPLAY WS-LCRE-ASTER.

       8020-COMPTERENDU-BDP-FIN.
           EXIT.

       8999-STATISTIQUES-DEB.

            DISPLAY '************************************************'
            DISPLAY '*     STATISTIQUES DU PROGRAMME HNSO5M4        *'
            DISPLAY '*     ==================================       *'
            DISPLAY '************************************************'.

       8999-STATISTIQUES-FIN.
            EXIT.

      *---------------------------------------------------------------*
      *   9XXX-  : ORDRES DE MANIPULATION DES SOUS-PROGRAMMES         *
      *---------------------------------------------------------------*
      *
      *9000-APPEL-SP-DEB.
      *
      *9000-APPEL-SP-FIN.
      *     EXIT.
      *
      *---------------------------------------------------------------*
      *   9999-  : PROTECTION FIN DE PROGRAMME                        *
      *---------------------------------------------------------------*

       9999-FIN-PROGRAMME-DEB.

            DISPLAY '*==============================================*'
            DISPLAY '*     FIN NORMALE DU PROGRAMME HNSO5M4         *'
            DISPLAY '*==============================================*'
            STOP RUN.

       9999-FIN-PROGRAMME-FIN.
            EXIT.

       9999-ERREUR-PROGRAMME-DEB.

            DISPLAY '*==============================================*'
            DISPLAY '*        UNE ANOMALIE A ETE DETECTEE           *'
            DISPLAY '*     FIN ANORMALE DU PROGRAMME HNSO5M4        *'
            DISPLAY '*==============================================*'
            MOVE 12 TO RETURN-CODE.
            STOP RUN.

       9999-ERREUR-PROGRAMME-FIN.
            EXIT.


CBL    MAP,LIST,SSRANGE,FDUMP
      *===============================================================*
      *--                INFORMATIONS GENERALES                     --*
      *---------------------------------------------------------------*
      *  NOM DU PROGRAMME : HNSO5M5                                   *
      *  NOM DU REDACTEUR : REVERE ALAIN                              *
      *  SOCIETE          : GFI INFORMATIQUE                          *
      *  DATE DE CREATION : 26/08/2014                                *
      *---------------------------------------------------------------*
      *--               OBJECTIFS GENERAUX DU PROGRAMME             --*
      *---------------------------------------------------------------*
      *                                                               *
      *                                                               *
      *---------------------------------------------------------------*
      *--               HISTORIQUE DES MODIFICATIONS                --*
      *---------------------------------------------------------------*
      * DATE  MODIF   ยง          NATURE DE LA MODIFICATION            *
      *---------------------------------------------------------------*
      *               ยง                                               *
      *===============================================================*

       IDENTIFICATION DIVISION.
       PROGRAM-ID.      HNSO5M5.

      *                  ==============================               *
      *=================<   ENVIRONMENT     DIVISION   >==============*
      *                  ==============================               *
      *                                                               *
      *===============================================================*

      **********************
       ENVIRONMENT DIVISION.
      **********************

      *======================
       CONFIGURATION SECTION.
      *======================

      *--------------
       SPECIAL-NAMES.
      *--------------
           DECIMAL-POINT IS COMMA.

      *=====================
       INPUT-OUTPUT SECTION.
      *=====================

      *-------------
       FILE-CONTROL.
      *-------------

      *******************
      *FICHIER EN ENTREE*
      *******************

      *ON NE DECLARE PAS LE FICHIER DEMANDE CAR SYSIN

      *                      -------------------------------------------
      *                      F-CPTE  : FICHIER DES COMPTES
      *                      -------------------------------------------
           SELECT  F-CPTE              ASSIGN TO INP001
                   ORGANIZATION        IS INDEXED
                   ACCESS MODE         IS DYNAMIC
                   RECORD KEY          IS FS-CPT-CPTE
                   ALTERNATE RECORD KEY IS FS-CPT-NOM
                                       WITH DUPLICATES
                   FILE STATUS         IS WS-FS-CPTE.
      *                      -------------------------------------------

      ********************
      *FICHIERS EN SORTIE*
      ********************

      *                      -------------------------------------------
      *                      F-ETATCLI-S : FICHIER ETAT DES CLIENTS
      *                      -------------------------------------------
           SELECT  F-ETATCLI-S         ASSIGN TO ETATCLI
                   FILE STATUS         IS WS-FS-ETATCLI-S.
      *                      -------------------------------------------

      *                      -------------------------------------------
      *                      F-ETATANO-S : FICHIER ETAT DES ANOMALIES
      *                      -------------------------------------------
           SELECT  F-ETATANO-S         ASSIGN TO ETATANO
                   FILE STATUS         IS WS-FS-ETATANO-S.
      *                      -------------------------------------------
      ***************
       DATA DIVISION.
      ***************

      *=============
       FILE SECTION.
      *=============

       FD  F-CPTE
           RECORD CONTAINS 56 CHARACTERS.
       01  FS-ENR-CPTE.
           05 FS-CPT-CPTE           PIC X(10).
           05 FS-CPT-NOM            PIC X(20).
           05 FILLER                PIC X(26).

       FD  F-ETATCLI-S
           RECORD CONTAINS 78 CHARACTERS.
       01  FS-ENRG-F-ETATCLI        PIC X(78).

       FD  F-ETATANO-S
           RECORD CONTAINS 78 CHARACTERS.
       01  FS-ENRG-F-ETATANO        PIC X(78).

      *========================
       WORKING-STORAGE SECTION.
      *========================

      **********************************
      *DESCRIPTION DES LIGNES D'รฉDITION*
      **********************************
           COPY TP5LEDIT.

       01  WS-LETAT-LIGNE0CLI.
         05 FILLER                    PIC X     VALUE  '!'.
         05 FILLER                    PIC X(76) VALUE
      -       ' AUCUN ENREGISTREMENT POUR LA DEMANDE'.
         05 FILLER                    PIC X     VALUE  '!'.

      **************************************************
      *DESCRIPTION DE LENREGISTREMENT DEMANDE EN ENTRรฉE*
      **************************************************
           COPY TP5DEMAN.

      ***************************************
      *DESCRIPTION DE LENREGISTREMENT COMPTE*
      ***************************************
           COPY TP5CPT.

      ******************************
      *DESCRIPTION DES FILES STATUS*
      ******************************

       01  WS-FS-CPTE                   PIC XX.
           88 WS-CPTE-OPERATIONOK       VALUE '00'.
           88 WS-CPTE-FINFICHIER        VALUE '10'.
           88 WS-CPTE-ENRINEXISTANT     VALUE '23'.

       01  WS-FS-ETATCLI-S              PIC XX.
           88 WS-ETATCLI-OPERATIONOK    VALUE '00'.
           88 WS-ETATCLI-FINFICHIER     VALUE '10'.

       01  WS-FS-ETATANO-S              PIC XX.
           88 WS-ETATANO-OPERATIONOK    VALUE '00'.
           88 WS-ETATANO-FINFICHIER     VALUE '10'.

      ***************************
      *DECLARATION DES VARIABLES*
      ***************************

      *VARIABLE QUI CONTIENT LE NOMBRE DE DEMANDES
       01  WS-CDEM                      PIC 9(4) COMP VALUE 0.

      *VARIABLE QUI CONTIENT LE NOMBRE DE DEMANDES EN ERREUR
       01  WS-CDEMERR                   PIC 9(4) COMP VALUE 0.

      *VARIABLE QUI CONTIENT LE NOMBRE D'ANOMALIES
       01  WS-CERR                      PIC 9(4) COMP VALUE 0.

      *VARIABLE QUI CONTIENT LE NUMERO DE PAGE
       01  WS-PAGE                      PIC 9(4) COMP.

      *VARIABLE QUI CONTIENT LE NUMERO DE LIGNE
       01  WS-NUMLIGNE                  PIC 9(4) COMP.

      *VARIABLE QUI VA ANALYSER SI UNE DEMANDE A UNE ANOMALIE OU NON
       01  WS-CERRDEMANDE               PIC 9.

      *                  ==============================               *
      *=================<    PROCEDURE      DIVISION   >==============*
      *                  ==============================               *

      *===============================================================*
       PROCEDURE           DIVISION.

      *===============================================================*
      *===============================================================*
      *    STRUCTURATION DE LA PARTIE ALGORITHMIQUE DU PROGRAMME      *
      *---------------------------------------------------------------*
      *                                                               *
      *    1 : LES COMPOSANTS DU DIAGRAMME SONT CODES A L'AIDE DE     *
      *        DEUX PARAGRAPHES  XXXX-COMPOSANT-DEB                   *
      *                          XXYY-COMPOSANR-FIN                   *
      *                                                               *
      *    2 : XX REPRESENTE LE NIVEAU HIERARCHIQUE                   *
      *        YY DIFFERENCIE LES COMPOSANTS DE MEME NIVEAU           *
      *                                                               *
      *    3 : TOUT COMPOSANT EST PRECEDE D'UN CARTOUCHE DE           *
      *        COMMENTAIRE QUI EXPLICITE LE ROLE DU COMPOSANT         *
      *                                                               *
      *                                                               *
      *===============================================================*
      *===============================================================*


      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT PROGRAMME              *
      *               ==================================              *
      *---------------------------------------------------------------*

       0000-PROGRAMME-DEB.

           PERFORM 6000-OPEN-CPTE-DEB
              THRU 6000-OPEN-CPTE-FIN.

           PERFORM 6100-OPEN-ETATCLI-DEB
              THRU 6100-OPEN-ETATCLI-FIN.

           PERFORM 6200-OPEN-ETATANO-DEB
              THRU 6200-OPEN-ETATANO-FIN.

           PERFORM 6220-WRITE-ETATANO-ENTETE-DEB
              THRU 6220-WRITE-ETATANO-ENTETE-FIN.

           ACCEPT WS-ENR-DEM.

       0000-PROGRAMME-COR.

           PERFORM 1000-ID-DEMANDE-DEB
              THRU 1000-ID-DEMANDE-FIN
             UNTIL WS-ENR-DEM = '$$$'.

       0000-PROGRAMME-FIN.

           PERFORM 6240-WRITE-ETATANO-FDF-DEB
              THRU 6240-WRITE-ETATANO-FDF-FIN.

           PERFORM 8000-COMPTERENDU-ENTETE-DEB
              THRU 8000-COMPTERENDU-ENTETE-FIN.

           MOVE 'NOMBRE DE DEMANDES'          TO WS-LCRE-DET-LIB-ED.

           MOVE WS-CDEM                       TO WS-LCRE-DET-TOT-ED.

           PERFORM 8010-COMPTERENDU-DETAILS-DEB
              THRU 8010-COMPTERENDU-DETAILS-FIN.

           MOVE 'NOMBRE DE DEMANDES ERRONรฉES' TO WS-LCRE-DET-LIB-ED.

           MOVE WS-CDEMERR                    TO WS-LCRE-DET-TOT-ED.

           PERFORM 8010-COMPTERENDU-DETAILS-DEB
              THRU 8010-COMPTERENDU-DETAILS-FIN.

           PERFORM 8020-COMPTERENDU-FDF-DEB
              THRU 8020-COMPTERENDU-FDF-FIN.

           PERFORM 6010-CLOSE-CPTE-DEB
              THRU 6010-CLOSE-CPTE-FIN.

           PERFORM 6110-CLOSE-ETATCLI-DEB
              THRU 6110-CLOSE-ETATCLI-FIN.

           PERFORM 6210-CLOSE-ETATANO-DEB
              THRU 6210-CLOSE-ETATANO-FIN.

           PERFORM  8999-STATISTIQUES-DEB
              THRU  8999-STATISTIQUES-FIN.

           PERFORM  9999-FIN-PROGRAMME-DEB
              THRU  9999-FIN-PROGRAMME-FIN.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT XXXXXXXXX              *
      *               ==================================              *
      *---------------------------------------------------------------*

       1000-ID-DEMANDE-DEB.

           ADD 1 TO WS-CDEM.

       1000-ID-DEMANDE-COR.

           EVALUATE TRUE
           WHEN WS-DEM-TYP = 'A' PERFORM 2000-TYPEA-VERIFANO-DEB
                                    THRU 2000-TYPEA-VERIFANO-FIN
           WHEN WS-DEM-TYP = 'B' PERFORM 2010-TYPEB-VERIFANO-DEB
                                    THRU 2010-TYPEB-VERIFANO-FIN
           WHEN OTHER            PERFORM 2020-ANOTYPEDEMANDE-DEB
                                    THRU 2020-ANOTYPEDEMANDE-FIN
           END-EVALUATE.

       1000-ID-DEMANDE-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT XXXXXXXXX              *
      *               ==================================              *
      *---------------------------------------------------------------*

       2000-TYPEA-VERIFANO-DEB.

           MOVE 0 TO WS-CERRDEMANDE.

           PERFORM 7000-VERIF-ANODEMANDEUR-DEB
              THRU 7000-VERIF-ANODEMANDEUR-FIN.

           PERFORM 7010-VERIF-ANOBORNES-TYPEA-DEB
              THRU 7010-VERIF-ANOBORNES-TYPEA-FIN.

           PERFORM 7050-VERIF-NUMERICITE-DEB
              THRU 7050-VERIF-NUMERICITE-FIN.

       2000-TYPEA-VERIFANO-COR.

           IF WS-CERRDEMANDE = 0
           THEN
               PERFORM 3000-TRAITEMENT-TYPEA-DEB
                  THRU 3000-TRAITEMENT-TYPEA-FIN
           ELSE
               ADD 1 TO WS-CDEMERR
           END-IF.

       2000-TYPEA-VERIFANO-FIN.

           ACCEPT WS-ENR-DEM.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT XXXXXXXXX              *
      *               ==================================              *
      *---------------------------------------------------------------*

       2010-TYPEB-VERIFANO-DEB.

           MOVE 0 TO WS-CERRDEMANDE.

           PERFORM 7000-VERIF-ANODEMANDEUR-DEB
              THRU 7000-VERIF-ANODEMANDEUR-FIN.

           PERFORM 7020-VERIF-ANOBORNES-TYPEB-DEB
              THRU 7020-VERIF-ANOBORNES-TYPEB-FIN.

       2010-TYPEB-VERIFANO-COR.

           IF WS-CERRDEMANDE = 0
           THEN
               PERFORM 3010-TRAITEMENT-TYPEB-DEB
                  THRU 3010-TRAITEMENT-TYPEB-FIN
           ELSE
               ADD 1 TO WS-CDEMERR
           END-IF.

       2010-TYPEB-VERIFANO-FIN.

           ACCEPT WS-ENR-DEM.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT XXXXXXXXX              *
      *               ==================================              *
      *---------------------------------------------------------------*

       2020-ANOTYPEDEMANDE-DEB.

           ADD 1 TO WS-CERR WS-CDEMERR.

           MOVE WS-CERR                      TO WS-LANO-NUM-ED.

           MOVE 'TYPE DE LA DEMANDE ERRONรฉE' TO WS-LANO-TYP-ED.

           MOVE WS-ENR-DEM                   TO WS-LANO-ENR-ED.

           PERFORM 6230-ETATANO-DETAILS-DEB
              THRU 6230-ETATANO-DETAILS-FIN.

           PERFORM 7000-VERIF-ANODEMANDEUR-DEB
              THRU 7000-VERIF-ANODEMANDEUR-FIN.

           ACCEPT WS-ENR-DEM.

       2020-ANOTYPEDEMANDE-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT XXXXXXXXX              *
      *               ==================================              *
      *---------------------------------------------------------------*

       3000-TRAITEMENT-TYPEA-DEB.

           MOVE WS-DEM-CPT-DEB TO FS-CPT-CPTE.

           PERFORM 6020-POINTER-CPTE-CPT-DEB
              THRU 6020-POINTER-CPTE-CPT-FIN.

           IF NOT WS-CPTE-ENRINEXISTANT
           THEN
               PERFORM 6030-READ-CPTE-DEB
                  THRU 6030-READ-CPTE-FIN
           END-IF.

           MOVE 0 TO WS-NUMLIGNE.

           MOVE WS-DEM-NOM TO WS-LETAT-NOMD-ED.

           MOVE WS-CDEM    TO WS-LETAT-NUM-ED.

           MOVE 1 TO WS-PAGE

           MOVE WS-PAGE TO WS-LETAT-PAGE-ED.

           MOVE 'NUMERO DE COMPTE' TO WS-LETAT-TYPE-ED.

           MOVE WS-DEM-CPT-DEB TO WS-LETAT-REFDEB-ED.

           MOVE WS-DEM-CPT-FIN TO WS-LETAT-REFFIN-ED.

           PERFORM 6120-ETATCLI-ENTETE-DEB
              THRU 6120-ETATCLI-ENTETE-FIN.

       3000-TRAITEMENT-TYPEA-COR.

           PERFORM 4000-TRAITEMENTCOMPTE-DEB
              THRU 4000-TRAITEMENTCOMPTE-FIN
             UNTIL WS-CPTE-ENRINEXISTANT
                OR WS-CPTE-FINFICHIER
                OR WS-CPT-CPTE > WS-DEM-CPT-FIN.

       3000-TRAITEMENT-TYPEA-FIN.

           IF WS-NUMLIGNE = 0
           THEN
               PERFORM 6140-ETATCLI-BDP0CLI-DEB
                  THRU 6140-ETATCLI-BDP0CLI-FIN
           ELSE
               PERFORM 6150-ETATCLI-BDPCLI-DEB
                  THRU 6150-ETATCLI-BDPCLI-FIN
           END-IF.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT XXXXXXXXX              *
      *               ==================================              *
      *---------------------------------------------------------------*

       3010-TRAITEMENT-TYPEB-DEB.

           MOVE WS-DEM-CLI-DEB TO FS-CPT-NOM.

           PERFORM 6040-POINTER-CPTE-NOM-DEB
              THRU 6040-POINTER-CPTE-NOM-FIN.

           IF NOT WS-CPTE-ENRINEXISTANT
           THEN
               PERFORM 6030-READ-CPTE-DEB
                  THRU 6030-READ-CPTE-FIN
           END-IF.

           MOVE 0 TO WS-NUMLIGNE.

           MOVE WS-DEM-NOM TO WS-LETAT-NOMD-ED.

           MOVE WS-CDEM    TO WS-LETAT-NUM-ED.

           MOVE 1 TO WS-PAGE

           MOVE WS-PAGE TO WS-LETAT-PAGE-ED.

           MOVE 'NOM DE CLIENT' TO WS-LETAT-TYPE-ED.

           MOVE WS-DEM-CLI-DEB TO WS-LETAT-REFDEB-ED.

           MOVE WS-DEM-CLI-FIN TO WS-LETAT-REFFIN-ED.

           PERFORM 6120-ETATCLI-ENTETE-DEB
              THRU 6120-ETATCLI-ENTETE-FIN.

       3010-TRAITEMENT-TYPEB-COR.

           PERFORM 4000-TRAITEMENTCOMPTE-DEB
              THRU 4000-TRAITEMENTCOMPTE-FIN
             UNTIL WS-CPTE-ENRINEXISTANT
                OR WS-CPTE-FINFICHIER
                OR WS-CPT-NOM > WS-DEM-CLI-FIN.

       3010-TRAITEMENT-TYPEB-FIN.

           IF WS-NUMLIGNE = 0
           THEN
               PERFORM 6140-ETATCLI-BDP0CLI-DEB
                  THRU 6140-ETATCLI-BDP0CLI-FIN
           ELSE
               PERFORM 6150-ETATCLI-BDPCLI-DEB
                  THRU 6150-ETATCLI-BDPCLI-FIN
           END-IF.
      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT XXXXXXXXX              *
      *               ==================================              *
      *---------------------------------------------------------------*

       4000-TRAITEMENTCOMPTE-DEB.

           IF WS-NUMLIGNE = 5
           THEN
               PERFORM 7030-GERERBDPCLI-DEB
                  THRU 7030-GERERBDPCLI-FIN
           END-IF.

           MOVE WS-CPT-CPTE TO WS-LETAT-NUMCPT-ED.

           PERFORM 7040-GERERDATES-DEB
              THRU 7040-GERERDATES-FIN.

           ADD 1 TO WS-NUMLIGNE.

           MOVE WS-CPT-SOLDE TO WS-LETAT-SOLDE-ED.

           MOVE WS-CPT-NOM TO WS-LETAT-NOMC-ED.

           PERFORM 6130-ETATCLI-DETAILS-DEB
              THRU 6130-ETATCLI-DETAILS-FIN.

           PERFORM 6030-READ-CPTE-DEB
              THRU 6030-READ-CPTE-FIN.

       4000-TRAITEMENTCOMPTE-FIN.
           EXIT.

      *===============================================================*
      *===============================================================*
      *    STRUCTURATION DE LA PARTIE INDEPENDANTE DU PROGRAMME       *
      *---------------------------------------------------------------*
      *                                                               *
      *   6XXX-  : ORDRES DE MANIPULATION DES FICHIERS                *
      *   7XXX-  : TRANSFERTS ET CALCULS COMPLEXES                    *
      *   8XXX-  : ORDRES DE MANIPULATION DES EDITIONS                *
      *   9XXX-  : PROTECTION FIN DE PROGRAMME                        *
      *   9999-  : PROTECTION FIN DE PROGRAMME                        *
      *                                                               *
      *===============================================================*
      *===============================================================*

      *---------------------------------------------------------------*
      *   6XXX-  : ORDRES DE MANIPULATION DES FICHIERS                *
      *---------------------------------------------------------------*
      *                                                               *
       6000-OPEN-CPTE-DEB.

           OPEN INPUT F-CPTE.

           IF NOT WS-CPTE-OPERATIONOK
           THEN
               IF WS-CPTE-FINFICHIER
                 DISPLAY 'FICHIER COMPTE VIDE'
                 PERFORM 9999-FIN-PROGRAMME-DEB
                    THRU 9999-FIN-PROGRAMME-FIN
               ELSE
                 DISPLAY 'ERREUR D''OUVERTURE DU FICHIER COMPTE'
      -                  ', CODE = ' WS-FS-CPTE
                 PERFORM 9999-ERREUR-PROGRAMME-DEB
                    THRU 9999-ERREUR-PROGRAMME-FIN
               END-IF
           END-IF.

       6000-OPEN-CPTE-FIN.
           EXIT.

       6010-CLOSE-CPTE-DEB.

           CLOSE F-CPTE.

           IF NOT WS-CPTE-OPERATIONOK
           THEN
               DISPLAY 'ERREUR DE FERMETURE DU FICHIER COMPTE'
      -                ', CODE = ' WS-FS-CPTE
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

       6010-CLOSE-CPTE-FIN.
           EXIT.

       6020-POINTER-CPTE-CPT-DEB.

           START F-CPTE KEY >= FS-CPT-CPTE.

           IF NOT WS-CPTE-OPERATIONOK AND NOT WS-CPTE-ENRINEXISTANT
           THEN
               DISPLAY 'ERREUR DE POINTAGE DU FICHIER COMPTE'
      -                ', CODE = ' WS-FS-CPTE
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

       6020-POINTER-CPTE-CPT-FIN.
           EXIT.

       6030-READ-CPTE-DEB.

           READ F-CPTE NEXT INTO WS-ENRG-F-CPT.

           IF NOT WS-CPTE-OPERATIONOK AND NOT WS-CPTE-FINFICHIER
           THEN
               DISPLAY 'ERREUR DE LECTURE DU FICHIER COMPTE, CODE = '
      -                WS-FS-CPTE
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

       6030-READ-CPTE-FIN.
           EXIT.

       6040-POINTER-CPTE-NOM-DEB.

           START F-CPTE KEY >= FS-CPT-NOM.

           IF NOT WS-CPTE-OPERATIONOK AND NOT WS-CPTE-ENRINEXISTANT
           THEN
               DISPLAY 'ERREUR DE POINTAGE DU FICHIER COMPTE'
      -                ', CODE = ' WS-FS-CPTE
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

       6040-POINTER-CPTE-NOM-FIN.
           EXIT.

       6100-OPEN-ETATCLI-DEB.

           OPEN OUTPUT F-ETATCLI-S.

           IF NOT WS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''OUVERTURE DU FICHIER ETAT CLIENT'
      -                  ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

       6100-OPEN-ETATCLI-FIN.
           EXIT.

       6110-CLOSE-ETATCLI-DEB.

           CLOSE F-ETATCLI-S.

           IF NOT WS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR DE FERMETURE DU FICHIER ETAT CLIENT'
      -                ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

       6110-CLOSE-ETATCLI-FIN.
           EXIT.

       6120-ETATCLI-ENTETE-DEB.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-LETAT-TIRET AFTER PAGE.

           IF NOT WS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT CLIENT'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-LETAT-ENTETE.

           IF NOT WS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT CLIENT'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-LETAT-BLANC.

           IF NOT WS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT CLIENT'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-LETAT-TITRE.

           IF NOT WS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT CLIENT'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-LETAT-BLANC.

           IF NOT WS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT CLIENT'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-LETAT-REFDEB.

           IF NOT WS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT CLIENT'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-LETAT-REFFIN.

           IF NOT WS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT CLIENT'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-LETAT-BLANC.

           IF NOT WS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT CLIENT'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-LETAT-INTITULE.

           IF NOT WS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT CLIENT'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-LETAT-BLANC.

           IF NOT WS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT CLIENT'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

       6120-ETATCLI-ENTETE-FIN.
           EXIT.

       6130-ETATCLI-DETAILS-DEB.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-LETAT-DETAIL.

           IF NOT WS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT CLIENT'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

       6130-ETATCLI-DETAILS-FIN.
           EXIT.

       6140-ETATCLI-BDP0CLI-DEB.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-LETAT-LIGNE0CLI.

           IF NOT WS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT CLIENT'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-LETAT-TIRET.

           IF NOT WS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT CLIENT'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

       6140-ETATCLI-BDP0CLI-FIN.
           EXIT.

       6150-ETATCLI-BDPCLI-DEB.

           WRITE FS-ENRG-F-ETATCLI
                 FROM WS-LETAT-TIRET.

           IF NOT WS-ETATCLI-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT CLIENT'
                         ', CODE = ' WS-FS-ETATCLI-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

       6150-ETATCLI-BDPCLI-FIN.
           EXIT.

       6200-OPEN-ETATANO-DEB.

           OPEN OUTPUT F-ETATANO-S.

           IF NOT WS-ETATANO-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''OUVERTURE DU FICHIER ETAT ANO'
      -                  ', CODE = ' WS-FS-ETATANO-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

       6200-OPEN-ETATANO-FIN.
           EXIT.

       6210-CLOSE-ETATANO-DEB.

           CLOSE F-ETATANO-S.

           IF NOT WS-ETATANO-OPERATIONOK
           THEN
               DISPLAY 'ERREUR DE FERMETURE DU FICHIER ETAT ANO'
      -                ', CODE = ' WS-FS-ETATANO-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.


       6210-CLOSE-ETATANO-FIN.
           EXIT.

       6220-WRITE-ETATANO-ENTETE-DEB.

           WRITE FS-ENRG-F-ETATANO
                 FROM WS-LANO-ASTER AFTER PAGE.

           IF NOT WS-ETATANO-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT ANO'
                         ', CODE = ' WS-FS-ETATANO-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATANO
                 FROM WS-LANO-TITRE.

           IF NOT WS-ETATANO-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT ANO'
                         ', CODE = ' WS-FS-ETATANO-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATANO
                 FROM WS-LANO-ASTER.

           IF NOT WS-ETATANO-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT ANO'
                         ', CODE = ' WS-FS-ETATANO-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

       6220-WRITE-ETATANO-ENTETE-FIN.
           EXIT.

       6230-ETATANO-DETAILS-DEB.

           WRITE FS-ENRG-F-ETATANO
                 FROM WS-LANO-ERREUR.

           IF NOT WS-ETATANO-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT ANO'
                         ', CODE = ' WS-FS-ETATANO-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATANO
                 FROM WS-LANO-ENR1.

           IF NOT WS-ETATANO-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT ANO'
                         ', CODE = ' WS-FS-ETATANO-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATANO
                 FROM WS-LANO-ENR2.

           IF NOT WS-ETATANO-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT ANO'
                         ', CODE = ' WS-FS-ETATANO-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

           WRITE FS-ENRG-F-ETATANO
                 FROM WS-LANO-INTERL.

           IF NOT WS-ETATANO-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT ANO'
                         ', CODE = ' WS-FS-ETATANO-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

       6230-ETATANO-DETAILS-FIN.
           EXIT.

       6240-WRITE-ETATANO-FDF-DEB.

           WRITE FS-ENRG-F-ETATANO
                 FROM WS-LANO-ASTER.

           IF NOT WS-ETATANO-OPERATIONOK
           THEN
               DISPLAY 'ERREUR D''ECRITURE DANS LE FICHIER ETAT ANO'
                         ', CODE = ' WS-FS-ETATANO-S
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.

       6240-WRITE-ETATANO-FDF-FIN.
           EXIT.

      *
      *---------------------------------------------------------------*
      *   7XXX-  : TRANSFERTS ET CALCULS COMPLEXES                    *
      *---------------------------------------------------------------*
      *
       7000-VERIF-ANODEMANDEUR-DEB.

           IF WS-DEM-NOM = '                    '
           THEN
               ADD 1 TO WS-CERRDEMANDE

               ADD 1 TO WS-CERR

               MOVE WS-CERR                      TO WS-LANO-NUM-ED

               MOVE 'NOM DU DEMANDEUR MANQUANT ' TO WS-LANO-TYP-ED

               MOVE WS-ENR-DEM                   TO WS-LANO-ENR-ED

               PERFORM 6230-ETATANO-DETAILS-DEB
                  THRU 6230-ETATANO-DETAILS-FIN
           END-IF.

       7000-VERIF-ANODEMANDEUR-FIN.
           EXIT.

       7010-VERIF-ANOBORNES-TYPEA-DEB.

           IF WS-DEM-CPT-DEB > WS-DEM-CPT-FIN
           THEN
               ADD 1 TO WS-CERRDEMANDE

               ADD 1 TO WS-CERR

               MOVE WS-CERR                      TO WS-LANO-NUM-ED

               MOVE 'BORNE INF > BORNE SUP    '  TO WS-LANO-TYP-ED

               MOVE WS-ENR-DEM                   TO WS-LANO-ENR-ED

               PERFORM 6230-ETATANO-DETAILS-DEB
                  THRU 6230-ETATANO-DETAILS-FIN
           END-IF.

       7010-VERIF-ANOBORNES-TYPEA-FIN.
           EXIT.

       7020-VERIF-ANOBORNES-TYPEB-DEB.

           IF WS-DEM-CLI-DEB > WS-DEM-CLI-FIN
           THEN
               ADD 1 TO WS-CERRDEMANDE

               ADD 1 TO WS-CERR

               MOVE WS-CERR                      TO WS-LANO-NUM-ED

               MOVE 'BORNE INF > BORNE SUP    '  TO WS-LANO-TYP-ED

               MOVE WS-ENR-DEM                   TO WS-LANO-ENR-ED

               PERFORM 6230-ETATANO-DETAILS-DEB
                  THRU 6230-ETATANO-DETAILS-FIN
           END-IF.

       7020-VERIF-ANOBORNES-TYPEB-FIN.
           EXIT.

       7030-GERERBDPCLI-DEB.

           PERFORM 6150-ETATCLI-BDPCLI-DEB
              THRU 6150-ETATCLI-BDPCLI-FIN.

           ADD 1 TO WS-PAGE.

           MOVE WS-PAGE TO WS-LETAT-PAGE-ED.

           MOVE 0 TO WS-NUMLIGNE.

           PERFORM 6120-ETATCLI-ENTETE-DEB
              THRU 6120-ETATCLI-ENTETE-FIN.

       7030-GERERBDPCLI-FIN.
           EXIT.

       7040-GERERDATES-DEB.

           MOVE WS-CPT-DCREA-SS TO WS-LETAT-DCREA-SS-ED.

           MOVE WS-CPT-DCREA-AA TO WS-LETAT-DCREA-AA-ED.

           MOVE WS-CPT-DCREA-MM TO WS-LETAT-DCREA-MM-ED.

           MOVE WS-CPT-DCREA-JJ TO WS-LETAT-DCREA-JJ-ED.

           MOVE WS-CPT-DMAJ-SS  TO WS-LETAT-DMAJ-SS-ED.

           MOVE WS-CPT-DMAJ-AA  TO WS-LETAT-DMAJ-AA-ED.

           MOVE WS-CPT-DMAJ-MM  TO WS-LETAT-DMAJ-MM-ED.

           MOVE WS-CPT-DMAJ-JJ  TO WS-LETAT-DMAJ-JJ-ED.

       7040-GERERDATES-FIN.
           EXIT.

       7050-VERIF-NUMERICITE-DEB.

           IF WS-DEM-CPT-DEB IS NOT NUMERIC
           OR WS-DEM-CPT-FIN IS NOT NUMERIC
           THEN
               ADD 1 TO WS-CERRDEMANDE

               ADD 1 TO WS-CERR

               MOVE WS-CERR                      TO WS-LANO-NUM-ED

               MOVE 'BORNE(S) NON NUMERIQUE(S)'  TO WS-LANO-TYP-ED

               MOVE WS-ENR-DEM                   TO WS-LANO-ENR-ED

               PERFORM 6230-ETATANO-DETAILS-DEB
                  THRU 6230-ETATANO-DETAILS-FIN
           END-IF.

       7050-VERIF-NUMERICITE-FIN.
           EXIT.

      *
      *---------------------------------------------------------------*
      *   8XXX-  : ORDRES DE MANIPULATION DES EDITIONS                *
      *---------------------------------------------------------------*

       8000-COMPTERENDU-ENTETE-DEB.

           DISPLAY WS-LCRE-ASTER.

           DISPLAY WS-LCRE-TITRE.

           DISPLAY WS-LCRE-ASTER.

       8000-COMPTERENDU-ENTETE-FIN.
           EXIT.

       8010-COMPTERENDU-DETAILS-DEB.

           DISPLAY WS-LCRE-DETAIL.

       8010-COMPTERENDU-DETAILS-FIN.
           EXIT.

       8020-COMPTERENDU-FDF-DEB.

           DISPLAY WS-LCRE-ASTER.

       8020-COMPTERENDU-FDF-FIN.
           EXIT.

       8999-STATISTIQUES-DEB.

            DISPLAY '************************************************'
            DISPLAY '*     STATISTIQUES DU PROGRAMME HNSO5M5        *'
            DISPLAY '*     ==================================       *'
            DISPLAY '************************************************'.

       8999-STATISTIQUES-FIN.
            EXIT.

      *---------------------------------------------------------------*
      *   9XXX-  : ORDRES DE MANIPULATION DES SOUS-PROGRAMMES         *
      *---------------------------------------------------------------*
      *
      *9000-APPEL-SP-DEB.
      *
      *9000-APPEL-SP-FIN.
      *     EXIT.
      *
      *---------------------------------------------------------------*
      *   9999-  : PROTECTION FIN DE PROGRAMME                        *
      *---------------------------------------------------------------*

       9999-FIN-PROGRAMME-DEB.

            DISPLAY '*==============================================*'
            DISPLAY '*     FIN NORMALE DU PROGRAMME HNSO5M5         *'
            DISPLAY '*==============================================*'
            STOP RUN.

       9999-FIN-PROGRAMME-FIN.
            EXIT.

       9999-ERREUR-PROGRAMME-DEB.

            DISPLAY '*==============================================*'
            DISPLAY '*        UNE ANOMALIE A ETE DETECTEE           *'
            DISPLAY '*     FIN ANORMALE DU PROGRAMME HNSO5M5        *'
            DISPLAY '*==============================================*'
            MOVE 12 TO RETURN-CODE.
            STOP RUN.

       9999-ERREUR-PROGRAMME-FIN.
            EXIT.


CBL    MAP,LIST,SSRANGE,FDUMP
      *===============================================================*
      *--                INFORMATIONS GENERALES                     --*
      *---------------------------------------------------------------*
      *  NOM DU PROGRAMME : HNSO5M6                                   *
      *  NOM DU REDACTEUR : REVERE ALAIN                              *
      *  SOCIETE          : GFI INFORMATIQUE                          *
      *  DATE DE CREATION : 27/08/2014                                *
      *---------------------------------------------------------------*
      *--               OBJECTIFS GENERAUX DU PROGRAMME             --*
      *---------------------------------------------------------------*
      * PERMET DE CONNAITRE QUELS SONT LES NOMBRES QUI APPARAISSENT   *
      * LES PLUS SOUVENTS QUAND ON ADDITIONNE I,J ET K AVEC           *
      * 1<=I<=10, 1<=J<=10 ET 1<=K<=10
      *---------------------------------------------------------------*
      *--               HISTORIQUE DES MODIFICATIONS                --*
      *---------------------------------------------------------------*
      * DATE  MODIF   ยง          NATURE DE LA MODIFICATION            *
      *---------------------------------------------------------------*
      *               ยง                                               *
      *===============================================================*

       IDENTIFICATION DIVISION.
       PROGRAM-ID.      HNSO5M6.

      *                  ==============================               *
      *=================<   ENVIRONMENT     DIVISION   >==============*
      *                  ==============================               *
      *                                                               *
      *===============================================================*

      **********************
       ENVIRONMENT DIVISION.
      **********************

      *======================
       CONFIGURATION SECTION.
      *======================

      *--------------
       SPECIAL-NAMES.
      *--------------
           DECIMAL-POINT IS COMMA.

      *=====================
       INPUT-OUTPUT SECTION.
      *=====================

      *-------------
       FILE-CONTROL.
      *-------------

      ****AUCUN FICHIER****

      ***************
       DATA DIVISION.
      ***************

      *=============
       FILE SECTION.
      *=============

      *========================
       WORKING-STORAGE SECTION.
      *========================

      *****************************
      *INITIALISATION DES TABLEAUX*
      *****************************
       01  WS-TAB1.
           05 FILLER                   OCCURS 10.
              10 FILLER                OCCURS 10.
                 15 FILLER             OCCURS 10.
                    20 WS-POSTE-TAB1   PIC 9(2).

       01  WS-ID1                      PIC S9(4) COMP.
       01  WS-ID2                      PIC S9(4) COMP.
       01  WS-ID3                      PIC S9(4) COMP.

       01  WS-TAB2.
           05 FILLER                   OCCURS 30.
              10 WS-POSTE-TAB2         PIC S9(5) COMP-3.
              10 WS-ESTMAX             PIC X(3).
       01  WS-ITAB2                    PIC S9(4) COMP.

      ***************************
      *DECLARATION DES VARIABLES*
      ***************************

       01  WS-MAX-NB                   PIC S9(5) COMP-3 VALUE ZERO.

       01  WS-CMAX                     PIC S9(4) COMP VALUE ZERO.

       01  WS-CHAINE                   PIC X(100).

       01  WS-INDICE                   PIC 99.

       01  WS-VALTAB2                  PIC 99.

      *VARIABLES D'EDITION*

       01  WS-ED1                      PIC ZZZ9.
       01  WS-ED2                      PIC ZZZ9.
       01  WS-ED3                      PIC ZZZ9.

      *                  ==============================               *
      *=================<    PROCEDURE      DIVISION   >==============*
      *                  ==============================               *

      *===============================================================*
       PROCEDURE           DIVISION.

      *===============================================================*
      *===============================================================*
      *    STRUCTURATION DE LA PARTIE ALGORITHMIQUE DU PROGRAMME      *
      *---------------------------------------------------------------*
      *                                                               *
      *    1 : LES COMPOSANTS DU DIAGRAMME SONT CODES A L'AIDE DE     *
      *        DEUX PARAGRAPHES  XXXX-COMPOSANT-DEB                   *
      *                          XXYY-COMPOSANR-FIN                   *
      *                                                               *
      *    2 : XX REPRESENTE LE NIVEAU HIERARCHIQUE                   *
      *        YY DIFFERENCIE LES COMPOSANTS DE MEME NIVEAU           *
      *                                                               *
      *    3 : TOUT COMPOSANT EST PRECEDE D'UN CARTOUCHE DE           *
      *        COMMENTAIRE QUI EXPLICITE LE ROLE DU COMPOSANT         *
      *                                                               *
      *                                                               *
      *===============================================================*
      *===============================================================*


      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT PROGRAMME              *
      *               ==================================              *
      *INITIALISE LES TABLEAUX
      *BOUCLE SUR LES AUTRES COMPOSANTS
      *---------------------------------------------------------------*

       0000-PROGRAMME-DEB.

           INITIALIZE WS-TAB1.

           INITIALIZE WS-TAB2.

       0000-PROGRAMME-DEB.

           PERFORM 1000-INIT-TAB1-DEB
              THRU 1000-INIT-TAB1-FIN
              VARYING WS-ID1 FROM 1 BY 1
              UNTIL WS-ID1 > 10
                AFTER WS-ID2 FROM 1 BY 1
                      UNTIL WS-ID2 > 10
                        AFTER WS-ID3 FROM 1 BY 1
                              UNTIL WS-ID3 > 10.

           DISPLAY 'ETAPE 1 - TABLEAU-1 GLOBAL :'.

           PERFORM 1010-AFFICH-TAB1-DEB
              THRU 1010-AFFICH-TAB1-FIN
              VARYING WS-ID1 FROM 1 BY 1
              UNTIL WS-ID1 > 10
                AFTER WS-ID2 FROM 1 BY 1
                      UNTIL WS-ID2 > 10.

           PERFORM 1020-INIT-TAB2-DEB
              THRU 1020-INIT-TAB2-FIN
              VARYING WS-ID1 FROM 1 BY 1
              UNTIL WS-ID1 > 10
                AFTER WS-ID2 FROM 1 BY 1
                      UNTIL WS-ID2 > 10
                        AFTER WS-ID3 FROM 1 BY 1
                              UNTIL WS-ID3 > 10.

           DISPLAY SPACE.
           DISPLAY 'ETAPE 1 - TABLEAU-2 GLOBAL :'.

           PERFORM 1030-AFFICH-TAB2-DEB
              THRU 1030-AFFICH-TAB2-FIN.

           PERFORM 1040-CHERCHERMAX-DEB
              THRU 1040-CHERCHERMAX-FIN
              VARYING WS-ITAB2 FROM 1 BY 1
              UNTIL WS-ITAB2 > 30.

           PERFORM 1050-ECRIREMAX-DEB
              THRU 1050-ECRIREMAX-FIN
              VARYING WS-ITAB2 FROM 1 BY 1
              UNTIL WS-ITAB2 > 30.

           PERFORM 1060-RECH-POSTESMAX-DEB
              THRU 1060-RECH-POSTESMAX-FIN
              VARYING WS-ITAB2 FROM 1 BY 1
              UNTIL WS-ITAB2 > 30.

       0000-PROGRAMME-FIN.

           PERFORM  8999-STATISTIQUES-DEB
              THRU  8999-STATISTIQUES-FIN

           PERFORM  9999-FIN-PROGRAMME-DEB
              THRU  9999-FIN-PROGRAMME-FIN.

           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT INIT-TAB1              *
      *               ==================================              *
      *PERMET DE REMPLIR LE TABLEAU 1
      *---------------------------------------------------------------*

       1000-INIT-TAB1-DEB.

           COMPUTE WS-POSTE-TAB1(WS-ID1,WS-ID2,WS-ID3) = 0
                      + WS-ID1
                      + WS-ID2
                      + WS-ID3.

       1000-INIT-TAB1-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT AFFICH-TAB1            *
      *               ====================================            *
      * AFFICHE LE TABLEAU 1
      *---------------------------------------------------------------*

       1010-AFFICH-TAB1-DEB.

           MOVE '*' TO WS-CHAINE.

       1010-AFFICH-TAB1-COR.

           PERFORM 2000-CREERSTRING1-DEB
              THRU 2000-CREERSTRING1-FIN
              VARYING WS-ID3 FROM 1 BY 1
              UNTIL WS-ID3 > 10.

       1010-AFFICH-TAB1-FIN.

           DISPLAY WS-CHAINE.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT INIT-TAB2              *
      *               ==================================              *
      * PERMET DE REMPLIR LE TABLEAU 2
      *---------------------------------------------------------------*

       1020-INIT-TAB2-DEB.

           MOVE WS-POSTE-TAB1(WS-ID1,WS-ID2,WS-ID3) TO WS-INDICE.

           ADD 1 TO WS-POSTE-TAB2(WS-INDICE).

       1020-INIT-TAB2-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT AFFICH-TAB2            *
      *               ====================================            *
      * PERMET D AFFICHER LE TABLEAU 2
      *---------------------------------------------------------------*

       1030-AFFICH-TAB2-DEB.

           MOVE '*' TO WS-CHAINE.

       1030-AFFICH-TAB2-COR.

           PERFORM 2010-CREERSTRING2-DEB
              THRU 2010-CREERSTRING2-FIN
              VARYING WS-ITAB2 FROM 1 BY 1
              UNTIL WS-ITAB2 > 30.

       1030-AFFICH-TAB2-FIN.

           DISPLAY WS-CHAINE.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT CHERCHERMAX            *
      *               ====================================            *
      * RECHERCHE LA VALEUR MAXIMUM DANS LE TABLEAU 2
      *---------------------------------------------------------------*

       1040-CHERCHERMAX-DEB.

           IF WS-POSTE-TAB2(WS-ITAB2) > WS-MAX-NB
           THEN
               MOVE WS-POSTE-TAB2(WS-ITAB2) TO WS-MAX-NB
           END-IF.

       1040-CHERCHERMAX-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT ECRIREMAX              *
      *               ==================================              *
      * RENSEIGNE DANS LE TABLEAU 2 LES VALEURS MAXIMUMS
      *---------------------------------------------------------------*

       1050-ECRIREMAX-DEB.

           IF WS-POSTE-TAB2(WS-ITAB2) = WS-MAX-NB
           THEN
               MOVE 'OUI' TO WS-ESTMAX(WS-ITAB2)
           END-IF.

       1050-ECRIREMAX-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT RECH-POSTESMAX         *
      *               =======================================         *
      * SI ON SE TROUVE DANS UNE VALEUR MAXIMUM ALORS ON VA AFFICHER
      * CETTE VALEUR ET ON VA BOUCLER SUR 2020-AFFICH-POSTESMAX
      *---------------------------------------------------------------*

       1060-RECH-POSTESMAX-DEB.
           EXIT.

       1060-RECH-POSTESMAX-COR.
           IF WS-ESTMAX(WS-ITAB2)='OUI'
           THEN
               PERFORM 8000-ENTETEPOSTES-DEB
                  THRU 8000-ENTETEPOSTES-FIN
               PERFORM 2020-AFFICH-POSTESMAX-DEB
                  THRU 2020-AFFICH-POSTESMAX-DEB
                  VARYING WS-ID1 FROM 1 BY 1
                  UNTIL WS-ID1 > 10
                    AFTER WS-ID2 FROM 1 BY 1
                          UNTIL WS-ID2 > 10
                            AFTER WS-ID3 FROM 1 BY 1
                                  UNTIL WS-ID3 > 10.

       1060-RECH-POSTESMAX-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT CREERSTRING1           *
      *               =====================================           *
      * REMPLIT LA CHAINE DE CARACTERES AVEC LA VALEUR DU TABLEAU 1
      *---------------------------------------------------------------*

       2000-CREERSTRING1-DEB.

           STRING WS-CHAINE DELIMITED BY '*'
                  WS-POSTE-TAB1(WS-ID1,WS-ID2,WS-ID3)
                  ' *' DELIMITED BY SIZE
                  INTO WS-CHAINE.

       2000-CREERSTRING1-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT CREERSTRING2           *
      *               =====================================           *
      * REMPLIT LA CHAINE DE CARACTERES AVEC LA VALEUR DU TABLEAU 2
      *---------------------------------------------------------------*

       2010-CREERSTRING2-DEB.

           MOVE WS-POSTE-TAB2(WS-ITAB2) TO WS-VALTAB2.

           STRING WS-CHAINE DELIMITED BY '*'
                  WS-VALTAB2
                  ' *' DELIMITED BY SIZE
                  INTO WS-CHAINE.

       2010-CREERSTRING2-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT AFFICH-POSTESMAX       *
      *               =========================================       *
      * AFFICHE LES 3 DIMENSIONS DU TABLEAU 1 DONT LA SOMME EST EGALE
      * A LA VALEUR LA PLUS ELEVEE.
      *---------------------------------------------------------------*

       2020-AFFICH-POSTESMAX-DEB.

           IF WS-POSTE-TAB1(WS-ID1,WS-ID2,WS-ID3) = WS-ITAB2
           THEN
               MOVE WS-ID1 TO WS-ED1
               MOVE WS-ID2 TO WS-ED2
               MOVE WS-ID3 TO WS-ED3
               DISPLAY WS-ED1 ' , ' WS-ED2 ' , ' WS-ED3
           END-IF.

       2020-AFFICH-POSTESMAX-FIN.
           EXIT.

      *===============================================================*
      *===============================================================*
      *    STRUCTURATION DE LA PARTIE INDEPENDANTE DU PROGRAMME       *
      *---------------------------------------------------------------*
      *                                                               *
      *   6XXX-  : ORDRES DE MANIPULATION DES FICHIERS                *
      *   7XXX-  : TRANSFERTS ET CALCULS COMPLEXES                    *
      *   8XXX-  : ORDRES DE MANIPULATION DES EDITIONS                *
      *   9XXX-  : PROTECTION FIN DE PROGRAMME                        *
      *   9999-  : PROTECTION FIN DE PROGRAMME                        *
      *                                                               *
      *===============================================================*
      *===============================================================*

      *---------------------------------------------------------------*
      *   6XXX-  : ORDRES DE MANIPULATION DES FICHIERS                *
      *---------------------------------------------------------------*
      *                                                               *
      *6000-ORDRE-FICHIER-DEB.
      *
      *6000-ORDRE-FICHIER-FIN.
      *     EXIT.
      *
      *---------------------------------------------------------------*
      *   7XXX-  : TRANSFERTS ET CALCULS COMPLEXES                    *
      *---------------------------------------------------------------*
      *
      *7000-ORDRE-CALCUL-DEB.
      *
      *7000-ORDRE-CALCUL-FIN.
      *     EXIT.
      *
      *---------------------------------------------------------------*
      *   8XXX-  : ORDRES DE MANIPULATION DES EDITIONS                *
      *---------------------------------------------------------------*

       8000-ENTETEPOSTES-DEB.

               ADD 1 TO WS-CMAX.
               DISPLAY SPACE.
               MOVE WS-CMAX TO WS-ED1
               MOVE WS-ITAB2 TO WS-ED2
               DISPLAY 'ETAPE 1 - VALEUR LA PLUS FREQUENTE '
      -                WS-ED1
      -                ' : '
      -                WS-ED2.
               MOVE WS-MAX-NB TO WS-ED3.
               DISPLAY 'TROUVEE '
      -                WS-ED3
      -                ' FOIS DANS LES POSTES : '.

       8000-ENTETEPOSTES-FIN.
           EXIT.

       8999-STATISTIQUES-DEB.

            DISPLAY '************************************************'
            DISPLAY '*     STATISTIQUES DU PROGRAMME HNSO5M6        *'
            DISPLAY '*     ==================================       *'
            DISPLAY '************************************************'.

       8999-STATISTIQUES-FIN.
            EXIT.

      *---------------------------------------------------------------*
      *   9XXX-  : ORDRES DE MANIPULATION DES SOUS-PROGRAMMES         *
      *---------------------------------------------------------------*
      *
      *9000-APPEL-SP-DEB.
      *
      *9000-APPEL-SP-FIN.
      *     EXIT.
      *
      *---------------------------------------------------------------*
      *   9999-  : PROTECTION FIN DE PROGRAMME                        *
      *---------------------------------------------------------------*

       9999-FIN-PROGRAMME-DEB.

            DISPLAY '*==============================================*'
            DISPLAY '*     FIN NORMALE DU PROGRAMME HNSO5M6         *'
            DISPLAY '*==============================================*'
            STOP RUN.

       9999-FIN-PROGRAMME-FIN.
            EXIT.

       9999-ERREUR-PROGRAMME-DEB.

            DISPLAY '*==============================================*'
            DISPLAY '*        UNE ANOMALIE A ETE DETECTEE           *'
            DISPLAY '*     FIN ANORMALE DU PROGRAMME HNSO5M6        *'
            DISPLAY '*==============================================*'
            MOVE 12 TO RETURN-CODE.
            STOP RUN.

       9999-ERREUR-PROGRAMME-FIN.
            EXIT.


CBL    MAP,LIST,SSRANGE,FDUMP
      *===============================================================*
      *--                INFORMATIONS GENERALES                     --*
      *---------------------------------------------------------------*
      *  NOM DU PROGRAMME : HNSO5M7                                   *
      *  NOM DU REDACTEUR : REVERE ALAIN                              *
      *  SOCIETE          : GFI INFORMATIQUE                          *
      *  DATE DE CREATION : 28/08/2014                                *
      *---------------------------------------------------------------*
      *--               OBJECTIFS GENERAUX DU PROGRAMME             --*
      *---------------------------------------------------------------*
      * PERMET DE CONNAITRE LE NOMBRE D'APPARITION DE DIFFERENTES     *
      * VALEURS COMPRISES DANS UN SYSIN DANS UN TABLEAU OU LES VALEURS*
      * SON EGALES A LA SOMME DE SES DIMENSIONS I J ET K
      * 1<=I<=10, 1<=J<=10 ET 1<=K<=10
      *---------------------------------------------------------------*
      *--               HISTORIQUE DES MODIFICATIONS                --*
      *---------------------------------------------------------------*
      * DATE  MODIF   ยง          NATURE DE LA MODIFICATION            *
      *---------------------------------------------------------------*
      *               ยง                                               *
      *===============================================================*

       IDENTIFICATION DIVISION.
       PROGRAM-ID.      HNSO5M7.

      *                  ==============================               *
      *=================<   ENVIRONMENT     DIVISION   >==============*
      *                  ==============================               *
      *                                                               *
      *===============================================================*

      **********************
       ENVIRONMENT DIVISION.
      **********************

      *======================
       CONFIGURATION SECTION.
      *======================

      *--------------
       SPECIAL-NAMES.
      *--------------
           DECIMAL-POINT IS COMMA.

      *=====================
       INPUT-OUTPUT SECTION.
      *=====================

      *-------------
       FILE-CONTROL.
      *-------------

      ****AUCUN FICHIER****

      ***************
       DATA DIVISION.
      ***************

      *=============
       FILE SECTION.
      *=============

      *========================
       WORKING-STORAGE SECTION.
      *========================

      *****************************
      *INITIALISATION DES TABLEAUX*
      *****************************
       01  WS-TAB1.
           05 FILLER                   OCCURS 10.
              10 FILLER                OCCURS 10.
                 15 FILLER             OCCURS 10.
                    20 WS-POSTE-TAB1   PIC 9(2).

       01  WS-ID1                      PIC S9(4) COMP.
       01  WS-ID2                      PIC S9(4) COMP.
       01  WS-ID3                      PIC S9(4) COMP.

       01  WS-TAB3.
           05 FILLER                   OCCURS 100.
              10 WS-TAB3-ID1           PIC S9(4) COMP.
              10 WS-TAB3-ID2           PIC S9(4) COMP.
              10 WS-TAB3-ID3           PIC S9(4) COMP.

       01  WS-ITAB3                    PIC S9(4) COMP.

      ***************************
      *DECLARATION DES VARIABLES*
      ***************************

       01  WS-CHAINE                   PIC X(100).

       01  WS-VALTAB3                  PIC 99.

       01  WS-E                        PIC 9(2).

       01  WS-VALSYSIN                 PIC XX.

       01  WS-S                        PIC 9(2).

       01  WS-NB                       PIC 9(2) VALUE ZERO.

      *VARIABLES D'EDITION*

       01  WS-ED1                      PIC ZZZ9.
       01  WS-ED2                      PIC ZZZ9.
       01  WS-ED3                      PIC ZZZ9.

      *                  ==============================               *
      *=================<    PROCEDURE      DIVISION   >==============*
      *                  ==============================               *

      *===============================================================*
       PROCEDURE           DIVISION.

      *===============================================================*
      *===============================================================*
      *    STRUCTURATION DE LA PARTIE ALGORITHMIQUE DU PROGRAMME      *
      *---------------------------------------------------------------*
      *                                                               *
      *    1 : LES COMPOSANTS DU DIAGRAMME SONT CODES A L'AIDE DE     *
      *        DEUX PARAGRAPHES  XXXX-COMPOSANT-DEB                   *
      *                          XXYY-COMPOSANR-FIN                   *
      *                                                               *
      *    2 : XX REPRESENTE LE NIVEAU HIERARCHIQUE                   *
      *        YY DIFFERENCIE LES COMPOSANTS DE MEME NIVEAU           *
      *                                                               *
      *    3 : TOUT COMPOSANT EST PRECEDE D'UN CARTOUCHE DE           *
      *        COMMENTAIRE QUI EXPLICITE LE ROLE DU COMPOSANT         *
      *                                                               *
      *                                                               *
      *===============================================================*
      *===============================================================*


      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT PROGRAMME              *
      *               ==================================              *
      *INITIALISE LE TABLEAU 1 ET RECUPERE LA VALEUR DU SYSIN
      *BOUCLE SUR LES AUTRES COMPOSANTS
      *---------------------------------------------------------------*

       0000-PROGRAMME-DEB.

           INITIALIZE WS-TAB1.

           ACCEPT WS-VALSYSIN.

       0000-PROGRAMME-COR.

           PERFORM 1000-INIT-TAB1-DEB
              THRU 1000-INIT-TAB1-FIN
              VARYING WS-ID1 FROM 1 BY 1
              UNTIL WS-ID1 > 10
                AFTER WS-ID2 FROM 1 BY 1
                      UNTIL WS-ID2 > 10
                        AFTER WS-ID3 FROM 1 BY 1
                              UNTIL WS-ID3 > 10.

           DISPLAY 'ETAPE 2 - TABLEAU-1 GLOBAL :'.

           PERFORM 1010-AFFICH-TAB1-DEB
              THRU 1010-AFFICH-TAB1-FIN
              VARYING WS-ID1 FROM 1 BY 1
              UNTIL WS-ID1 > 10
                AFTER WS-ID2 FROM 1 BY 1
                      UNTIL WS-ID2 > 10.

           PERFORM 1020-APPELSOUSPROG-DEB
              THRU 1020-APPELSOUSPROG-FIN
             UNTIL WS-VALSYSIN = '$$'.

       0000-PROGRAMME-FIN.

           PERFORM  8999-STATISTIQUES-DEB
              THRU  8999-STATISTIQUES-FIN

           PERFORM  9999-FIN-PROGRAMME-DEB
              THRU  9999-FIN-PROGRAMME-FIN.

           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT INIT-TAB1              *
      *               ==================================              *
      *PERMET DE REMPLIR LE TABLEAU 1
      *---------------------------------------------------------------*

       1000-INIT-TAB1-DEB.

           COMPUTE WS-POSTE-TAB1(WS-ID1,WS-ID2,WS-ID3) = 0
                      + WS-ID1
                      + WS-ID2
                      + WS-ID3.

       1000-INIT-TAB1-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT AFFICH-TAB1            *
      *               ====================================            *
      * AFFICHE LE TABLEAU 1
      *---------------------------------------------------------------*

       1010-AFFICH-TAB1-DEB.

           MOVE '*' TO WS-CHAINE.

       1010-AFFICH-TAB1-COR.

           PERFORM 2000-CREERSTRING1-DEB
              THRU 2000-CREERSTRING1-FIN
              VARYING WS-ID3 FROM 1 BY 1
              UNTIL WS-ID3 > 10.

       1010-AFFICH-TAB1-FIN.

           DISPLAY WS-CHAINE.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT APPELSOUSPROG          *
      *               ======================================          *
      * APPELE LE SOUS PROGRAMME HNSO5M8, AFFICHE SES RESULTATS ET
      * RECUPERE UNE NOUVELLE VALEUR DU SYSIN
      *---------------------------------------------------------------*

       1020-APPELSOUSPROG-DEB.

           MOVE WS-VALSYSIN TO WS-E.

           PERFORM 9000-APPEL-HNSO5M8-DEB
              THRU 9000-APPEL-HNSO5M8-FIN.

           ADD 1 TO WS-NB.

           MOVE WS-NB TO WS-ED1.

           MOVE WS-E TO WS-ED2.

           MOVE WS-S TO WS-ED3.

           DISPLAY SPACE.

           DISPLAY 'VALEUR RECHERCHEE ' WS-ED1 ' : ' WS-ED2.

       1020-APPELSOUSPROG-COR.

           IF WS-S = 0
           THEN
               DISPLAY 'CETTE VALEUR N''APPARAIT PAS DANS LE TABLEAU'
           ELSE
               DISPLAY 'TROUVEE ' WS-ED3 ' FOIS DANS LES POSTES'
               PERFORM 2010-AFFICH-TAB3-DEB
                  THRU 2010-AFFICH-TAB3-FIN
                  VARYING WS-ITAB3 FROM 1 BY 1
                    UNTIL WS-ITAB3 > 100
                       OR WS-TAB3-ID1(WS-ITAB3) = ZERO
           END-IF.

       1020-APPELSOUSPROG-FIN.

           ACCEPT WS-VALSYSIN.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT CREERSTRING1           *
      *               =====================================           *
      * REMPLIT LA CHAINE DE CARACTERES AVEC LA VALEUR DU TABLEAU 1
      *---------------------------------------------------------------*

       2000-CREERSTRING1-DEB.

           STRING WS-CHAINE DELIMITED BY '*'
                  WS-POSTE-TAB1(WS-ID1,WS-ID2,WS-ID3)
                  ' *' DELIMITED BY SIZE
                  INTO WS-CHAINE.

       2000-CREERSTRING1-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT AFFICH-TAB3            *
      *               ====================================            *
      * AFFICHE LE CONTENU DU TABLEAU 3
      *---------------------------------------------------------------*

       2010-AFFICH-TAB3-DEB.

           MOVE WS-TAB3-ID1(WS-ITAB3) TO WS-ED1.

           MOVE WS-TAB3-ID2(WS-ITAB3) TO WS-ED2.

           MOVE WS-TAB3-ID3(WS-ITAB3) TO WS-ED3.

           DISPLAY WS-ED1 ' , ' WS-ED2 ' , ' WS-ED3.

       2010-AFFICH-TAB3-FIN.
           EXIT.

      *===============================================================*
      *===============================================================*
      *    STRUCTURATION DE LA PARTIE INDEPENDANTE DU PROGRAMME       *
      *---------------------------------------------------------------*
      *                                                               *
      *   6XXX-  : ORDRES DE MANIPULATION DES FICHIERS                *
      *   7XXX-  : TRANSFERTS ET CALCULS COMPLEXES                    *
      *   8XXX-  : ORDRES DE MANIPULATION DES EDITIONS                *
      *   9XXX-  : PROTECTION FIN DE PROGRAMME                        *
      *   9999-  : PROTECTION FIN DE PROGRAMME                        *
      *                                                               *
      *===============================================================*
      *===============================================================*

      *---------------------------------------------------------------*
      *   6XXX-  : ORDRES DE MANIPULATION DES FICHIERS                *
      *---------------------------------------------------------------*
      *                                                               *
      *6000-ORDRE-FICHIER-DEB.
      *
      *6000-ORDRE-FICHIER-FIN.
      *     EXIT.
      *
      *---------------------------------------------------------------*
      *   7XXX-  : TRANSFERTS ET CALCULS COMPLEXES                    *
      *---------------------------------------------------------------*
      *
      *7000-ORDRE-CALCUL-DEB.
      *
      *7000-ORDRE-CALCUL-FIN.
      *     EXIT.
      *
      *---------------------------------------------------------------*
      *   8XXX-  : ORDRES DE MANIPULATION DES EDITIONS                *
      *---------------------------------------------------------------*

       8999-STATISTIQUES-DEB.

            DISPLAY '************************************************'
            DISPLAY '*     STATISTIQUES DU PROGRAMME HNSO5M7        *'
            DISPLAY '*     ==================================       *'
            DISPLAY '************************************************'.

       8999-STATISTIQUES-FIN.
            EXIT.

      *---------------------------------------------------------------*
      *   9XXX-  : ORDRES DE MANIPULATION DES SOUS-PROGRAMMES         *
      *---------------------------------------------------------------*
      *
       9000-APPEL-HNSO5M8-DEB.

           CALL 'HNSO5M8' USING WS-TAB1 WS-E WS-S WS-TAB3.

       9000-APPEL-HNSO5M8-FIN.
           EXIT.
      *
      *---------------------------------------------------------------*
      *   9999-  : PROTECTION FIN DE PROGRAMME                        *
      *---------------------------------------------------------------*

       9999-FIN-PROGRAMME-DEB.

            DISPLAY '*==============================================*'
            DISPLAY '*     FIN NORMALE DU PROGRAMME HNSO5M7         *'
            DISPLAY '*==============================================*'
            STOP RUN.

       9999-FIN-PROGRAMME-FIN.
            EXIT.

       9999-ERREUR-PROGRAMME-DEB.

            DISPLAY '*==============================================*'
            DISPLAY '*        UNE ANOMALIE A ETE DETECTEE           *'
            DISPLAY '*     FIN ANORMALE DU PROGRAMME HNSO5M7        *'
            DISPLAY '*==============================================*'
            MOVE 12 TO RETURN-CODE.
            STOP RUN.

       9999-ERREUR-PROGRAMME-FIN.
            EXIT.


CBL    MAP,LIST,SSRANGE,FDUMP
      *===============================================================*
      *--                INFORMATIONS GENERALES                     --*
      *---------------------------------------------------------------*
      *  NOM DU PROGRAMME : HNSO5M8  (SOUS PROGRAMME)                 *
      *  NOM DU REDACTEUR : REVERE ALAIN                              *
      *  SOCIETE          : GFI INFORMATIQUE                          *
      *  DATE DE CREATION : 28/08/2014                                *
      *---------------------------------------------------------------*
      *--               OBJECTIFS GENERAUX DU PROGRAMME             --*
      *---------------------------------------------------------------*
      * CE PROGRAMME SERA EXECUTE PAR LE PROGRAMME HNSO5M7 AFIN DE    *
      * RECUPERER DANS UN TABLEAU WS-TAB1, LE NOMBRE DE FOIS ET LES   *
      * POSTES OU APPARAIT LA VALEUR E.
      *---------------------------------------------------------------*
      *--               HISTORIQUE DES MODIFICATIONS                --*
      *---------------------------------------------------------------*
      * DATE  MODIF   ยง          NATURE DE LA MODIFICATION            *
      *---------------------------------------------------------------*
      *               ยง                                               *
      *===============================================================*

       IDENTIFICATION DIVISION.
       PROGRAM-ID.      HNSO5M8.

      *                  ==============================               *
      *=================<   ENVIRONMENT     DIVISION   >==============*
      *                  ==============================               *
      *                                                               *
      *===============================================================*

      **********************
       ENVIRONMENT DIVISION.
      **********************

      *======================
       CONFIGURATION SECTION.
      *======================

      *--------------
       SPECIAL-NAMES.
      *--------------
           DECIMAL-POINT IS COMMA.

      *=====================
       INPUT-OUTPUT SECTION.
      *=====================

      *-------------
       FILE-CONTROL.
      *-------------

      ***************
      *AUCUN FICHIER*
      ***************

      ***************
       DATA DIVISION.
      ***************

      *=============
       FILE SECTION.
      *=============

      *========================
       WORKING-STORAGE SECTION.
      *========================

       01  WS-ID1                      PIC S9(4) COMP.
       01  WS-ID2                      PIC S9(4) COMP.
       01  WS-ID3                      PIC S9(4) COMP.

       01  WS-ITAB3                    PIC S9(4) COMP.

      *================
       LINKAGE SECTION.
      *================

       01  LS-TAB1.
           05 FILLER                   OCCURS 10.
              10 FILLER                OCCURS 10.
                 15 FILLER             OCCURS 10.
                    20 LS-POSTE-TAB1   PIC 9(2).

       01  LS-E                        PIC 9(2).

       01  LS-S                        PIC 9(2).

       01  LS-TAB3.
           05 FILLER                   OCCURS 100.
              10 LS-TAB3-ID1           PIC S9(4) COMP.
              10 LS-TAB3-ID2           PIC S9(4) COMP.
              10 LS-TAB3-ID3           PIC S9(4) COMP.


      *                  ==============================               *
      *=================<    PROCEDURE      DIVISION   >==============*
      *                  ==============================               *

      *===============================================================*
       PROCEDURE           DIVISION
           USING LS-TAB1 LS-E LS-S LS-TAB3.

      *===============================================================*
      *===============================================================*
      *    STRUCTURATION DE LA PARTIE ALGORITHMIQUE DU PROGRAMME      *
      *---------------------------------------------------------------*
      *                                                               *
      *    1 : LES COMPOSANTS DU DIAGRAMME SONT CODES A L'AIDE DE     *
      *        DEUX PARAGRAPHES  XXXX-COMPOSANT-DEB                   *
      *                          XXYY-COMPOSANR-FIN                   *
      *                                                               *
      *    2 : XX REPRESENTE LE NIVEAU HIERARCHIQUE                   *
      *        YY DIFFERENCIE LES COMPOSANTS DE MEME NIVEAU           *
      *                                                               *
      *    3 : TOUT COMPOSANT EST PRECEDE D'UN CARTOUCHE DE           *
      *        COMMENTAIRE QUI EXPLICITE LE ROLE DU COMPOSANT         *
      *                                                               *
      *                                                               *
      *===============================================================*
      *===============================================================*


      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT PROGRAMME              *
      *               ==================================              *
      *INITIALISE LE TABLEAU 3 ET LA VALEUR DE S, PUIS BOUCLE SUR LE
      *COMPOSANT REMPLIRTAB3
      *---------------------------------------------------------------*

       0000-PROGRAMME-DEB.

           INITIALIZE LS-TAB3.

           MOVE 0 TO LS-S.

       0000-PROGRAMME-COR.

           PERFORM 1000-REMPLIRTAB3-DEB
              THRU 1000-REMPLIRTAB3-FIN
              VARYING WS-ID1 FROM 1 BY 1
              UNTIL WS-ID1 > 10
                AFTER WS-ID2 FROM 1 BY 1
                      UNTIL WS-ID2 > 10
                        AFTER WS-ID3 FROM 1 BY 1
                              UNTIL WS-ID3 > 10.

       0000-PROGRAMME-FIN.

           PERFORM 9999-RETOUR-APPELANT-DEB
              THRU 9999-RETOUR-APPELANT-FIN.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT REMPLIRTAB3            *
      *               ====================================            *
      *SI LA VALEUR DANS LE TABLEAU 1 EST CORRECT ALORS ON INCREMENTE
      *S ET ON RECUPERE LES VALEURS DES DIMENSIONS DU TABLEAU 1
      *---------------------------------------------------------------*

       1000-REMPLIRTAB3-DEB.

           IF LS-POSTE-TAB1(WS-ID1,WS-ID2,WS-ID3) = LS-E
           THEN
               ADD 1 TO LS-S
               MOVE WS-ID1 TO LS-TAB3-ID1(LS-S)
               MOVE WS-ID2 TO LS-TAB3-ID2(LS-S)
               MOVE WS-ID3 TO LS-TAB3-ID3(LS-S)
           END-IF.

       1000-REMPLIRTAB3-FIN.
           EXIT.

      *===============================================================*
      *===============================================================*
      *    STRUCTURATION DE LA PARTIE INDEPENDANTE DU PROGRAMME       *
      *---------------------------------------------------------------*
      *                                                               *
      *   6XXX-  : ORDRES DE MANIPULATION DES FICHIERS                *
      *   7XXX-  : TRANSFERTS ET CALCULS COMPLEXES                    *
      *   8XXX-  : ORDRES DE MANIPULATION DES EDITIONS                *
      *   9XXX-  : PROTECTION FIN DE PROGRAMME                        *
      *   9999-  : PROTECTION FIN DE PROGRAMME                        *
      *                                                               *
      *===============================================================*
      *===============================================================*

      *---------------------------------------------------------------*
      *   6XXX-  : ORDRES DE MANIPULATION DES FICHIERS                *
      *---------------------------------------------------------------*
      *                                                               *
      *6000-ORDRE-FICHIER-DEB.
      *
      *6000-ORDRE-FICHIER-FIN.
      *     EXIT.
      *
      *---------------------------------------------------------------*
      *   7XXX-  : TRANSFERTS ET CALCULS COMPLEXES                    *
      *---------------------------------------------------------------*
      *
      *7000-ORDRE-CALCUL-DEB.
      *
      *7000-ORDRE-CALCUL-FIN.
      *     EXIT.
      *
      *---------------------------------------------------------------*
      *   8XXX-  : ORDRES DE MANIPULATION DES EDITIONS                *
      *---------------------------------------------------------------*

      *---------------------------------------------------------------*
      *   9XXX-  : ORDRES DE MANIPULATION DES SOUS-PROGRAMMES         *
      *---------------------------------------------------------------*
      *
      *9000-APPEL-SP-DEB.
      *
      *9000-APPEL-SP-FIN.
      *     EXIT.
      *
      *---------------------------------------------------------------*
      *   9999-  : PROTECTION FIN DE PROGRAMME                        *
      *---------------------------------------------------------------*

       9999-RETOUR-APPELANT-DEB.

            EXIT PROGRAM.

       9999-RETOUR-APPELANT-FIN.
            EXIT.

      *===============================================================*
      *--                INFORMATIONS GENERALES                     --*
      *---------------------------------------------------------------*
      *  NOM DU PROGRAMME : HNSC5M1                                   *
      *  NOM DU REDACTEUR :                                           *
      *  SOCIETE          :                                           *
      *  DATE DE CREATION :                                           *
      *---------------------------------------------------------------*
      *--               OBJECTIFS GENERAUX DU PROGRAMME             --*
      *---------------------------------------------------------------*
      * PERMETTRA DANS CICS DE :                                      *
      *  - TESTER LES DIFFERENTES ENTREES POSSIBLES DE L'UTILISATEUR  *
      *  - AFFICHER DES MESSAGES POUR LES ANOMALIES                   *
      *  - LANCER LE SOUS-PROGRAMME CORRESPOND QUAND 0 ANOMALIE       *
      *---------------------------------------------------------------*
      *--               HISTORIQUE DES MODIFICATIONS                --*
      *---------------------------------------------------------------*
      *---------------------------------------------------------------*
      * 03/09/201     ยง HNSCCDA => HNSC5M2                            *
      *===============================================================*

       IDENTIFICATION DIVISION.
       PROGRAM-ID.      HNSC5M1.

      *===============================================================*
      *           NE PAS MODIFIER LA PARTIE ENCADREE DU CODE          *
      *===============================================================*
       ENVIRONMENT DIVISION.
       CONFIGURATION SECTION.
       SPECIAL-NAMES.
      * VIDE
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.
      * VIDE
       DATA DIVISION.
       FILE SECTION.
      * VIDE
      *===============================================================*

      *========================
       WORKING-STORAGE SECTION.
      *========================

      *===============================================================*
      *             COPY - INSERTION DE SEQUENCES DE SOURCE           *
      *===============================================================*
      * TEST DES TOUCHES FONCTION
           COPY DFHAID.
      * MODIFICATION DYNAMIQUE DES ATTRIBUTS DE MAP
           COPY DFHBMSCA.
      * TABLE DES MESSAGES
           COPY TABMSG.
      * MAPSET DU PROGRAMME
           COPY HNSNMEN.
      * DESCRIPTION DES ENREGISTREMENTS DU CLUSTER KSDS ARTICLE
      *    COPY ARTICLE.
      * DESCRIPTION DES ENREGISTREMENTS DU CLUSTER RRDS FOURNISSEUR
      *    COPY FOURNIS.

      *===============================================================*
      *              ZONES DE TRAVAIL DU PROGRAMME                    *
      *===============================================================*
       01  WS-COMMAREA.
           05  WS-AIG                        PIC 9.
                88  LOOP-MENU                VALUE 0.
                88  LOOP-SPG                 VALUE 1 THRU 6.
           05  WS-TAFF                       PIC X.
                88  INIT-TRT                 VALUE LOW-VALUE.
                88  AFF-MAP                  VALUE 'M'.
                88  AFF-AIDE                 VALUE 'A'.
                88  CONFIRMATION             VALUE 'C'.
           05  WS-CSEQ                       PIC X.
           05  WS-COMMA                      PIC X(93).
      * ZONE MODIFIABLE SELON LES BESOINS (TAILLE MAX. = 4094 OCTETS)
           05  FILLER                        PIC X(4000).

      * CODE RETOUR
       01  WS-RC                             PIC S9(4) COMP.

      * DATE DU JOUR
       01  WS-ABSTIME                        PIC S9(15) COMP-3.

      * NOM DU PROGRAMME POUR APPEL DYNAMIQUE
       01  WS-NOMPROG                        PIC X(8).

      * VARIABLE QUI PERMETTRA DE REALISER UN EVALUATE AFIN DE LANCER
      * LE BON SOUS-PROGRAMME
       01  WS-TESTEVALUATE                   PIC X.

      * VARIABLE QUI SERVIRA A MODIFIER LE FORMAT DE LA TACHE
       01  WS-TACHE                          PIC 9(4).

      *                  ==============================               *
      *=================<    PROCEDURE      DIVISION   >==============*
      *                  ==============================               *

       LINKAGE SECTION.
       01  DFHCOMMAREA                       PIC X(4096).

       PROCEDURE DIVISION.

      *===============================================================*
      *    STRUCTURATION DE LA PARTIE ALGORITHMIQUE DU PROGRAMME      *
      *---------------------------------------------------------------*
      *    1 : LES COMPOSANTS DU DIAGRAMME SONT CODES A L'AIDE DE     *
      *        DEUX PARAGRAPHES  XXXX-COMPOSANT-DEB                   *
      *                          XXYY-COMPOSANR-FIN                   *
      *    2 : XX REPRESENTE LE NIVEAU HIERARCHIQUE                   *
      *        YY DIFFERENCIE LES COMPOSANTS DE MEME NIVEAU           *
      *    3 : TOUT COMPOSANT EST PRECEDE D'UN CARTOUCHE DE           *
      *        COMMENTAIRE QUI EXPLICITE LE ROLE DU COMPOSANT         *
      *===============================================================*


      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT PROGRAMME              *
      *---------------------------------------------------------------*
      *SI PREMIERE BOUCLE = LANCE LE COMPOSANT                        *
      *SINON LANCE LE COMPOSANT TEST-POOL                             *
      *                                                               *
      *EN FIN DE PROG = REDONNE L'ACCES A L'UTILISATEUR               *
      *---------------------------------------------------------------*

       0000-PROGRAMME-DEB.
           EXIT.

       0000-PROGRAMME-COR.

           IF EIBCALEN = 0
      *SI ON EST A LA PREMIERE BOUCLE DU PROGRAMME
           THEN
               PERFORM 1000-INIT-TRT-DEB
                  THRU 1000-INIT-TRT-FIN
           ELSE
               PERFORM 1010-TEST-POOL-DEB
                  THRU 1010-TEST-POOL-FIN
           END-IF.

       0000-PROGRAMME-FIN.

           PERFORM 9999-FIN-RTRANSID-DEB
              THRU 9999-FIN-RTRANSID-FIN.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT INIT-TRT               *
      *---------------------------------------------------------------*
      *INITIALISE LES CHAMPS DATE,TERMINAL,TACHE ET TRANSID ET AFFICHE*
      *LA MAP                                                         *
      *---------------------------------------------------------------*

       1000-INIT-TRT-DEB.

      *REMISE A ZERO BINAIRE DE LA MAP LOGIQUE
           MOVE LOW-VALUE TO HNSMMENO.

           MOVE WS-MSGPROJ(3) TO MMSGO.

      *ON INITIALISE LES CHAMPS ET ON AFFICHE LA MAP
           PERFORM 9000-INIT-AFF-MAP-DEB
              THRU 9000-INIT-AFF-MAP-FIN.

       1000-INIT-TRT-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT TEST-POOL              *
      *---------------------------------------------------------------*
      *VERIFIE SI UN SOUS-PROGRAMME EST ACTUELLEMENT EN COURS OU NON  *
      *---------------------------------------------------------------*

       1010-TEST-POOL-DEB.

      *ON RECUPERE LE COMMAREA
           MOVE DFHCOMMAREA TO WS-COMMAREA.

       1010-TEST-POOL-COR.

           IF LOOP-SPG
           THEN
               PERFORM 2000-LOOP-DEB
                  THRU 2000-LOOP-FIN
           ELSE
               PERFORM 2010-TEST-PF-DEB
                  THRU 2010-TEST-PF-FIN
           END-IF.

       1010-TEST-POOL-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT LOOP                   *
      *---------------------------------------------------------------*
      *IDENTIFIE LE SOUS-PROGRAMME ACTUELLEMENT EN COURS              *
      *---------------------------------------------------------------*

       2000-LOOP-DEB.
           EXIT.

       2000-LOOP-COR.

           IF EIBAID=DFHPF3 AND AFF-MAP
           THEN
               IF WS-CSEQ = 1
               THEN
                   MOVE 0 TO WS-CSEQ
                   PERFORM 5010-LANCER2-DEB
                      THRU 5010-LANCER2-FIN
               ELSE
               PERFORM 1000-INIT-TRT-DEB
                  THRU 1000-INIT-TRT-FIN
               END-IF
           ELSE
               MOVE WS-AIG TO WS-TESTEVALUATE
               PERFORM 9010-TESTEVALUATE-DEB
                  THRU 9010-TESTEVALUATE-FIN
           END-IF.

       2000-LOOP-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT TEST-PF                *
      *---------------------------------------------------------------*
      * RECUPERE LE CONTENU DE LA MAP LOGIQUE ET LANCE LE PROCHAIN    *
      * COMPOSANT SELON CE QUE VIENT DE FAIRE L'UTILISATEUR           *
      *---------------------------------------------------------------*

       2010-TEST-PF-DEB.

      *ON RECUPERE LE CONTENU DE LA MAP LOGIQUE
           PERFORM 6020-LIRE-MAP-DEB
              THRU 6020-LIRE-MAP-FIN.

       2010-TEST-PF-COR.

      *ON REGARDE L'ACTION QUE VIENT D'EFFECTUER L'UTILISATEUR
           EVALUATE EIBAID
           WHEN DFHENTER
      *L'UTILISATEUR A APPUYE SUR ENTER
                         PERFORM 3000-TRT-MAP-DEB
                            THRU 3000-TRT-MAP-FIN
           WHEN DFHPF3
      *L'UTILISATEUR A APPUYE SUR F3
                         PERFORM 9999-FIN-PROGRAMME-DEB
                            THRU 9999-FIN-PROGRAMME-FIN
           WHEN DFHCLEAR
      *L'UTILISATEUR A APPUYE SUR FIN
                         PERFORM 3010-TRT-CLEAR-DEB
                            THRU 3010-TRT-CLEAR-FIN
           WHEN OTHER
      *L'UTILISATEUR A APPUYER SUR UNE TOUCHE FONCTION AUTRE QUE F3
                         PERFORM 3020-TRT-PFERROR-DEB
                            THRU 3020-TRT-PFERROR-FIN
           END-EVALUATE.

       2010-TEST-PF-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT TRT-MAP                *
      *---------------------------------------------------------------*
      * LANCE LE PROCHAIN COMPOSANT SELON QUE L'UTILISATEUR AIT       *
      * RENSEIGNE UNE VALEUR OU NON                                   *
      *---------------------------------------------------------------*

       3000-TRT-MAP-DEB.
           EXIT.

       3000-TRT-MAP-COR.

           IF WS-RC = DFHRESP(MAPFAIL)
      *SI L'UTILISATEUR N'A RENSEIGNE AUCUNE VALEUR
           THEN
               PERFORM 4000-AUCUNEVAL-DEB
                  THRU 4000-AUCUNEVAL-FIN
           ELSE
               PERFORM 4010-CHOIXRENSEIGN-DEB
                  THRU 4010-CHOIXRENSEIGN-FIN
           END-IF.

       3000-TRT-MAP-FIN.
           EXIT.
      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT TRT-CLEAR              *
      *---------------------------------------------------------------*
      * TRAITEMENT DE L'ANOMALIE APRES BOUTON CLEAR                   *
      * INDIQUE MESSAGE D'ANOMALIE ET RELANCE LA MAP                  *
      *---------------------------------------------------------------*

       3010-TRT-CLEAR-DEB.

      *ON RENSEIGNE LE MESSAGE D'ERREUR
           MOVE WS-MSG(2) TO MMSGO.

      *ON INITIALISE LES CHAMPS ET ON AFFICHE LA MAP
           PERFORM 9000-INIT-AFF-MAP-DEB
              THRU 9000-INIT-AFF-MAP-FIN.

       3010-TRT-CLEAR-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT TRT-PFERROR            *
      *---------------------------------------------------------------*
      * TRAITEMENT SI L'UTILISATEUR A APPUYER SUR UNE TOUCHE FONCTION *
      * INEXISTANTE                                                   *
      * INDIQUE A L'UTILISATEUR UN MESSAGE D'ANOMALIE                 *
      *---------------------------------------------------------------*

       3020-TRT-PFERROR-DEB.

      *ON RENSEIGNE LE MESSAGE D'ERREUR
           MOVE WS-MSG(1) TO MMSGO.

      *ON PLACE LE CURSEUR AU BON ENDROIT
           MOVE -1 TO MCHOIXL.

           PERFORM 6010-AFF-MAPERR-DEB
              THRU 6010-AFF-MAPERR-FIN.

       3020-TRT-PFERROR-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT AUCUNEVAL              *
      *---------------------------------------------------------------*
      * TRAITEMENT SI L'UTILISATEUR NE RENSEIGNE AUCUNE VALEUR        *
      * INDIQUE UN MESSAGE A L'UTILISATEUR
      *---------------------------------------------------------------*

       4000-AUCUNEVAL-DEB.

      *ON RENSEIGNE LE MESSAGE D'ERREUR
           MOVE WS-MSG(24) TO MMSGO.

      *ON PLACE LE CURSEUR AU BON ENDROIT
           MOVE -1 TO MCHOIXL.

           PERFORM 6010-AFF-MAPERR-DEB
              THRU 6010-AFF-MAPERR-FIN.

       4000-AUCUNEVAL-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT CHOIXRENSEIGN          *
      *---------------------------------------------------------------*
      * LANCE LE COMPOSANT SUIVANT SELON LE CHOIX DE L'UTILISATEUR    *
      *---------------------------------------------------------------*

       4010-CHOIXRENSEIGN-DEB.
           EXIT.

       4010-CHOIXRENSEIGN-COR.

           MOVE MCHOIXI TO WS-TESTEVALUATE.
           PERFORM 9010-TESTEVALUATE-DEB
              THRU 9010-TESTEVALUATE-FIN.

       4010-CHOIXRENSEIGN-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT LANCER1                *
      *---------------------------------------------------------------*
      * LANCE LE SOUS-PROGRAMME HNSC5M2                               *
      *---------------------------------------------------------------*

       5000-LANCER1-DEB.

           MOVE 'HNSC5M2' TO WS-NOMPROG.

           PERFORM 6030-LANCERPROG-DEB
              THRU 6030-LANCERPROG-FIN.

       5000-LANCER1-FIN.
               EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT LANCER2                *
      *---------------------------------------------------------------*
      * LANCE LE SOUS-PROGRAMME HNSCCSA                               *
      *---------------------------------------------------------------*

       5010-LANCER2-DEB.

           MOVE 'HNSC5M5' TO WS-NOMPROG.

           PERFORM 6030-LANCERPROG-DEB
              THRU 6030-LANCERPROG-FIN.

       5010-LANCER2-FIN.
               EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT LANCER3                *
      *---------------------------------------------------------------*
      * LANCE LE SOUS-PROGRAMME HNSC5M4                               *
      *---------------------------------------------------------------*

       5020-LANCER3-DEB.

           MOVE 'HNSC5M4' TO WS-NOMPROG.

           PERFORM 6030-LANCERPROG-DEB
              THRU 6030-LANCERPROG-FIN.

       5020-LANCER3-FIN.
               EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT LANCER4                *
      *---------------------------------------------------------------*
      * LANCE LE SOUS-PROGRAMME HNSCCRE                               *
      *---------------------------------------------------------------*

       5030-LANCER4-DEB.

           MOVE 'HNSC5M6' TO WS-NOMPROG.

           PERFORM 6030-LANCERPROG-DEB
              THRU 6030-LANCERPROG-FIN.

       5030-LANCER4-FIN.
               EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT LANCER5                *
      *---------------------------------------------------------------*
      * LANCE LE SOUS-PROGRAMME HNSCMAJ                               *
      *---------------------------------------------------------------*

       5040-LANCER5-DEB.

           MOVE 'HNSCMAJ' TO WS-NOMPROG.

           PERFORM 6030-LANCERPROG-DEB
              THRU 6030-LANCERPROG-FIN.

       5040-LANCER5-FIN.
               EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT LANCER6                *
      *---------------------------------------------------------------*
      * LANCE LE SOUS-PROGRAMME HNSC5M7                               *
      *---------------------------------------------------------------*

       5050-LANCER6-DEB.

           MOVE 'HNSC5M7' TO WS-NOMPROG.

           PERFORM 6030-LANCERPROG-DEB
              THRU 6030-LANCERPROG-FIN.

       5050-LANCER6-FIN.
               EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT CHOIXERRONE            *
      *---------------------------------------------------------------*
      * TRAITEMENT SI L'UTILISATEUR INDIQUE UNE VALEUR ERRONNEE       *
      * INDIQUE A L'UTILISATEUR UN MESSAGE D'ANOMALIE                 *
      *---------------------------------------------------------------*

       5060-CHOIXERRONE-DEB.

      *ON RENSEIGNE LE MESSAGE D'ERREUR
           MOVE WS-MSG(25) TO MMSGO.

      *ON PLACE LE CURSEUR AU BON ENDROIT
           MOVE -1 TO MCHOIXL.

           PERFORM 6010-AFF-MAPERR-DEB
              THRU 6010-AFF-MAPERR-FIN.

       5060-CHOIXERRONE-FIN.
               EXIT.

      *===============================================================*
      *    STRUCTURATION DE LA PARTIE INDEPENDANTE DU PROGRAMME       *
      *---------------------------------------------------------------*
      *   6XXX-  : ORDRES DE MANIPULATION DES FICHIERS                *
      *   7XXX-  : TRANSFERTS ET CALCULS COMPLEXES                    *
      *   8XXX-  : ORDRES DE MANIPULATION DES EDITIONS                *
      *   9XXX-  : FIN DE PROGRAMME                                   *
      *   9999-  : FIN DE PROGRAMME                                   *
      *===============================================================*

      *---------------------------------------------------------------*
      *   6XXX-  : ORDRES DE MANIPULATION DES FICHIERS                *
      *---------------------------------------------------------------*

       6000-AFF-MAP-DEB.

      *NUMERO DE LA TACHE
           MOVE EIBTASKN TO WS-TACHE.
           MOVE WS-TACHE TO MTASKO.

           EXEC CICS SEND MAP('HNSMMEN')
                          MAPSET('HNSNMEN')
                          RESP(WS-RC)
                          CURSOR
                          ERASE
                          FRSET
           END-EXEC.

       6000-AFF-MAP-FIN.
           EXIT.

       6010-AFF-MAPERR-DEB.

      *NUMERO DE LA TACHE
           MOVE EIBTASKN TO WS-TACHE.
           MOVE WS-TACHE TO MTASKO.

           EXEC CICS SEND MAP('HNSMMEN')
                          MAPSET('HNSNMEN')
                          RESP(WS-RC)
                          CURSOR
                          DATAONLY
                          ALARM
           END-EXEC.

       6010-AFF-MAPERR-FIN.
           EXIT.

       6020-LIRE-MAP-DEB.

           EXEC CICS RECEIVE MAP('HNSMMEN')
                             MAPSET('HNSNMEN')
                             RESP(WS-RC)
           END-EXEC.

       6020-LIRE-MAP-FIN.
           EXIT.

       6030-LANCERPROG-DEB.

           EXEC CICS XCTL PROGRAM(WS-NOMPROG)
                          COMMAREA(WS-COMMAREA)
                          RESP(WS-RC)
           END-EXEC.

       6030-LANCERPROG-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *   7XXX-  : TRANSFERTS ET CALCULS COMPLEXES                    *
      *---------------------------------------------------------------*
      *
      *7000-ORDRE-CALCUL-DEB.
      *
      *7000-ORDRE-CALCUL-FIN.
      *     EXIT.
      *
      *---------------------------------------------------------------*
      *   8XXX-  : ORDRES DE MANIPULATION DES EDITIONS                *
      *---------------------------------------------------------------*
      *---------------------------------------------------------------*
      *   9XXX-  : ORDRES DE MANIPULATION DES SOUS-PROGRAMMES         *
      *---------------------------------------------------------------*
      *
       9000-INIT-AFF-MAP-DEB.

      *ON SE TROUVE DANS LE LOOP MENU
           MOVE ZERO TO WS-AIG.

           MOVE LOW-VALUE TO WS-COMMA.

      *DEFINITION DE LA POSITION DU COMPTEUR
           MOVE -1 TO MCHOIXL.

      ****INITIALISATION DES CHAMPS LOGIQUES****
      *DATE DU JOUR
           EXEC CICS ASKTIME
                     ABSTIME(WS-ABSTIME)
           END-EXEC.

           EXEC CICS FORMATTIME
                     ABSTIME(WS-ABSTIME)
                     DDMMYYYY(MDATEO)
                     DATESEP
           END-EXEC.

      *NUMERO DU TERMINAL
           MOVE EIBTRMID TO MTERMO.

      *CODE TRANSACTION
           MOVE EIBTRNID TO MTRANO.

      *AFFICHAGE DE LA MAP
           PERFORM 6000-AFF-MAP-DEB
              THRU 6000-AFF-MAP-FIN.
      *
       9000-INIT-AFF-MAP-FIN.
            EXIT.

       9010-TESTEVALUATE-DEB.

           EVALUATE WS-TESTEVALUATE
           WHEN '1'   PERFORM 5000-LANCER1-DEB
                         THRU 5000-LANCER1-FIN
           WHEN '2'   PERFORM 5010-LANCER2-DEB
                         THRU 5010-LANCER2-FIN
           WHEN '3'   PERFORM 5020-LANCER3-DEB
                         THRU 5020-LANCER3-FIN
           WHEN '4'   PERFORM 5030-LANCER4-DEB
                         THRU 5030-LANCER4-FIN
           WHEN '5'   PERFORM 5040-LANCER5-DEB
                         THRU 5040-LANCER5-FIN
           WHEN '6'   PERFORM 5050-LANCER6-DEB
                         THRU 5050-LANCER6-FIN
           WHEN OTHER PERFORM 5060-CHOIXERRONE-DEB
                         THRU 5060-CHOIXERRONE-FIN
           END-EVALUATE.

       9010-TESTEVALUATE-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *   9999-  : FIN DE PROGRAMME                                   *
      *---------------------------------------------------------------*

       9999-FIN-PROGRAMME-DEB.

            EXEC CICS SEND
                      FROM (WS-MSG(26))
                      ERASE
            END-EXEC.
            EXEC CICS RETURN
            END-EXEC.

       9999-FIN-PROGRAMME-FIN.
            EXIT.

       9999-FIN-RTRANSID-DEB.

            EXEC CICS RETURN
                 TRANSID(EIBTRNID)
                 COMMAREA(WS-COMMAREA)
            END-EXEC.

       9999-FIN-RTRANSID-FIN.
            EXIT.
      *===============================================================*
      *--                INFORMATIONS GENERALES                     --*
      *---------------------------------------------------------------*
      *  NOM DU PROGRAMME : HNSC5M2                                   *
      *  NOM DU REDACTEUR : REVERE ALAIN                              *
      *  SOCIETE          : GFI INFORMATIQUE                          *
      *  DATE DE CREATION : 02/09/2014                                *
      *---------------------------------------------------------------*
      *--               OBJECTIFS GENERAUX DU PROGRAMME             --*
      *---------------------------------------------------------------*
      *                                                               *
      *                                                               *
      *---------------------------------------------------------------*
      *--               HISTORIQUE DES MODIFICATIONS                --*
      *---------------------------------------------------------------*
      * DATE  MODIF   ยง          NATURE DE LA MODIFICATION            *
      *---------------------------------------------------------------*
      *               ยง                                               *
      *===============================================================*

       IDENTIFICATION DIVISION.
       PROGRAM-ID.      HNSC5M2.

      *===============================================================*
      *           NE PAS MODIFIER LA PARTIE ENCADREE DU CODE          *
      *===============================================================*
       ENVIRONMENT DIVISION.
       CONFIGURATION SECTION.
       SPECIAL-NAMES.
           DECIMAL-POINT IS COMMA.
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.
      * VIDE
       DATA DIVISION.
       FILE SECTION.
      * VIDE
      *===============================================================*

      *========================
       WORKING-STORAGE SECTION.
      *========================

      *===============================================================*
      *             COPY - INSERTION DE SEQUENCES DE SOURCE           *
      *===============================================================*
      * TEST DES TOUCHES FONCTION
           COPY DFHAID.
      * MODIFICATION DYNAMIQUE DES ATTRIBUTS DE MAP
           COPY DFHBMSCA.
      * TABLE DES MESSAGES
           COPY TABMSG.
      * MAPSET DU PROGRAMME
           COPY HNSNCDA.
      * DESCRIPTION DES ENREGISTREMENTS DU CLUSTER KSDS ARTICLE
           COPY ARTICLE.
      * DESCRIPTION DES ENREGISTREMENTS DU CLUSTER RRDS FOURNISSEUR
      *    COPY FOURNIS.

      *===============================================================*
      *              ZONES DE TRAVAIL DU PROGRAMME                    *
      *===============================================================*
       01  WS-COMMAREA.
           05  WS-AIG                        PIC 9.
                88  LOOP-MENU                VALUE 0.
                88  LOOP-SPG                 VALUE 1 THRU 6.
           05  WS-TAFF                       PIC X.
                88  INIT-TRT                 VALUE LOW-VALUE.
                88  AFF-MAP                  VALUE 'M'.
                88  AFF-AIDE                 VALUE 'A'.
                88  CONFIRMATION             VALUE 'C'.
           05  FILLER                        PIC X.
           05  WS-CODEARTICLE                PIC X(5).
      * ZONE MODIFIABLE SELON LES BESOINS (TAILLE MAX. = 4089 OCTETS)
           05  FILLER                        PIC X(4089).

      * CODE RETOUR
       01  WS-RC                             PIC S9(4) COMP.

      * DATE DU JOUR
       01  WS-ABSTIME                        PIC S9(15) COMP-3.

      * VARIABLE CHAINE CONTENANT LA DESCRIPTION D'UN LOT
       01  WS-LOT.
           05 FILLER                         PIC X(12) VALUE SPACE.
           05 WS-LOT-NUM                     PIC X(6).
           05 FILLER                         PIC X(18) VALUE SPACE.
           05 WS-LOT-QTE                     PIC ZZZZ9.
           05 FILLER                         PIC X(18) VALUE SPACE.
           05 WS-LOT-PXU                     PIC ZZZZ9,99.

      * VARIABLE QUI SERVIRA A MODIFIER LE FORMAT DE LA TACHE
       01  WS-TACHE                          PIC 9(4).

      * NOM DU PROGRAMME POUR APPEL DYNAMIQUE
      *01  WS-NOMPROG                        PIC X(8).

      *INDICE PERMETTANT DE PARCOURIR LES LOTS DE L'ARTICLE
       01  WS-ILOT                           PIC S9(4) COMP.

      *TAILLE DE L'ENREGISTREMENT READ
       01  WS-LENGTH                         PIC S9(4) COMP VALUE 139.

       LINKAGE SECTION.
       01  DFHCOMMAREA                       PIC X(4096).

      *                  ==============================               *
      *=================<    PROCEDURE      DIVISION   >==============*
      *                  ==============================               *

       PROCEDURE DIVISION.

      *===============================================================*
      *    STRUCTURATION DE LA PARTIE ALGORITHMIQUE DU PROGRAMME      *
      *---------------------------------------------------------------*
      *    1 : LES COMPOSANTS DU DIAGRAMME SONT CODES A L'AIDE DE     *
      *        DEUX PARAGRAPHES  XXXX-COMPOSANT-DEB                   *
      *                          XXYY-COMPOSANR-FIN                   *
      *    2 : XX REPRESENTE LE NIVEAU HIERARCHIQUE                   *
      *        YY DIFFERENCIE LES COMPOSANTS DE MEME NIVEAU           *
      *    3 : TOUT COMPOSANT EST PRECEDE D'UN CARTOUCHE DE           *
      *        COMMENTAIRE QUI EXPLICITE LE ROLE DU COMPOSANT         *
      *===============================================================*


      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT PROGRAMME              *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       0000-PROGRAMME-DEB.

           MOVE DFHCOMMAREA TO WS-COMMAREA.

       0000-PROGRAMME-COR.

           IF WS-AIG NOT = 1
           THEN
               PERFORM 1000-INITIALISATION-DEB
                  THRU 1000-INITIALISATION-FIN
           ELSE
               PERFORM 1010-TEST-LOOP-DEB
                  THRU 1010-TEST-LOOP-FIN
           END-IF.

       0000-PROGRAMME-FIN.

           PERFORM 9999-FIN-RTRANSID-DEB
              THRU 9999-FIN-RTRANSID-FIN.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT INITIALISATION         *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       1000-INITIALISATION-DEB.

      *REMISE A ZERO BINAIRE DE LA MAP LOGIQUE
           MOVE LOW-VALUE TO HNSMCDAO.

           IF WS-TAFF = 'Z'
           THEN
               MOVE WS-CODEARTICLE TO MCODEO MCODEI
               PERFORM 4010-CODERENSEIGNE-DEB
                  THRU 4010-CODERENSEIGNE-FIN
           ELSE
               MOVE WS-MSG(3) TO MMSGO

               MOVE LOW-VALUE TO WS-CODEARTICLE
           END-IF.

      *ON INITIALISE LES CHAMPS ET ON AFFICHE LA MAP
           PERFORM 9000-INIT-AFF-MAP-DEB
              THRU 9000-INIT-AFF-MAP-FIN.

       1000-INITIALISATION-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT TEST-LOOP              *
      *---------------------------------------------------------------*

       1010-TEST-LOOP-DEB.
           EXIT.

       1010-TEST-LOOP-COR.

           IF AFF-AIDE
           THEN PERFORM 2000-LOOP-AIDE-DEB
                   THRU 2000-LOOP-AIDE-FIN
           ELSE PERFORM 2010-ETUDEACTION-DEB
                   THRU 2010-ETUDEACTION-FIN
           END-IF.

       1010-TEST-LOOP-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT ETUDEACTION            *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       2000-LOOP-AIDE-DEB.

           IF WS-CODEARTICLE NOT = LOW-VALUE
           THEN
               MOVE WS-CODEARTICLE TO MCODEO MCODEI
               PERFORM 4010-CODERENSEIGNE-DEB
                  THRU 4010-CODERENSEIGNE-FIN
           ELSE
               MOVE WS-MSG(3) TO MMSGO
           END-IF.

      *ON AFFICHE LA MAP
           PERFORM 9000-INIT-AFF-MAP-DEB
              THRU 9000-INIT-AFF-MAP-FIN.

       2000-LOOP-AIDE-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT ETUDEACTION            *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       2010-ETUDEACTION-DEB.

      *ON RECUPERE LE CONTENU DE LA MAP LOGIQUE
           PERFORM 6020-LIRE-MAP-DEB
              THRU 6020-LIRE-MAP-FIN.

       2010-ETUDEACTION-COR.

      *ON REGARDE L'ACTION QUE VIENT D'EFFECTUER L'UTILISATEUR
           EVALUATE EIBAID
           WHEN DFHENTER PERFORM 3000-TRAITEMENT-DEB
                            THRU 3000-TRAITEMENT-FIN
      *    WHEN DFHPF3   PERFORM 3010-FINSPROG-DEB
      *                     THRU 3010-FINSPROG-FIN
           WHEN DFHPF1   PERFORM 3020-AIDE-DEB
                            THRU 3020-AIDE-FIN
           WHEN DFHCLEAR PERFORM 3030-TRT-CLEAR-DEB
                            THRU 3030-TRT-CLEAR-FIN
           WHEN OTHER    PERFORM 3040-TRT-PFERROR-DEB
                            THRU 3040-TRT-PFERROR-FIN
           END-EVALUATE.

       2010-ETUDEACTION-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT TRAITEMENT             *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       3000-TRAITEMENT-DEB.

      *ON SAUVEGARDE LE CODE ARTICLE DANS LA COMMAREA POUR POUVOIR LE
      *RECUPERER AU RETOUR APRES UNE AIDE
           MOVE MCODEI TO WS-CODEARTICLE.

       3000-TRAITEMENT-COR.

           IF WS-CODEARTICLE = LOW-VALUE
           THEN
               PERFORM 4000-AUCUNEVALEUR-DEB
                  THRU 4000-AUCUNEVALEUR-FIN
           ELSE
               PERFORM 4010-CODERENSEIGNE-DEB
                  THRU 4010-CODERENSEIGNE-FIN
           END-IF.

       3000-TRAITEMENT-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT FINSPROG               *
      *---------------------------------------------------------------*
      * PASSE DANS LE HNSC5M1 DESORMAIS                               *
      *---------------------------------------------------------------*

      *3010-FINSPROG-DEB.
      *
      *    MOVE 'HNSC5M1' TO WS-NOMPROG.
      *
      *ON SUPPRIME LE CODE CLIENT DANS LA COMMAREA AU CAS OU IL EXISTE
      *    MOVE LOW-VALUE TO WS-CODEARTICLE.
      *
      *    PERFORM 6200-LANCERMENU-DEB
      *       THRU 6200-LANCERMENU-FIN.
      *
      *3010-FINSPROG-FIN.
      *    EXIT.
      *
      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT AIDE                   *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       3020-AIDE-DEB.

           MOVE 'A' TO WS-TAFF.

           PERFORM 6100-AFF-AID-DEB
              THRU 6100-AFF-AID-FIN.

       3020-AIDE-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT TRT-CLEAR              *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       3030-TRT-CLEAR-DEB.

           IF WS-CODEARTICLE NOT = LOW-VALUE
           THEN
               MOVE WS-CODEARTICLE TO MCODEO MCODEI
               PERFORM 4010-CODERENSEIGNE-DEB
                  THRU 4010-CODERENSEIGNE-FIN
           END-IF.

           MOVE WS-MSG(2) TO MMSGO.

      *ON INITIALISE LES CHAMPS ET ON AFFICHE LA MAP
           PERFORM 9000-INIT-AFF-MAP-DEB
              THRU 9000-INIT-AFF-MAP-FIN.

       3030-TRT-CLEAR-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT TRT-PFERROR            *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       3040-TRT-PFERROR-DEB.

      *ON RENSEIGNE LE MESSAGE D'ERREUR
           MOVE WS-MSG(1) TO MMSGO.

      *ON PLACE LE CURSEUR AU BON ENDROIT
           MOVE -1 TO MCODEL.

           PERFORM 6010-AFF-MAPERR-DEB
              THRU 6010-AFF-MAPERR-FIN.

       3040-TRT-PFERROR-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT AUCUNEVALEUR           *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       4000-AUCUNEVALEUR-DEB.

      *ON RENSEIGNE LE MESSAGE D'ERREUR
           MOVE WS-MSG(6) TO MMSGO.

      *ON PLACE LE CURSEUR AU BON ENDROIT
           MOVE -1 TO MCODEL.

      *ON EFFACE LES DONNES DE L'ARTICLE PRECEDENT
           PERFORM 9030-EFFACERDONNEES-DEB
              THRU 9030-EFFACERDONNEES-FIN.

           PERFORM 6010-AFF-MAPERR-DEB
              THRU 6010-AFF-MAPERR-FIN.

       4000-AUCUNEVALEUR-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT CODERENSEIGNE          *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       4010-CODERENSEIGNE-DEB.

           EXEC CICS READ FILE('ART0513')
                          RIDFLD(WS-CODEARTICLE)
                          INTO(WS-ART-ENR)
                          LENGTH(WS-LENGTH)
                          RESP(WS-RC)
           END-EXEC.

       4010-CODERENSEIGNE-COR.

           IF WS-RC NOT = DFHRESP(NOTFND)
           THEN
               PERFORM 5000-CODETROUVE-DEB
                  THRU 5000-CODETROUVE-FIN
           ELSE
               PERFORM 5010-CODEINEXISTANT-DEB
                  THRU 5010-CODEINEXISTANT-FIN
           END-IF.

       4010-CODERENSEIGNE-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT CODETROUVE             *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       5000-CODETROUVE-DEB.

           PERFORM 9010-INIT-DONNEESART-DEB
              THRU 9010-INIT-DONNEESART-FIN.

           MOVE SPACE TO MLOTO(1) MLOTO(2) MLOTO(3) MLOTO(4) MLOTO(5).

       5000-CODETROUVE-COR.

           PERFORM 5100-AFFICH-LOT-DEB
              THRU 5100-AFFICH-LOT-FIN
            VARYING WS-ILOT FROM 1 BY 1
             UNTIL WS-ILOT > WS-ART-NB-LOT.

       5000-CODETROUVE-FIN.

           MOVE -1 TO MCODEL.

           MOVE SPACE TO MMSGO.

           PERFORM 6030-AFF-MAPSERR-DEB
              THRU 6030-AFF-MAPSERR-FIN.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT CODEINEXISTANT         *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       5010-CODEINEXISTANT-DEB.

      *ON RENSEIGNE LE MESSAGE D'ERREUR
           MOVE WS-MSG(27) TO MMSGO.

      *ON PLACE LE CURSEUR AU BON ENDROIT
           MOVE -1 TO MCODEL.

           PERFORM 6010-AFF-MAPERR-DEB
              THRU 6010-AFF-MAPERR-FIN.

       5010-CODEINEXISTANT-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT AFFICH-LOT             *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       5100-AFFICH-LOT-DEB.

           PERFORM 9020-INIT-DONNEESLOT-DEB
              THRU 9020-INIT-DONNEESLOT-FIN.

           MOVE WS-LOT TO MLOTO(WS-ILOT).

       5100-AFFICH-LOT-FIN.
           EXIT.

      *===============================================================*
      *    STRUCTURATION DE LA PARTIE INDEPENDANTE DU PROGRAMME       *
      *---------------------------------------------------------------*
      *   6XXX-  : ORDRES DE MANIPULATION DES FICHIERS                *
      *   7XXX-  : TRANSFERTS ET CALCULS COMPLEXES                    *
      *   8XXX-  : ORDRES DE MANIPULATION DES EDITIONS                *
      *   9XXX-  : FIN DE PROGRAMME                                   *
      *   9999-  : FIN DE PROGRAMME                                   *
      *===============================================================*

      *---------------------------------------------------------------*
      *   6XXX-  : ORDRES DE MANIPULATION DES FICHIERS                *
      *---------------------------------------------------------------*

       6000-AFF-MAP-DEB.

      *NUMERO DE LA TACHE
           MOVE EIBTASKN TO WS-TACHE.
           MOVE WS-TACHE TO MTASKO.

           EXEC CICS SEND MAP('HNSMCDA')
                          MAPSET('HNSNCDA')
                          RESP(WS-RC)
                          CURSOR
                          ERASE
                          FRSET
           END-EXEC.

       6000-AFF-MAP-FIN.
           EXIT.

       6010-AFF-MAPERR-DEB.

      *NUMERO DE LA TACHE
           MOVE EIBTASKN TO WS-TACHE.
           MOVE WS-TACHE TO MTASKO.

           EXEC CICS SEND MAP('HNSMCDA')
                          MAPSET('HNSNCDA')
                          RESP(WS-RC)
                          CURSOR
                          DATAONLY
                          ALARM
           END-EXEC.

       6010-AFF-MAPERR-FIN.
           EXIT.

       6020-LIRE-MAP-DEB.

           EXEC CICS RECEIVE MAP('HNSMCDA')
                             MAPSET('HNSNCDA')
                             RESP(WS-RC)
           END-EXEC.

       6020-LIRE-MAP-FIN.
           EXIT.

       6030-AFF-MAPSERR-DEB.

      *NUMERO DE LA TACHE
           MOVE EIBTASKN TO WS-TACHE.
           MOVE WS-TACHE TO MTASKO.

           EXEC CICS SEND MAP('HNSMCDA')
                          MAPSET('HNSNCDA')
                          RESP(WS-RC)
                          CURSOR
                          DATAONLY
           END-EXEC.

       6030-AFF-MAPSERR-FIN.
           EXIT.

       6100-AFF-AID-DEB.

           EXEC CICS SEND MAP('HNSMHP2')
                          MAPSET('HNSNCDA')
                          RESP(WS-RC)
                          CURSOR
                          ERASE
                          FRSET
           END-EXEC.
       6100-AFF-AID-FIN.
           EXIT.

      *6200-LANCERMENU-DEB.
      *
      *    EXEC CICS XCTL PROGRAM(WS-NOMPROG)
      *                   RESP(WS-RC)
      *    END-EXEC.
      *
      *6200-LANCERMENU-FIN.
      *    EXIT.

      *---------------------------------------------------------------*
      *   7XXX-  : TRANSFERTS ET CALCULS COMPLEXES                    *
      *---------------------------------------------------------------*
      *
      *7000-ORDRE-CALCUL-DEB.
      *
      *7000-ORDRE-CALCUL-FIN.
      *     EXIT.
      *
      *---------------------------------------------------------------*
      *   8XXX-  : ORDRES DE MANIPULATION DES EDITIONS                *
      *---------------------------------------------------------------*
      *---------------------------------------------------------------*
      *   9XXX-  : ORDRES DE MANIPULATION DES SOUS-PROGRAMMES         *
      *---------------------------------------------------------------*

       9000-INIT-AFF-MAP-DEB.

      *ON SE TROUVE DANS LE SOUS-PROGRAMME 1
           MOVE 1 TO WS-AIG.

      *DEFINITION DE LA POSITION DU COMPTEUR
           MOVE -1 TO MCODEL.

           MOVE 'M' TO WS-TAFF.

      ****INITIALISATION DES CHAMPS LOGIQUES****
      *DATE DU JOUR
           EXEC CICS ASKTIME
                     ABSTIME(WS-ABSTIME)
           END-EXEC.

           EXEC CICS FORMATTIME
                     ABSTIME(WS-ABSTIME)
                     DDMMYYYY(MDATEO)
                     DATESEP
           END-EXEC.

      *NUMERO DU TERMINAL
           MOVE EIBTRMID TO MTERMO.

      *CODE TRANSACTION
           MOVE EIBTRNID TO MTRANO.

      *AFFICHAGE DE LA MAP
           PERFORM 6000-AFF-MAP-DEB
              THRU 6000-AFF-MAP-FIN.

       9000-INIT-AFF-MAP-FIN.
           EXIT.

       9010-INIT-DONNEESART-DEB.

           MOVE WS-ART-LIBEL  TO MLIBELO.
           MOVE WS-ART-CATEG  TO MCATEGO.
           MOVE WS-ART-FOU    TO MFOURO.
           MOVE WS-ART-DELAI  TO MAPPROO.
           MOVE WS-ART-QTE    TO MQTSTKO.
           MOVE WS-ART-ALERT  TO MQTALEO.
           MOVE WS-ART-NB-LOT TO MNLOTO.

           MOVE SPACE TO MLOTO(1) MLOTO(2) MLOTO(3) MLOTO(4) MLOTO(5).

       9010-INIT-DONNEESART-FIN.
           EXIT.

       9020-INIT-DONNEESLOT-DEB.

           MOVE WS-ART-LOT-NUM(WS-ILOT) TO WS-LOT-NUM.
           MOVE WS-ART-LOT-QTE(WS-ILOT) TO WS-LOT-QTE.
           MOVE WS-ART-LOT-PXU(WS-ILOT) TO WS-LOT-PXU.

       9020-INIT-DONNEESLOT-FIN.
           EXIT.

       9030-EFFACERDONNEES-DEB.

           MOVE SPACE TO MLIBELO.
           MOVE SPACE TO MCATEGO.
           MOVE SPACE TO MFOURO.
           MOVE SPACE TO MAPPROO.
           MOVE ZERO  TO MQTSTKO.
           MOVE ZERO  TO MQTALEO.
           MOVE SPACE TO MNLOTO.
           MOVE SPACE TO MLOTO(1) MLOTO(2) MLOTO(3) MLOTO(4) MLOTO(5).

       9030-EFFACERDONNEES-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *   9999-  : FIN DE PROGRAMME                                   *
      *---------------------------------------------------------------*

       9999-FIN-RTRANSID-DEB.

            EXEC CICS RETURN
                 TRANSID(EIBTRNID)
                 COMMAREA(WS-COMMAREA)
            END-EXEC.

       9999-FIN-RTRANSID-FIN.
            EXIT.
      *===============================================================*
      *--                INFORMATIONS GENERALES                     --*
      *---------------------------------------------------------------*
      *  NOM DU PROGRAMME : HNSC5M4                                   *
      *  NOM DU REDACTEUR : REVERE ALAIN                              *
      *  SOCIETE          : GFI INFORMATIQUE                          *
      *  DATE DE CREATION : 05/09/2014                                *
      *---------------------------------------------------------------*
      *--               OBJECTIFS GENERAUX DU PROGRAMME             --*
      *---------------------------------------------------------------*
      *                                                               *
      *                                                               *
      *---------------------------------------------------------------*
      *--               HISTORIQUE DES MODIFICATIONS                --*
      *---------------------------------------------------------------*
      * DATE  MODIF   ยง          NATURE DE LA MODIFICATION            *
      *---------------------------------------------------------------*
      *               ยง                                               *
      *===============================================================*

       IDENTIFICATION DIVISION.
       PROGRAM-ID.      HNSC5M4.

      *===============================================================*
      *           NE PAS MODIFIER LA PARTIE ENCADREE DU CODE          *
      *===============================================================*
       ENVIRONMENT DIVISION.
       CONFIGURATION SECTION.
       SPECIAL-NAMES.
      * VIDE
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.
      * VIDE
       DATA DIVISION.
       FILE SECTION.
      * VIDE
      *===============================================================*

      *========================
       WORKING-STORAGE SECTION.
      *========================

      *===============================================================*
      *             COPY - INSERTION DE SEQUENCES DE SOURCE           *
      *===============================================================*
      * TEST DES TOUCHES FONCTION
           COPY DFHAID.
      * MODIFICATION DYNAMIQUE DES ATTRIBUTS DE MAP
           COPY DFHBMSCA.
      * TABLE DES MESSAGES
           COPY TABMSG.
      * MAPSET DU PROGRAMME
           COPY HNSNCSC.
      * DESCRIPTION DES ENREGISTREMENTS DU CLUSTER KSDS ARTICLE
           COPY ARTICLE.
      * DESCRIPTION DES ENREGISTREMENTS DU CLUSTER RRDS FOURNISSEUR
      *    COPY FOURNIS.

      *===============================================================*
      *              ZONES DE TRAVAIL DU PROGRAMME                    *
      *===============================================================*
       01  WS-COMMAREA.
           05  WS-AIG                        PIC 9.
                88  LOOP-MENU                VALUE 0.
                88  LOOP-SPG                 VALUE 1 THRU 6.
           05  WS-TAFF                       PIC X.
                88  INIT-TRT                 VALUE LOW-VALUE.
                88  AFF-MAP                  VALUE 'M'.
                88  AFF-AIDE                 VALUE 'A'.
                88  CONFIRMATION             VALUE 'C'.
           05  WS-CODECATEGORIE              PIC X(5).
           05  WS-PF7                        PIC 9.
                88  WS-PF7-AUTORISE          VALUE 1.
                88  WS-PF7-REFUSE            VALUE 0.
           05  WS-PF8                        PIC 9.
                88  WS-PF8-AUTORISE          VALUE 1.
                88  WS-PF8-REFUSE            VALUE 0.
           05  WS-POINTEUR                   PIC 99.
      * ZONE MODIFIABLE SELON LES BESOINS (TAILLE MAX. = 4087 OCTETS)
           05  FILLER                        PIC X(4087).

      * CODE RETOUR
       01  WS-RC                             PIC S9(4) COMP.

      * DATE DU JOUR
       01  WS-ABSTIME                        PIC S9(15) COMP-3.

      * VARIABLE QUI SERVIRA A MODIFIER LE FORMAT DE LA TACHE
       01  WS-TACHE                          PIC 9(4).

      *TAILLE DE L'ENREGISTREMENT READ
       01  WS-LENGTH                         PIC S9(4) COMP VALUE 139.

      *VARIABLE CHAINE CONTENANT LA DESCRIPTION D'UN ARTICLE
       01  WS-ARTICLE.
           05  FILLER                        PIC X(10) VALUE SPACE.
           05  WS-ART-CODEARTICLE-ED         PIC X(6).
           05  FILLER                        PIC X(8) VALUE SPACE.
           05  WS-ART-LIBARTICLE-ED          PIC X(20).
           05  FILLER                        PIC X(6) VALUE SPACE.
           05  WS-ART-QTESTK-ED              PIC ZZZZZ9.
           05  FILLER                        PIC X(14) VALUE SPACE.
           05  WS-ART-NBLOTS-ED              PIC 9.

      *INDICE PERMETTANT DE PARCOURIR LES ARTICLES DE LA CATEGORIE
       01  WS-IART                           PIC S9(4) COMP.

      *PERMET DE SE RENDRE AU POINTEUR
       01  WS-GOPOINTEUR                     PIC S9(4) COMP.

       LINKAGE SECTION.
       01  DFHCOMMAREA                       PIC X(4096).

      *                  ==============================               *
      *=================<    PROCEDURE      DIVISION   >==============*
      *                  ==============================               *

       PROCEDURE DIVISION.

      *===============================================================*
      *    STRUCTURATION DE LA PARTIE ALGORITHMIQUE DU PROGRAMME      *
      *---------------------------------------------------------------*
      *    1 : LES COMPOSANTS DU DIAGRAMME SONT CODES A L'AIDE DE     *
      *        DEUX PARAGRAPHES  XXXX-COMPOSANT-DEB                   *
      *                          XXYY-COMPOSANR-FIN                   *
      *    2 : XX REPRESENTE LE NIVEAU HIERARCHIQUE                   *
      *        YY DIFFERENCIE LES COMPOSANTS DE MEME NIVEAU           *
      *    3 : TOUT COMPOSANT EST PRECEDE D'UN CARTOUCHE DE           *
      *        COMMENTAIRE QUI EXPLICITE LE ROLE DU COMPOSANT         *
      *===============================================================*


      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT PROGRAMME              *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       0000-PROGRAMME-DEB.

           MOVE DFHCOMMAREA TO WS-COMMAREA.

       0000-PROGRAMME-COR.
           IF WS-AIG NOT = 3
           THEN
               PERFORM 1000-INITIALISATION-DEB
                  THRU 1000-INITIALISATION-FIN
           ELSE
               PERFORM 1010-TEST-LOOP-DEB
                  THRU 1010-TEST-LOOP-FIN
           END-IF.

       0000-PROGRAMME-FIN.

           PERFORM 9999-FIN-RTRANSID-DEB
              THRU 9999-FIN-RTRANSID-FIN.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT INITIALISATION         *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       1000-INITIALISATION-DEB.

      *REMISE A ZERO BINAIRE DE LA MAP LOGIQUE
           MOVE LOW-VALUE TO HNSMCSCO.

           MOVE WS-MSG(43) TO MMSGO.

           MOVE LOW-VALUE TO WS-CODECATEGORIE.

      *ON METS EN DARK MPF7 ET MPF8
           MOVE DFHPROTN TO MPF7A MPF8A.

      *ON INITIALISE LES CHAMPS ET ON AFFICHE LA MAP
           PERFORM 9000-INIT-AFF-MAP-DEB
              THRU 9000-INIT-AFF-MAP-FIN.

       1000-INITIALISATION-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT TEST-LOOP              *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       1010-TEST-LOOP-DEB.
           EXIT.

       1010-TEST-LOOP-COR.

           IF AFF-AIDE
           THEN PERFORM 2000-LOOP-AIDE-DEB
                   THRU 2000-LOOP-AIDE-FIN
           ELSE PERFORM 2010-ETUDEACTION-DEB
                   THRU 2010-ETUDEACTION-FIN
           END-IF.

       1010-TEST-LOOP-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT LOOP-AIDE              *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       2000-LOOP-AIDE-DEB.

           IF WS-CODECATEGORIE NOT = LOW-VALUE
           THEN
               MOVE WS-CODECATEGORIE TO MCATEGO MCATEGI
               PERFORM 6200-STARTBR-ART-DEB
                  THRU 6200-STARTBR-ART-FIN
               PERFORM 5000-CODETROUVE-DEB
                  THRU 5000-CODETROUVE-FIN
           ELSE
               MOVE WS-MSG(43) TO MMSGO
           END-IF.

      *ON AFFICHE LA MAP
           PERFORM 9000-INIT-AFF-MAP-DEB
              THRU 9000-INIT-AFF-MAP-FIN.

       2000-LOOP-AIDE-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT ETUDEACTION            *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       2010-ETUDEACTION-DEB.

      *ON RECUPERE LE CONTENU DE LA MAP LOGIQUE
           PERFORM 6020-LIRE-MAP-DEB
              THRU 6020-LIRE-MAP-FIN.

       2010-ETUDEACTION-COR.

      *ON REGARDE L'ACTION QUE VIENT D'EFFECTUER L'UTILISATEUR
           EVALUATE EIBAID
           WHEN DFHENTER PERFORM 3000-TRAITEMENT-DEB
                            THRU 3000-TRAITEMENT-FIN
           WHEN DFHPF1   PERFORM 3010-AIDE-DEB
                            THRU 3010-AIDE-FIN
           WHEN DFHCLEAR PERFORM 3020-TRT-CLEAR-DEB
                            THRU 3020-TRT-CLEAR-FIN
           WHEN DFHPF7   PERFORM 3040-TRT-PF7-DEB
                            THRU 3040-TRT-PF7-FIN
           WHEN DFHPF8   PERFORM 3050-TRT-PF8-DEB
                            THRU 3050-TRT-PF8-FIN
           WHEN OTHER    PERFORM 3030-TRT-PFERROR-DEB
                            THRU 3030-TRT-PFERROR-FIN
           END-EVALUATE.

       2010-ETUDEACTION-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT TRAITEMENT             *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       3000-TRAITEMENT-DEB.
           EXIT.

      *ON SAUVEGARDE LE CODE CATEGORIE DANS LA COMMAREA POUR POUVOIR LE
      *RECUPERER AU RETOUR APRES UNE AIDE OU UN CLEAR
           MOVE MCATEGI TO WS-CODECATEGORIE.

       3000-TRAITEMENT-COR.

           IF WS-CODECATEGORIE = LOW-VALUE
           THEN
               PERFORM 4000-AUCUNEVALEUR-DEB
                  THRU 4000-AUCUNEVALEUR-FIN
           ELSE
               PERFORM 4010-CODERENSEIGNE-DEB
                  THRU 4010-CODERENSEIGNE-FIN
           END-IF.

       3000-TRAITEMENT-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT AIDE                   *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       3010-AIDE-DEB.

           MOVE 'A' TO WS-TAFF.

           PERFORM 6100-AFF-AID-DEB
              THRU 6100-AFF-AID-FIN.

       3010-AIDE-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT TRT-CLEAR              *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       3020-TRT-CLEAR-DEB.

           IF WS-CODECATEGORIE NOT = LOW-VALUE
           THEN
               MOVE WS-CODECATEGORIE TO MCATEGO MCATEGI
               PERFORM 6200-STARTBR-ART-DEB
                  THRU 6200-STARTBR-ART-FIN
               PERFORM 5000-CODETROUVE-DEB
                  THRU 5000-CODETROUVE-FIN
           END-IF.

           MOVE WS-MSG(2) TO MMSGO.

      *ON INITIALISE LES CHAMPS ET ON AFFICHE LA MAP
           PERFORM 9000-INIT-AFF-MAP-DEB
              THRU 9000-INIT-AFF-MAP-FIN.

       3020-TRT-CLEAR-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT TRT-PFERROR            *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       3030-TRT-PFERROR-DEB.

      *ON RENSEIGNE LE MESSAGE D'ERREUR
           MOVE WS-MSG(1) TO MMSGO.

           PERFORM 6010-AFF-MAPERR-DEB
              THRU 6010-AFF-MAPERR-FIN.

       3030-TRT-PFERROR-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT TRT-PF7                *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       3040-TRT-PF7-DEB.

           IF WS-CODECATEGORIE = LOW-VALUE
           THEN
               MOVE WS-MSG(1) TO MMSGO
               PERFORM 6010-AFF-MAPERR-DEB
                  THRU 6010-AFF-MAPERR-FIN
           ELSE
               IF WS-PF7-REFUSE
               THEN
                   MOVE WS-MSG(37) TO MMSGO
                   PERFORM 6010-AFF-MAPERR-DEB
                      THRU 6010-AFF-MAPERR-FIN
               ELSE
                   SUBTRACT 1 FROM WS-POINTEUR
                   PERFORM 6200-STARTBR-ART-DEB
                      THRU 6200-STARTBR-ART-FIN
                   PERFORM 5000-CODETROUVE-DEB
                      THRU 5000-CODETROUVE-FIN
           END-IF.

       3040-TRT-PF7-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT TRT-PF8                *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       3050-TRT-PF8-DEB.

           IF WS-CODECATEGORIE = LOW-VALUE
           THEN
               MOVE WS-MSG(1) TO MMSGO
               PERFORM 6010-AFF-MAPERR-DEB
                  THRU 6010-AFF-MAPERR-FIN
           ELSE
               IF WS-PF8-REFUSE
               THEN
                   MOVE WS-MSG(38) TO MMSGO
                   PERFORM 6010-AFF-MAPERR-DEB
                      THRU 6010-AFF-MAPERR-FIN
               ELSE
                   ADD 1 TO WS-POINTEUR
                   PERFORM 6200-STARTBR-ART-DEB
                      THRU 6200-STARTBR-ART-FIN
                   PERFORM 5000-CODETROUVE-DEB
                      THRU 5000-CODETROUVE-FIN
           END-IF.

       3050-TRT-PF8-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT AUCUNEVALEUR           *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       4000-AUCUNEVALEUR-DEB.

      *ON RENSEIGNE LE MESSAGE D'ERREUR
           MOVE WS-MSG(34) TO MMSGO.

      *ON EFFACE LES DONNES DE LA CATEGORIE PRECEDENTE
           PERFORM 9020-EFFACERDONNEES-DEB
              THRU 9020-EFFACERDONNEES-FIN.

           PERFORM 6010-AFF-MAPERR-DEB
              THRU 6010-AFF-MAPERR-FIN.

       4000-AUCUNEVALEUR-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT CODERENSEIGNE          *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       4010-CODERENSEIGNE-DEB.

           PERFORM 6200-STARTBR-ART-DEB
              THRU 6200-STARTBR-ART-FIN.

           MOVE 0 TO WS-POINTEUR.

       4010-CODERENSEIGNE-COR.

           IF WS-RC NOT = DFHRESP(NOTFND)
           THEN
               PERFORM 5000-CODETROUVE-DEB
                  THRU 5000-CODETROUVE-FIN
           ELSE
               PERFORM 5010-CODEINEXISTANT-DEB
                  THRU 5010-CODEINEXISTANT-FIN
           END-IF.

       4010-CODERENSEIGNE-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT CODETROUVE             *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       5000-CODETROUVE-DEB.

           PERFORM 9020-EFFACERDONNEES-DEB
              THRU 9020-EFFACERDONNEES-FIN.

           COMPUTE WS-GOPOINTEUR = 5 * WS-POINTEUR.

       5000-CODETROUVE-COR.

           PERFORM 6210-READNEXT-ART-DEB
              THRU 6210-READNEXT-ART-FIN
            VARYING WS-IART FROM 1 BY 1
              UNTIL WS-IART > WS-GOPOINTEUR.

           PERFORM 9010-AFF-NEXTARTICLE-DEB
              THRU 9010-AFF-NEXTARTICLE-FIN
              TEST AFTER
            VARYING WS-IART FROM 1 BY 1
              UNTIL WS-IART = 5 OR WS-RC = DFHRESP(ENDFILE)
                                OR WS-RC = DFHRESP(NORMAL).

       5000-CODETROUVE-FIN.

           IF WS-POINTEUR = 0
           THEN
               IF WS-RC = DFHRESP(ENDFILE) OR = DFHRESP(NORMAL)
               THEN
                   MOVE WS-MSG(39) TO MMSGO
               ELSE
                   MOVE WS-MSG(32) TO MMSGO
               END-IF
               MOVE 0 TO WS-PF7
               MOVE DFHPROTN TO MPF7A
           ELSE
               MOVE 1 TO WS-PF7
               MOVE DFHPROTI TO MPF7A
           END-IF.

           IF WS-RC = DFHRESP(ENDFILE) OR = DFHRESP(NORMAL)
           THEN
               IF WS-POINTEUR > 0
               THEN
                   MOVE WS-MSG(33) TO MMSGO
               END-IF
               MOVE 0 TO WS-PF8
               MOVE DFHPROTN TO MPF8A
           ELSE
               MOVE 1 TO WS-PF8
               MOVE DFHPROTI TO MPF8A
           END-IF.

           PERFORM 6010-AFF-MAPERR-DEB
              THRU 6010-AFF-MAPERR-FIN.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT CODEINEXISTANT         *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       5010-CODEINEXISTANT-DEB.

      *ON RENSEIGNE LE MESSAGE D'ERREUR
           MOVE WS-MSG(35) TO MMSGO.

           PERFORM 6010-AFF-MAPERR-DEB
              THRU 6010-AFF-MAPERR-FIN.

       5010-CODEINEXISTANT-FIN.
           EXIT.

      *===============================================================*
      *    STRUCTURATION DE LA PARTIE INDEPENDANTE DU PROGRAMME       *
      *---------------------------------------------------------------*
      *   6XXX-  : ORDRES DE MANIPULATION DES FICHIERS                *
      *   7XXX-  : TRANSFERTS ET CALCULS COMPLEXES                    *
      *   8XXX-  : ORDRES DE MANIPULATION DES EDITIONS                *
      *   9XXX-  : FIN DE PROGRAMME                                   *
      *   9999-  : FIN DE PROGRAMME                                   *
      *===============================================================*

      *---------------------------------------------------------------*
      *   6XXX-  : ORDRES DE MANIPULATION DES FICHIERS                *
      *---------------------------------------------------------------*

       6000-AFF-MAP-DEB.

           MOVE -1 TO MCATEGL.

      *NUMERO DE LA TACHE
           MOVE EIBTASKN TO WS-TACHE.
           MOVE WS-TACHE TO MTASKO.

           EXEC CICS SEND MAP('HNSMCSC')
                          MAPSET('HNSNCSC')
                          RESP(WS-RC)
                          CURSOR
                          ERASE
                          FRSET
           END-EXEC.

       6000-AFF-MAP-FIN.
           EXIT.

       6010-AFF-MAPERR-DEB.

           MOVE -1 TO MCATEGL.

      *NUMERO DE LA TACHE
           MOVE EIBTASKN TO WS-TACHE.
           MOVE WS-TACHE TO MTASKO.

           EXEC CICS SEND MAP('HNSMCSC')
                          MAPSET('HNSNCSC')
                          RESP(WS-RC)
                          CURSOR
                          DATAONLY
                          ALARM
           END-EXEC.

       6010-AFF-MAPERR-FIN.
           EXIT.

       6020-LIRE-MAP-DEB.

           EXEC CICS RECEIVE MAP('HNSMCSC')
                             MAPSET('HNSNCSC')
                             RESP(WS-RC)
           END-EXEC.

       6020-LIRE-MAP-FIN.
           EXIT.

       6100-AFF-AID-DEB.

           EXEC CICS SEND MAP('HNSMHP4')
                          MAPSET('HNSNCSC')
                          RESP(WS-RC)
                          CURSOR
                          ERASE
                          FRSET
           END-EXEC.

       6100-AFF-AID-FIN.
           EXIT.

       6200-STARTBR-ART-DEB.

           EXEC CICS STARTBR FILE('ARTP0513')
                             RIDFLD(WS-CODECATEGORIE)
                             EQUAL
                             RESP(WS-RC)
           END-EXEC.

       6200-STARTBR-ART-FIN.
           EXIT.

       6210-READNEXT-ART-DEB.

           EXEC CICS READNEXT FILE('ARTP0513')
                              RIDFLD(WS-CODECATEGORIE)
                              INTO(WS-ART-ENR)
                              LENGTH(WS-LENGTH)
                              RESP(WS-RC)
           END-EXEC.

       6210-READNEXT-ART-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *   7XXX-  : TRANSFERTS ET CALCULS COMPLEXES                    *
      *---------------------------------------------------------------*
      *
      *7000-ORDRE-CALCUL-DEB.
      *
      *7000-ORDRE-CALCUL-FIN.
      *     EXIT.
      *
      *---------------------------------------------------------------*
      *   8XXX-  : ORDRES DE MANIPULATION DES EDITIONS                *
      *---------------------------------------------------------------*
      *---------------------------------------------------------------*
      *   9XXX-  : ORDRES DE MANIPULATION DES SOUS-PROGRAMMES         *
      *---------------------------------------------------------------*

       9000-INIT-AFF-MAP-DEB.

      *ON SE TROUVE DANS LE SOUS-PROGRAMME 1
           MOVE 3 TO WS-AIG.

           MOVE 'M' TO WS-TAFF.

      ****INITIALISATION DES CHAMPS LOGIQUES****
      *DATE DU JOUR
           EXEC CICS ASKTIME
                     ABSTIME(WS-ABSTIME)
           END-EXEC.

           EXEC CICS FORMATTIME
                     ABSTIME(WS-ABSTIME)
                     DDMMYYYY(MDATEO)
                     DATESEP
           END-EXEC.

      *NUMERO DU TERMINAL
           MOVE EIBTRMID TO MTERMO.

      *CODE TRANSACTION
           MOVE EIBTRNID TO MTRANO.

      *AFFICHAGE DE LA MAP
           PERFORM 6000-AFF-MAP-DEB
              THRU 6000-AFF-MAP-FIN.

       9000-INIT-AFF-MAP-FIN.
           EXIT.

       9010-AFF-NEXTARTICLE-DEB.

           PERFORM 6210-READNEXT-ART-DEB
              THRU 6210-READNEXT-ART-FIN.

           MOVE WS-ART-CODE   TO WS-ART-CODEARTICLE-ED.

           MOVE WS-ART-LIBEL  TO WS-ART-LIBARTICLE-ED.

           MOVE WS-ART-QTE    TO WS-ART-QTESTK-ED.

           MOVE WS-ART-NB-LOT TO WS-ART-NBLOTS-ED.

           MOVE WS-ARTICLE TO MLOTO(WS-IART).

       9010-AFF-NEXTARTICLE-FIN.
           EXIT.

       9020-EFFACERDONNEES-DEB.

           MOVE SPACE TO MLOTO(1) MLOTO(2) MLOTO(3) MLOTO(4) MLOTO(5).

       9020-EFFACERDONNEES-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *   9999-  : FIN DE PROGRAMME                                   *
      *---------------------------------------------------------------*

       9999-FIN-RTRANSID-DEB.

            EXEC CICS RETURN
                 TRANSID(EIBTRNID)
                 COMMAREA(WS-COMMAREA)
            END-EXEC.

       9999-FIN-RTRANSID-FIN.
            EXIT.
      *===============================================================*
      *--                INFORMATIONS GENERALES                     --*
      *---------------------------------------------------------------*
      *  NOM DU PROGRAMME : HNSC5M5                                   *
      *  NOM DU REDACTEUR : REVERE ALAIN                              *
      *  SOCIETE          : GFI INFORMATIQUE                          *
      *  DATE DE CREATION : 18/09/2014                                *
      *---------------------------------------------------------------*
      *--               OBJECTIFS GENERAUX DU PROGRAMME             --*
      *---------------------------------------------------------------*
      *                                                               *
      *                                                               *
      *---------------------------------------------------------------*
      *--               HISTORIQUE DES MODIFICATIONS                --*
      *---------------------------------------------------------------*
      * DATE  MODIF   ยง          NATURE DE LA MODIFICATION            *
      *---------------------------------------------------------------*
      *               ยง                                               *
      *===============================================================*

       IDENTIFICATION DIVISION.
       PROGRAM-ID.      HNSC5M5.

      *===============================================================*
      *           NE PAS MODIFIER LA PARTIE ENCADREE DU CODE          *
      *===============================================================*
       ENVIRONMENT DIVISION.
       CONFIGURATION SECTION.
       SPECIAL-NAMES.
           DECIMAL-POINT IS COMMA.
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.
      * VIDE
       DATA DIVISION.
       FILE SECTION.
      * VIDE
      *===============================================================*

      *========================
       WORKING-STORAGE SECTION.
      *========================

      *===============================================================*
      *             COPY - INSERTION DE SEQUENCES DE SOURCE           *
      *===============================================================*
      * TEST DES TOUCHES FONCTION
           COPY DFHAID.
      * MODIFICATION DYNAMIQUE DES ATTRIBUTS DE MAP
           COPY DFHBMSCA.
      * TABLE DES MESSAGES
           COPY TABMSG.
      * MAPSET DU PROGRAMME
           COPY HNSN5M5.
       01 HNSM5M5TAB REDEFINES HNSM5M5I.
          05  FILLER              PIC X(52).
          05  WS-TABARTS.
              10  FILLER          OCCURS 7.
                 15  WS-SELEC     PIC X(1).
                 15  FILLER       PIC X(3).
                 15  WS-CODE      PIC X(5).
                 15  FILLER       PIC X(3).
                 15  WS-CATEG     PIC X(5).
                 15  FILLER       PIC X(3).
                 15  WS-LIBEL     PIC X(20).
                 15  FILLER       PIC X(3).
                 15  WS-QTSTK     PIC ZZZZZ9 BLANK WHEN ZERO.
                 15  FILLER       PIC X(3).
                 15  WS-NLOT      PIC X(1).
                 15  FILLER       PIC X(3).
          05  FILLER              PIC X(79).

      * DESCRIPTION DES ENREGISTREMENTS DU CLUSTER KSDS ARTICLE
           COPY ARTICLE.
      * DESCRIPTION DES ENREGISTREMENTS DU CLUSTER RRDS FOURNISSEUR
      *    COPY FOURNIS.

      *===============================================================*
      *              ZONES DE TRAVAIL DU PROGRAMME                    *
      *===============================================================*
       01  WS-COMMAREA.
           05  WS-AIG                        PIC 9.
                88  LOOP-MENU                VALUE 0.
                88  LOOP-SPG                 VALUE 1 THRU 6.
           05  WS-TAFF                       PIC X.
                88  INIT-TRT                 VALUE LOW-VALUE.
                88  AFF-MAP                  VALUE 'M'.
                88  AFF-AIDE                 VALUE 'A'.
                88  CONFIRMATION             VALUE 'C'.
           05  WS-CSEQ                       PIC X.
           05  WS-CODEARTICLE                PIC X(5).
           05  WS-CODEARTICLE2               PIC X(5).
      * ZONE MODIFIABLE SELON LES BESOINS (TAILLE MAX. = 4095 OCTETS)
           05  FILLER                        PIC X(4085).

      * CODE RETOUR
       01  WS-RC                             PIC S9(4) COMP.

      * DATE DU JOUR
       01  WS-ABSTIME                        PIC S9(15) COMP-3.

      * VARIABLE QUI SERVIRA A MODIFIER LE FORMAT DE LA TACHE
       01  WS-TACHE                          PIC 9(4).

      *TAILLE DE L'ENREGISTREMENT READ
       01  WS-LENGTH                         PIC S9(4) COMP VALUE 139.

      *PERMET D'AFFICHER AU MAX 7 ARTICLES
       01  WS-NBART                          PIC S9(4) COMP.

      *COMPTEUR DE SELEC
       01  WS-NBSELEC                        PIC S9(4) COMP.

      *SELEC OK
       01  WS-SELECOK                        PIC X.
       01  WS-NBSELECOK                      PIC S9(4) COMP.

      *NOM PROGRAMME A APPELER
       01  WS-NOMPROG                        PIC X(8).

      *MEMOIRE CODE ARTICLE
       01  WS-MEMCODEARTICLE                 PIC X(5).

       01  WS-SQLCODE                        PIC +ZZZ9.
       01  WS-MESSAGE-TXT                    PIC X(80).

       LINKAGE SECTION.
       01  DFHCOMMAREA                       PIC X(4096).

      *                  ==============================               *
      *=================<    PROCEDURE      DIVISION   >==============*
      *                  ==============================               *

       PROCEDURE DIVISION.

      *===============================================================*
      *    STRUCTURATION DE LA PARTIE ALGORITHMIQUE DU PROGRAMME      *
      *---------------------------------------------------------------*
      *    1 : LES COMPOSANTS DU DIAGRAMME SONT CODES A L'AIDE DE     *
      *        DEUX PARAGRAPHES  XXXX-COMPOSANT-DEB                   *
      *                          XXYY-COMPOSANR-FIN                   *
      *    2 : XX REPRESENTE LE NIVEAU HIERARCHIQUE                   *
      *        YY DIFFERENCIE LES COMPOSANTS DE MEME NIVEAU           *
      *    3 : TOUT COMPOSANT EST PRECEDE D'UN CARTOUCHE DE           *
      *        COMMENTAIRE QUI EXPLICITE LE ROLE DU COMPOSANT         *
      *===============================================================*


      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT PROGRAMME              *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       0000-PROGRAMME-DEB.

           MOVE DFHCOMMAREA TO WS-COMMAREA.

       0000-PROGRAMME-COR.

           IF WS-AIG NOT = 2
           THEN
               PERFORM 1000-INITIALISATION-DEB
                  THRU 1000-INITIALISATION-FIN
           ELSE
               PERFORM 1010-TEST-LOOP-DEB
                  THRU 1010-TEST-LOOP-FIN
           END-IF.

       0000-PROGRAMME-FIN.

           PERFORM 9999-FIN-RTRANSID-DEB
              THRU 9999-FIN-RTRANSID-FIN.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT INITIALISATION         *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       1000-INITIALISATION-DEB.

      *REMISE A ZERO BINAIRE DE LA MAP LOGIQUE
           MOVE LOW-VALUE TO HNSM5M5O.

           MOVE 2 TO WS-AIG.

           MOVE LOW-VALUE TO WS-CODEARTICLE.

           MOVE 'CONSULTER LE FICHIER ARTICLE ET/OU SELECTIONNER UNE ACT
      -    'ION A EFFECTUER' TO MMSGO.

           PERFORM 7000-INIT-MAP-DEB
              THRU 7000-INIT-MAP-FIN.

      *AFFICHAGE DE LA MAP
           PERFORM 6000-AFF-MAP-DEB
              THRU 6000-AFF-MAP-FIN.

       1000-INITIALISATION-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT TEST-LOOP.             *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       1010-TEST-LOOP-DEB.
           EXIT.

       1010-TEST-LOOP-COR.

           IF AFF-AIDE
           THEN PERFORM 2000-LOOP-AIDE-DEB
                   THRU 2000-LOOP-AIDE-FIN
           ELSE PERFORM 2010-ETUDEACTION-DEB
                   THRU 2010-ETUDEACTION-FIN
           END-IF.
           EXIT.
       1010-TEST-LOOP-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT PROGRAMME              *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       2000-LOOP-AIDE-DEB.

           PERFORM 7000-INIT-MAP-DEB
              THRU 7000-INIT-MAP-FIN.

      *AFFICHAGE DE LA MAP
           PERFORM 6000-AFF-MAP-DEB
              THRU 6000-AFF-MAP-FIN.

       2000-LOOP-AIDE-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT ETUDEACTION            *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       2010-ETUDEACTION-DEB.

      *ON RECUPERE LE CONTENU DE LA MAP LOGIQUE
           PERFORM 6020-LIRE-MAP-DEB
              THRU 6020-LIRE-MAP-FIN.

       2010-ETUDEACTION-COR.

      *ON REGARDE L'ACTION QUE VIENT D'EFFECTUER L'UTILISATEUR
           EVALUATE EIBAID
           WHEN DFHENTER PERFORM 3000-TRAITEMENT-DEB
                            THRU 3000-TRAITEMENT-FIN
           WHEN DFHPF1   PERFORM 3010-AIDE-DEB
                            THRU 3010-AIDE-FIN
           WHEN DFHCLEAR PERFORM 3020-TRT-CLEAR-DEB
                            THRU 3020-TRT-CLEAR-FIN
           WHEN DFHPF7   PERFORM 3040-TRT-PF7-DEB
                            THRU 3040-TRT-PF7-FIN
           WHEN DFHPF8   PERFORM 3050-TRT-PF8-DEB
                            THRU 3050-TRT-PF8-FIN
           WHEN DFHPF11  PERFORM 3060-TRT-PF11-DEB
                            THRU 3060-TRT-PF11-FIN
           WHEN DFHPF12  PERFORM 3070-TRT-PF12-DEB
                            THRU 3070-TRT-PF12-FIN
           WHEN OTHER    PERFORM 3030-TRT-PFERROR-DEB
                            THRU 3030-TRT-PFERROR-FIN
           END-EVALUATE.

       2010-ETUDEACTION-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT TRAITEMENT             *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       3000-TRAITEMENT-DEB.

           MOVE 0 TO WS-NBSELEC.

           PERFORM 7020-COMPTSELEC-DEB
              THRU 7020-COMPTSELEC-FIN
            VARYING WS-NBART FROM 1 BY 1
              UNTIL WS-NBART > 7.

       3000-TRAITEMENT-COR.

           EVALUATE WS-NBSELEC
           WHEN 0     PERFORM 4000-0SELEC-DEB
                         THRU 4000-0SELEC-FIN
           WHEN 1     PERFORM 4020-1SELEC-DEB
                         THRU 4020-1SELEC-FIN
           WHEN OTHER PERFORM 4010-NSELEC-DEB
                         THRU 4010-NSELEC-FIN
           END-EVALUATE.
       3000-TRAITEMENT-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT AIDE-DEB               *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       3010-AIDE-DEB.

           MOVE 'A' TO WS-TAFF.

           PERFORM 6100-AFF-AID-DEB
              THRU 6100-AFF-AID-FIN.

       3010-AIDE-FIN.
           EXIT.


      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT TRT-CLEAR              *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       3020-TRT-CLEAR-DEB.

           PERFORM 7000-INIT-MAP-DEB
              THRU 7000-INIT-MAP-FIN.

           MOVE WS-MSG(2) TO MMSGO.

      *AFFICHAGE DE LA MAP
           PERFORM 6030-AFF-MAPALARM-DEB
              THRU 6030-AFF-MAPALARM-FIN.

       3020-TRT-CLEAR-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT TRT-PF7                *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       3040-TRT-PF7-DEB.

           MOVE 0 TO WS-NBSELEC.

           PERFORM 7020-COMPTSELEC-DEB
              THRU 7020-COMPTSELEC-FIN
            VARYING WS-NBART FROM 1 BY 1
              UNTIL WS-NBART > 7.

           IF WS-NBSELEC > 0
           THEN
               MOVE 'CHOISIR ENTRE ACTION SUR ARTICLE ET PAGINATION AVAN
      -        'T OU ARRIERE' TO MMSGO
           ELSE
               PERFORM 6200-STARTBR-ART-DEB
                  THRU 6200-STARTBR-ART-FIN

               PERFORM 6230-READPREV-ART-DEB
                  THRU 6230-READPREV-ART-FIN
                  2 TIMES

               IF WS-RC = DFHRESP(NORMAL)
               THEN
                   MOVE SPACE TO MMSGO
                   PERFORM 7014-AFF-ARTICLES-PF7-DEB
                      THRU 7014-AFF-ARTICLES-PF7-FIN
               ELSE
                   MOVE WS-MSG(4) TO MMSGO
                   PERFORM 6210-ENDBR-ART-DEB
                      THRU 6210-ENDBR-ART-FIN
               END-IF
           END-IF.

           PERFORM 6010-AFF-MAPERR-DEB
              THRU 6010-AFF-MAPERR-FIN.

       3040-TRT-PF7-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT TRT-PF8                *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       3050-TRT-PF8-DEB.

           MOVE 0 TO WS-NBSELEC.

           PERFORM 7020-COMPTSELEC-DEB
              THRU 7020-COMPTSELEC-FIN
            VARYING WS-NBART FROM 1 BY 1
              UNTIL WS-NBART > 7.

           IF WS-NBSELEC > 0
           THEN
               MOVE 'CHOISIR ENTRE ACTION SUR ARTICLE ET PAGINATION AVAN
      -        'T OU ARRIERE' TO MMSGO
           ELSE
               MOVE WS-CODEARTICLE TO WS-MEMCODEARTICLE
               MOVE WS-CODEARTICLE2 TO WS-CODEARTICLE
               PERFORM 6200-STARTBR-ART-DEB
                  THRU 6200-STARTBR-ART-FIN

               PERFORM 6220-READNEXT-ART-DEB
                  THRU 6220-READNEXT-ART-FIN
                  2 TIMES

               IF WS-RC = DFHRESP(NORMAL)
               THEN
                   MOVE SPACE TO MMSGO
                   PERFORM 7012-AFF-ARTICLES-PF8-DEB
                      THRU 7012-AFF-ARTICLES-PF8-FIN
               ELSE
                   MOVE WS-MSG(5) TO MMSGO
                   PERFORM 6210-ENDBR-ART-DEB
                      THRU 6210-ENDBR-ART-FIN
                   MOVE WS-MEMCODEARTICLE TO WS-CODEARTICLE
               END-IF
           END-IF.

           PERFORM 6010-AFF-MAPERR-DEB
              THRU 6010-AFF-MAPERR-FIN.

       3050-TRT-PF8-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT TRT-PF11               *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       3060-TRT-PF11-DEB.

           MOVE 0 TO WS-NBSELEC.

           PERFORM 7020-COMPTSELEC-DEB
              THRU 7020-COMPTSELEC-FIN
            VARYING WS-NBART FROM 1 BY 1
              UNTIL WS-NBART > 7.

           IF WS-NBSELEC > 0
           THEN
               MOVE 'CHOISIR ENTRE ACTION SUR ARTICLE ET PAGINATION AVAN
      -        'T OU ARRIERE' TO MMSGO
               PERFORM 6010-AFF-MAPERR-DEB
                  THRU 6010-AFF-MAPERR-FIN
           ELSE
               MOVE LOW-VALUE TO WS-CODEARTICLE

               PERFORM 7010-AFF-ARTICLES-DEB
                  THRU 7010-AFF-ARTICLES-FIN

               MOVE WS-MSG(4) TO MMSGO

               PERFORM 6010-AFF-MAPERR-DEB
                  THRU 6010-AFF-MAPERR-FIN
           END-IF.

       3060-TRT-PF11-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT TRT-PF12               *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       3070-TRT-PF12-DEB.

           MOVE 0 TO WS-NBSELEC.

           PERFORM 7020-COMPTSELEC-DEB
              THRU 7020-COMPTSELEC-FIN
            VARYING WS-NBART FROM 1 BY 1
              UNTIL WS-NBART > 7.

           IF WS-NBSELEC > 0
           THEN
               MOVE 'CHOISIR ENTRE ACTION SUR ARTICLE ET PAGINATION AVAN
      -        'T OU ARRIERE' TO MMSGO
               PERFORM 6010-AFF-MAPERR-DEB
                  THRU 6010-AFF-MAPERR-FIN
           ELSE
               MOVE HIGH-VALUE TO WS-CODEARTICLE

               PERFORM 6200-STARTBR-ART-DEB
                  THRU 6200-STARTBR-ART-FIN

               PERFORM 6230-READPREV-ART-DEB
                  THRU 6230-READPREV-ART-FIN
                VARYING WS-NBART FROM 1 BY 1
                  UNTIL WS-NBART > 7 OR WS-RC = DFHRESP(ENDFILE)

               PERFORM 7010-AFF-ARTICLES-DEB
                  THRU 7010-AFF-ARTICLES-FIN

               MOVE WS-MSG(5) TO MMSGO

               PERFORM 6010-AFF-MAPERR-DEB
                  THRU 6010-AFF-MAPERR-FIN
           END-IF.

       3070-TRT-PF12-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT TRT-PFERROR            *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       3030-TRT-PFERROR-DEB.

           MOVE WS-MSG(1) TO MMSGO.

           PERFORM 6010-AFF-MAPERR-DEB
              THRU 6010-AFF-MAPERR-FIN.

       3030-TRT-PFERROR-FIN.
           EXIT.


      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT 0SELEC                 *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       4000-0SELEC-DEB.

           MOVE 'CODE ACTION NON RENSEIGNE' TO MMSGO.

           PERFORM 6010-AFF-MAPERR-DEB
              THRU 6010-AFF-MAPERR-FIN.

       4000-0SELEC-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT NSELEC                 *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       4010-NSELEC-DEB.

           MOVE 'VEUILLEZ SAISIR UNE SEULE ACTION' TO MMSGO.

           PERFORM 6010-AFF-MAPERR-DEB
              THRU 6010-AFF-MAPERR-FIN.

       4010-NSELEC-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT 1SELEC                 *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       4020-1SELEC-DEB.
           EXIT.

       4020-1SELEC-COR.

           EVALUATE WS-SELECOK
           WHEN 'S'   PERFORM 5000-ACTIONSELECT-DEB
                         THRU 5000-ACTIONSELECT-FIN
      *    WHEN 'E'   PERFORM 5010-ACTIONEDIT-DEB
      *                  THRU 5010-ACTIONEDIT-FIN
           WHEN 'D'   PERFORM 5020-ACTIONDELETE-DEB
                         THRU 5020-ACTIONDELETE-FIN
           WHEN OTHER PERFORM 5030-ACTIONERREUR-DEB
                         THRU 5030-ACTIONERREUR-FIN
           END-EVALUATE.

       4020-1SELEC-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT ACTIONSELECT           *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       5000-ACTIONSELECT-DEB.

           PERFORM 7030-RECHERCHEART-DEB
              THRU 7030-RECHERCHEART-FIN.

           MOVE 'HNSC5M2' TO WS-NOMPROG.

           MOVE 'Z' TO WS-TAFF.

           MOVE 1 TO WS-CSEQ.

           PERFORM 9000-LANCERPROG-DEB
              THRU 9000-LANCERPROG-FIN.

       5000-ACTIONSELECT-FIN.
           EXIT.


      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT ACTIONDELETE           *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       5020-ACTIONDELETE-DEB.

           PERFORM 7030-RECHERCHEART-DEB
              THRU 7030-RECHERCHEART-FIN.

           MOVE 'HNSC5M7' TO WS-NOMPROG.

           MOVE 'Z' TO WS-TAFF.

           MOVE 1 TO WS-CSEQ.

           PERFORM 9000-LANCERPROG-DEB
              THRU 9000-LANCERPROG-FIN.

       5020-ACTIONDELETE-FIN.
           EXIT.
      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT ACTIONERREUR           *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       5030-ACTIONERREUR-DEB.

           MOVE 'ACTION A EFFECTUER INEXISTANTE' TO MMSGO.

           PERFORM 6010-AFF-MAPERR-DEB
              THRU 6010-AFF-MAPERR-FIN.

       5030-ACTIONERREUR-FIN.
           EXIT.

      *===============================================================*
      *    STRUCTURATION DE LA PARTIE INDEPENDANTE DU PROGRAMME       *
      *---------------------------------------------------------------*
      *   6XXX-  : ORDRES DE MANIPULATION DES FICHIERS                *
      *   7XXX-  : TRANSFERTS ET CALCULS COMPLEXES                    *
      *   8XXX-  : ORDRES DE MANIPULATION DES EDITIONS                *
      *   9XXX-  : FIN DE PROGRAMME                                   *
      *   9999-  : FIN DE PROGRAMME                                   *
      *===============================================================*

      *---------------------------------------------------------------*
      *   6XXX-  : ORDRES DE MANIPULATION DES FICHIERS                *
      *---------------------------------------------------------------*

       6000-AFF-MAP-DEB.

           MOVE -1 TO MSELEC1L.

      *NUMERO DE LA TACHE
           MOVE EIBTASKN TO WS-TACHE.
           MOVE WS-TACHE TO MTASKO.

           EXEC CICS SEND MAP('HNSM5M5')
                          MAPSET('HNSN5M5')
                          RESP(WS-RC)
                          CURSOR
                          ERASE
                          FRSET
           END-EXEC.

       6000-AFF-MAP-FIN.
           EXIT.

       6010-AFF-MAPERR-DEB.

           MOVE -1 TO MSELEC1L.

      *NUMERO DE LA TACHE
           MOVE EIBTASKN TO WS-TACHE.
           MOVE WS-TACHE TO MTASKO.

           EXEC CICS SEND MAP('HNSM5M5')
                          MAPSET('HNSN5M5')
                          RESP(WS-RC)
                          CURSOR
                          DATAONLY
                          ALARM
           END-EXEC.

       6010-AFF-MAPERR-FIN.
           EXIT.

       6020-LIRE-MAP-DEB.

           EXEC CICS RECEIVE MAP('HNSM5M5')
                             MAPSET('HNSN5M5')
                             RESP(WS-RC)
           END-EXEC.

       6020-LIRE-MAP-FIN.
           EXIT.

       6030-AFF-MAPALARM-DEB.

           MOVE -1 TO MSELEC1L.

      *NUMERO DE LA TACHE
           MOVE EIBTASKN TO WS-TACHE.
           MOVE WS-TACHE TO MTASKO.

           EXEC CICS SEND MAP('HNSM5M5')
                          MAPSET('HNSN5M5')
                          RESP(WS-RC)
                          CURSOR
                          ERASE
                          FRSET
                          ALARM
           END-EXEC.

       6030-AFF-MAPALARM-FIN.
           EXIT.

       6100-AFF-AID-DEB.

           EXEC CICS SEND MAP('HNSMHP5')
                          MAPSET('HNSN5M5')
                          RESP(WS-RC)
                          CURSOR
                          ERASE
                          FRSET
           END-EXEC.

       6100-AFF-AID-FIN.
           EXIT.

       6200-STARTBR-ART-DEB.

           EXEC CICS STARTBR FILE('ART0513')
                             RIDFLD(WS-CODEARTICLE)
                             RESP(WS-RC)
           END-EXEC.

       6200-STARTBR-ART-FIN.
           EXIT.

       6210-ENDBR-ART-DEB.

           EXEC CICS ENDBR
                     FILE('ART0513')
                     RESP(WS-RC)
           END-EXEC.

       6210-ENDBR-ART-FIN.
           EXIT.

       6220-READNEXT-ART-DEB.

           EXEC CICS READNEXT FILE('ART0513')
                              RIDFLD(WS-CODEARTICLE)
                              INTO(WS-ART-ENR)
                              LENGTH(WS-LENGTH)
                              RESP(WS-RC)
           END-EXEC.

       6220-READNEXT-ART-FIN.
           EXIT.

       6230-READPREV-ART-DEB.

           EXEC CICS READPREV FILE('ART0513')
                              RIDFLD(WS-CODEARTICLE)
                              INTO(WS-ART-ENR)
                              LENGTH(WS-LENGTH)
                              RESP(WS-RC)
           END-EXEC.

       6230-READPREV-ART-FIN.
           EXIT.
      *---------------------------------------------------------------*
      *   7XXX-  : TRANSFERTS ET CALCULS COMPLEXES                    *
      *---------------------------------------------------------------*

       7000-INIT-MAP-DEB.

           MOVE 'M' TO WS-TAFF.

      *DATE DU JOUR
           EXEC CICS ASKTIME
                     ABSTIME(WS-ABSTIME)
           END-EXEC.

           EXEC CICS FORMATTIME
                     ABSTIME(WS-ABSTIME)
                     DDMMYYYY(MDATEO)
                     DATESEP
           END-EXEC.

      *NUMERO DU TERMINAL
           MOVE EIBTRMID TO MTERMO.

      *CODE TRANSACTION
           MOVE EIBTRNID TO MTRANO.

           PERFORM 7010-AFF-ARTICLES-DEB
              THRU 7010-AFF-ARTICLES-FIN.

       7000-INIT-MAP-FIN.
           EXIT.

       7010-AFF-ARTICLES-DEB.

           INITIALIZE WS-TABARTS.

           PERFORM 6200-STARTBR-ART-DEB
              THRU 6200-STARTBR-ART-FIN.

           PERFORM 6220-READNEXT-ART-DEB
              THRU 6220-READNEXT-ART-FIN.

           PERFORM 7011-AFF-1ARTICLE-DEB
              THRU 7011-AFF-1ARTICLE-FIN
              VARYING WS-NBART FROM 1 BY 1
                UNTIL WS-NBART > 7 OR WS-RC = DFHRESP(ENDFILE)

           PERFORM 6210-ENDBR-ART-DEB
              THRU 6210-ENDBR-ART-FIN.

           MOVE WS-CODE(1) TO WS-CODEARTICLE.

           MOVE WS-CODE(7) TO WS-CODEARTICLE2.

       7010-AFF-ARTICLES-FIN.
           EXIT.

       7011-AFF-1ARTICLE-DEB.

           MOVE WS-ART-CODE   TO WS-CODE(WS-NBART).

           MOVE WS-ART-CATEG  TO WS-CATEG(WS-NBART).

           MOVE WS-ART-LIBEL  TO WS-LIBEL(WS-NBART).

           MOVE WS-ART-QTE    TO WS-QTSTK(WS-NBART).

           MOVE WS-ART-NB-LOT TO WS-NLOT(WS-NBART).

           PERFORM 6220-READNEXT-ART-DEB
              THRU 6220-READNEXT-ART-FIN.

       7011-AFF-1ARTICLE-FIN.
           EXIT.

       7012-AFF-ARTICLES-PF8-DEB.

           INITIALIZE WS-TABARTS.

           PERFORM 7011-AFF-1ARTICLE-DEB
              THRU 7011-AFF-1ARTICLE-FIN
              VARYING WS-NBART FROM 1 BY 1
                UNTIL WS-NBART > 7 OR WS-RC = DFHRESP(ENDFILE)

           IF WS-RC = DFHRESP(ENDFILE) AND WS-NBART < 8
           THEN
               PERFORM 6230-READPREV-ART-DEB
                  THRU 6230-READPREV-ART-FIN
               PERFORM 7013-AFF-1ARTICLEPREV-DEB
                  THRU 7013-AFF-1ARTICLEPREV-FIN
                  VARYING WS-NBART FROM 7 BY -1
                    UNTIL WS-NBART < 1
           END-IF.

           PERFORM 6210-ENDBR-ART-DEB
              THRU 6210-ENDBR-ART-FIN.

           MOVE WS-CODE(1) TO WS-CODEARTICLE.

           MOVE WS-CODE(7) TO WS-CODEARTICLE2.

       7012-AFF-ARTICLES-PF8-FIN.
           EXIT.

       7013-AFF-1ARTICLEPREV-DEB.

           MOVE WS-ART-CODE   TO WS-CODE(WS-NBART).

           MOVE WS-ART-CATEG  TO WS-CATEG(WS-NBART).

           MOVE WS-ART-LIBEL  TO WS-LIBEL(WS-NBART).

           MOVE WS-ART-QTE    TO WS-QTSTK(WS-NBART).

           MOVE WS-ART-NB-LOT TO WS-NLOT(WS-NBART).

           PERFORM 6230-READPREV-ART-DEB
              THRU 6230-READPREV-ART-FIN.

       7013-AFF-1ARTICLEPREV-FIN.
           EXIT.

       7014-AFF-ARTICLES-PF7-DEB.

           INITIALIZE WS-TABARTS.

           PERFORM 7013-AFF-1ARTICLEPREV-DEB
              THRU 7013-AFF-1ARTICLEPREV-FIN
              VARYING WS-NBART FROM 7 BY -1
                UNTIL WS-NBART < 1 OR WS-RC = DFHRESP(ENDFILE)

           IF WS-RC = DFHRESP(ENDFILE) AND WS-NBART > 0
           THEN
               PERFORM 6220-READNEXT-ART-DEB
                  THRU 6220-READNEXT-ART-FIN
               PERFORM 7011-AFF-1ARTICLE-DEB
                  THRU 7011-AFF-1ARTICLE-FIN
                  VARYING WS-NBART FROM 1 BY 1
                    UNTIL WS-NBART > 7
           END-IF.

           PERFORM 6210-ENDBR-ART-DEB
              THRU 6210-ENDBR-ART-FIN.

           MOVE WS-CODE(1) TO WS-CODEARTICLE.

           MOVE WS-CODE(7) TO WS-CODEARTICLE2.

       7014-AFF-ARTICLES-PF7-FIN.
           EXIT.

       7020-COMPTSELEC-DEB.

           IF WS-SELEC(WS-NBART) NOT = SPACE AND NOT = LOW-VALUE
           THEN
               ADD 1 TO WS-NBSELEC
               MOVE WS-SELEC(WS-NBART) TO WS-SELECOK
               MOVE WS-NBART TO WS-NBSELECOK
           END-IF.

       7020-COMPTSELEC-FIN.
           EXIT.

       7030-RECHERCHEART-DEB.

           PERFORM 6200-STARTBR-ART-DEB
              THRU 6200-STARTBR-ART-FIN.

           PERFORM 6220-READNEXT-ART-DEB
              THRU 6220-READNEXT-ART-FIN
            VARYING WS-NBART FROM 1 BY 1
              UNTIL WS-NBART > WS-NBSELECOK.

           MOVE WS-ART-CODE TO WS-CODEARTICLE.

           PERFORM 6210-ENDBR-ART-DEB
              THRU 6210-ENDBR-ART-FIN.

       7030-RECHERCHEART-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *   8XXX-  : ORDRES DE MANIPULATION DES EDITIONS                *
      *---------------------------------------------------------------*
      *---------------------------------------------------------------*
      *   9XXX-  : ORDRES DE MANIPULATION DES SOUS-PROGRAMMES         *
      *---------------------------------------------------------------*

       9000-LANCERPROG-DEB.

           EXEC CICS XCTL PROGRAM(WS-NOMPROG)
                          COMMAREA(WS-COMMAREA)
                          RESP(WS-RC)
           END-EXEC.

       9000-LANCERPROG-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *   9999-  : FIN DE PROGRAMME                                   *
      *---------------------------------------------------------------*

       9999-FIN-RTRANSID-DEB.

            EXEC CICS RETURN
                 TRANSID(EIBTRNID)
                 COMMAREA(WS-COMMAREA)
            END-EXEC.

       9999-FIN-RTRANSID-FIN.
            EXIT.
      *===============================================================*
      *--                INFORMATIONS GENERALES                     --*
      *---------------------------------------------------------------*
      *  NOM DU PROGRAMME : HNSC5M6                                   *
      *  NOM DU REDACTEUR : REVERE ALAIN                              *
      *  SOCIETE          : GFI INFORMATIQUE                          *
      *  DATE DE CREATION : 22/09/2014                                *
      *---------------------------------------------------------------*
      *--               OBJECTIFS GENERAUX DU PROGRAMME             --*
      *---------------------------------------------------------------*
      *                                                               *
      *                                                               *
      *---------------------------------------------------------------*
      *--               HISTORIQUE DES MODIFICATIONS                --*
      *---------------------------------------------------------------*
      * DATE  MODIF   ยง          NATURE DE LA MODIFICATION            *
      *---------------------------------------------------------------*
      *               ยง                                               *
      *===============================================================*

       IDENTIFICATION DIVISION.
       PROGRAM-ID.      HNSC5M6.

      *===============================================================*
      *           NE PAS MODIFIER LA PARTIE ENCADREE DU CODE          *
      *===============================================================*
       ENVIRONMENT DIVISION.
       CONFIGURATION SECTION.
       SPECIAL-NAMES.
           DECIMAL-POINT IS COMMA.
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.
      * VIDE
       DATA DIVISION.
       FILE SECTION.
      * VIDE
      *===============================================================*

      *========================
       WORKING-STORAGE SECTION.
      *========================

      *===============================================================*
      *             COPY - INSERTION DE SEQUENCES DE SOURCE           *
      *===============================================================*
      * TEST DES TOUCHES FONCTION
           COPY DFHAID.
      * MODIFICATION DYNAMIQUE DES ATTRIBUTS DE MAP
           COPY DFHBMSCA.
      * TABLE DES MESSAGES
           COPY TABMSG.
      * MAPSET DU PROGRAMME
           COPY HNSN5M6.
       01 HNSM5M6TAB REDEFINES HNSM5M6I.
          05  FILLER              PIC X(122).
          05  WS-TABLOTS.
              10 FILLER           OCCURS 5.
                 15 WS-LIBLOL     PIC S9(4) COMP.
                 15 WS-LIBLOA     PIC X(1).
                 15 WS-LIBLO      PIC X(6).
                 15 WS-QTLOTL     PIC S9(4) COMP.
                 15 WS-QTLOTA     PIC X(1).
                 15 WS-QTLOT      PIC X(5).
                 15 WS-PRIXAL     PIC S9(4) COMP.
                 15 WS-PRIXAA     PIC X(1).
                 15 WS-PRIXA      PIC X(5).
                 15 WS-PRIXBL     PIC S9(4) COMP.
                 15 WS-PRIXBA     PIC X(1).
                 15 WS-PRIXB      PIC X(2).
          05  FILLER              PIC X(81).
      * DESCRIPTION DES ENREGISTREMENTS DU CLUSTER KSDS ARTICLE
           COPY ARTICLE.
      * DESCRIPTION DES ENREGISTREMENTS DU CLUSTER RRDS FOURNISSEUR
           COPY FOURNIS.

      *===============================================================*
      *              ZONES DE TRAVAIL DU PROGRAMME                    *
      *===============================================================*
       01  WS-COMMAREA.
           05  WS-AIG                        PIC 9.
                88  LOOP-MENU                VALUE 0.
                88  LOOP-SPG                 VALUE 1 THRU 6.
           05  WS-TAFF                       PIC X.
                88  INIT-TRT                 VALUE LOW-VALUE.
                88  AFF-MAP                  VALUE 'M'.
                88  AFF-AIDE                 VALUE 'A'.
                88  CONFIRMATION             VALUE 'C'.
           05  FILLER                        PIC X(1).
           05  WS-COMMA-CODE                 PIC X(5).
           05  WS-COMMA-LIBEL                PIC X(20).
           05  WS-COMMA-CATEG                PIC X(5).
           05  WS-COMMA-FOUR                 PIC X(5).
           05  WS-COMMA-APPRO                PIC X(2).
           05  WS-COMMA-QTALE                PIC X(5).
           05  FILLER                        OCCURS 5.
               10 WS-COMMA-LIBLO             PIC X(6).
               10 WS-COMMA-QTLOT             PIC X(5).
               10 WS-COMMA-PRIXA             PIC X(5).
               10 WS-COMMA-PRIXB             PIC X(2).
      * ZONE MODIFIABLE SELON LES BESOINS (TAILLE MAX. = 4094 OCTETS)
           05  FILLER                        PIC X(4000).

      * CODE RETOUR
       01  WS-RC                             PIC S9(4) COMP.

      * DATE DU JOUR
       01  WS-ABSTIME                        PIC S9(15) COMP-3.

      * VARIABLE QUI SERVIRA A MODIFIER LE FORMAT DE LA TACHE
       01  WS-TACHE                          PIC 9(4).

      *PERMET D'AFFICHER AU MAX 5 LOTS
       01  WS-NBLOT                          PIC S9(4) COMP.

      *0 SI LOTS OK, 1 SINON
       01  WS-NBERREUR                       PIC 9.

      *TAILLE DE L'ENREGISTREMENT READ
       01  WS-LENGTH                         PIC S9(4) COMP VALUE 139.

      *VARIABLES CALCULEES
       01  WS-COMPTEURLOT                    PIC 9.
       01  WS-COMPTEURSTOCK                  PIC 9(6).
       01  WS-COMPTEURSTOCK-ED               PIC ZZZZZ9.
       01  WS-QTLOTNUM                       PIC 9(5).
       01  WS-PRIXANUM                       PIC 9(5).
       01  WS-PRIXBNUM                       PIC 9(2).

       01  WS-RIDFLD                         PIC S9(8) COMP.

       LINKAGE SECTION.
       01  DFHCOMMAREA                       PIC X(4096).

      *                  ==============================               *
      *=================<    PROCEDURE      DIVISION   >==============*
      *                  ==============================               *

       PROCEDURE DIVISION.

      *===============================================================*
      *    STRUCTURATION DE LA PARTIE ALGORITHMIQUE DU PROGRAMME      *
      *---------------------------------------------------------------*
      *    1 : LES COMPOSANTS DU DIAGRAMME SONT CODES A L'AIDE DE     *
      *        DEUX PARAGRAPHES  XXXX-COMPOSANT-DEB                   *
      *                          XXYY-COMPOSANR-FIN                   *
      *    2 : XX REPRESENTE LE NIVEAU HIERARCHIQUE                   *
      *        YY DIFFERENCIE LES COMPOSANTS DE MEME NIVEAU           *
      *    3 : TOUT COMPOSANT EST PRECEDE D'UN CARTOUCHE DE           *
      *        COMMENTAIRE QUI EXPLICITE LE ROLE DU COMPOSANT         *
      *===============================================================*


      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT PROGRAMME              *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       0000-PROGRAMME-DEB.

           MOVE DFHCOMMAREA TO WS-COMMAREA.

       0000-PROGRAMME-COR.

           IF WS-AIG NOT = 4
           THEN
               PERFORM 1000-INITIALISATION-DEB
                  THRU 1000-INITIALISATION-FIN
           ELSE
               PERFORM 1010-TEST-LOOP-DEB
                  THRU 1010-TEST-LOOP-FIN
           END-IF.

       0000-PROGRAMME-FIN.

           PERFORM 9999-FIN-RTRANSID-DEB
              THRU 9999-FIN-RTRANSID-FIN.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT INITIALISATION         *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       1000-INITIALISATION-DEB.

      *REMISE A ZERO BINAIRE DE LA MAP LOGIQUE
           MOVE LOW-VALUE TO HNSM5M6O.

           MOVE 4 TO WS-AIG.

           MOVE 'M' TO WS-TAFF.

           MOVE 'VEUILLEZ SAISIR LES INFORMATIONS SUR L''ARTICLE PUIS AP
      -    'PUYEZ SUR ENTREE' TO MMSGO.

           PERFORM 7000-INIT-MAP-DEB
              THRU 7000-INIT-MAP-FIN.

      *AFFICHAGE DE LA MAP
           PERFORM 6000-AFF-MAP-DEB
              THRU 6000-AFF-MAP-FIN.

       1000-INITIALISATION-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT TEST-LOOP              *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       1010-TEST-LOOP-DEB.
           EXIT.

       1010-TEST-LOOP-COR.

           EVALUATE TRUE
           WHEN AFF-AIDE     PERFORM 2000-LOOP-AIDE-DEB
                                THRU 2000-LOOP-AIDE-FIN
           WHEN CONFIRMATION PERFORM 2010-LOOP-CONFIRMATION-DEB
                                THRU 2010-LOOP-CONFIRMATION-FIN
           WHEN OTHER        PERFORM 2020-ETUDEACTION-DEB
                                THRU 2020-ETUDEACTION-FIN
           END-EVALUATE.

       1010-TEST-LOOP-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT LOOP-AIDE              *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       2000-LOOP-AIDE-DEB.

           MOVE 'M' TO WS-TAFF.

           MOVE WS-COMMA-CODE  TO MCODEO.
           MOVE WS-COMMA-LIBEL TO MLIBELO.
           MOVE WS-COMMA-CATEG TO MCATEGO.
           MOVE WS-COMMA-FOUR  TO MFOURO.
           MOVE WS-COMMA-APPRO TO MAPPROO.
           MOVE WS-COMMA-QTALE TO MQTALEO.
           PERFORM 7110-RECUPART-DEB
              THRU 7110-RECUPART-FIN
            VARYING WS-NBLOT FROM 1 BY 1
              UNTIL WS-NBLOT > 5.

           PERFORM 7000-INIT-MAP-DEB
              THRU 7000-INIT-MAP-FIN.

      *AFFICHAGE DE LA MAP
           PERFORM 6000-AFF-MAP-DEB
              THRU 6000-AFF-MAP-FIN.

       2000-LOOP-AIDE-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT LOOP-CONFIRMATION      *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       2010-LOOP-CONFIRMATION-DEB.
           EXIT.

       2010-LOOP-CONFIRMATION-COR.
           EVALUATE EIBAID
           WHEN DFHENTER PERFORM 3000-CREATE-DEB
                            THRU 3000-CREATE-FIN
           WHEN DFHPF3   PERFORM 3010-CANCELCREATE-DEB
                            THRU 3010-CANCELCREATE-FIN
           WHEN DFHCLEAR PERFORM 3020-CLEAR-CREATE-DEB
                            THRU 3020-CLEAR-CREATE-FIN
           WHEN OTHER    PERFORM 3070-TRT-PFERROR-DEB
                            THRU 3070-TRT-PFERROR-FIN
           END-EVALUATE.

       2010-LOOP-CONFIRMATION-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT ETUDEACTION            *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       2020-ETUDEACTION-DEB.

      *ON RECUPERE LE CONTENU DE LA MAP LOGIQUE
           PERFORM 6020-LIRE-MAP-DEB
              THRU 6020-LIRE-MAP-FIN.

       2020-ETUDEACTION-COR.

      *ON REGARDE L'ACTION QUE VIENT D'EFFECTUER L'UTILISATEUR
           EVALUATE EIBAID
           WHEN DFHENTER PERFORM 3040-TRAITEMENT-DEB
                            THRU 3040-TRAITEMENT-FIN
           WHEN DFHPF1   PERFORM 3050-AIDE-DEB
                            THRU 3050-AIDE-FIN
           WHEN DFHPF4   PERFORM 1000-INITIALISATION-DEB
                            THRU 1000-INITIALISATION-FIN
           WHEN DFHCLEAR PERFORM 3060-TRT-CLEAR-DEB
                            THRU 3060-TRT-CLEAR-FIN
           WHEN OTHER    PERFORM 3070-TRT-PFERROR-DEB
                            THRU 3070-TRT-PFERROR-FIN
           END-EVALUATE.

       2020-ETUDEACTION-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT CREATE                 *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       3000-CREATE-DEB.

      *ON RECUPERE LE CONTENU DE LA MAP LOGIQUE
           PERFORM 6020-LIRE-MAP-DEB
              THRU 6020-LIRE-MAP-FIN.

           IF MCODEI  = LOW-VALUE
           THEN
               MOVE WS-COMMA-CODE  TO MCODEI
           END-IF.

           IF MFOURI  = LOW-VALUE
           THEN
               MOVE WS-COMMA-FOUR  TO MFOURI
           END-IF.

           EVALUATE TRUE
           WHEN MCODEI = SPACE OR = LOW-VALUE
                MOVE -1 TO MCODEL
                MOVE WS-MSG(7) TO MMSGO
                PERFORM 6010-AFF-MAPERR-DEB
                   THRU 6010-AFF-MAPERR-FIN
           WHEN MFOURI = SPACE OR = LOW-VALUE
                MOVE -1 TO MFOURL
                MOVE WS-MSG(7) TO MMSGO
                PERFORM 6010-AFF-MAPERR-DEB
                   THRU 6010-AFF-MAPERR-FIN
           WHEN MFOURI IS NOT NUMERIC
                MOVE -1 TO MFOURL
                MOVE WS-MSG(8) TO MMSGO
                PERFORM 6010-AFF-MAPERR-DEB
                   THRU 6010-AFF-MAPERR-FIN
           WHEN OTHER
                PERFORM 3001-CREATE-SUITE-DEB
                   THRU 3001-CREATE-SUITE-FIN
           END-EVALUATE.

       3000-CREATE-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT CREATE-SUITE           *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       3001-CREATE-SUITE-DEB.

           PERFORM 6200-LIREART-DEB
              THRU 6200-LIREART-FIN

           IF WS-RC NOT = DFHRESP(NOTFND)
           THEN
               MOVE -1 TO MCODEL
               MOVE 'CODE ARTICLE EXISTANT' TO MMSGO
               PERFORM 6010-AFF-MAPERR-DEB
                  THRU 6010-AFF-MAPERR-FIN
           ELSE
               PERFORM 7300-INITART-DEB
                  THRU 7300-INITART-FIN
               MOVE WS-ART-FOU TO WS-RIDFLD
               PERFORM 6300-LIREFOU-DEB
                  THRU 6300-LIREFOU-FIN
               IF WS-RC = DFHRESP(NOTFND)
               THEN
                   MOVE 'FOURNISSEUR IDENTIFIE INEXISTANT' TO MMSGO
                   MOVE -1 TO MFOURL
                   PERFORM 6010-AFF-MAPERR-DEB
                      THRU 6010-AFF-MAPERR-FIN
               ELSE
                   PERFORM 6210-ECRIREART-DEB
                      THRU 6210-ECRIREART-FIN
                   MOVE 'ENREGISTREMENT CREE' TO MMSGO
                   MOVE -1 TO MCODEL
                   MOVE SPACE TO MCODEO WS-COMMA-CODE MNLOTO MQTSTKO
                   MOVE 'M' TO WS-TAFF
                   MOVE DFHUNIMD TO MCODEA MLIBELA MCATEGA
                                    MAPPROA MQTALEA
                   PERFORM 7140-LIBERE-LOT-DEB
                      THRU 7140-LIBERE-LOT-FIN
                    VARYING WS-NBLOT FROM 1 BY 1
                      UNTIL WS-NBLOT > 5
                   PERFORM 6010-AFF-MAPERR-DEB
                      THRU 6010-AFF-MAPERR-FIN
               END-IF
           END-IF.

       3001-CREATE-SUITE-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT CANCELCREATE           *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       3010-CANCELCREATE-DEB.

           MOVE 'M' TO WS-TAFF.

           MOVE 'CREATION ANNULEE' TO MMSGO.

           MOVE DFHUNIMD TO MCODEA MLIBELA MCATEGA
                            MAPPROA MQTALEA.

           PERFORM 7140-LIBERE-LOT-DEB
              THRU 7140-LIBERE-LOT-FIN
            VARYING WS-NBLOT FROM 1 BY 1
              UNTIL WS-NBLOT > 5.

           MOVE -1 TO MCODEL.

           MOVE SPACE TO MNLOTO MQTSTKO.

           PERFORM 6010-AFF-MAPERR-DEB
              THRU 6010-AFF-MAPERR-FIN.

       3010-CANCELCREATE-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT CLEAR-CREATE           *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       3020-CLEAR-CREATE-DEB.

           MOVE WS-MSG(2) TO MMSGO.

           MOVE DFHPROTI TO MLIBELA MCATEGA
                            MAPPROA MQTALEA.
           MOVE 0 TO WS-COMPTEURLOT WS-COMPTEURSTOCK.
           PERFORM 7150-COMPTE-LOT-DEB
              THRU 7150-COMPTE-LOT-FIN
            VARYING WS-NBLOT FROM 1 BY 1
              UNTIL WS-NBLOT > 5.
           MOVE WS-COMPTEURLOT TO MNLOTO.
           MOVE WS-COMPTEURSTOCK TO WS-COMPTEURSTOCK-ED.
           MOVE WS-COMPTEURSTOCK-ED TO MQTSTKO.
           MOVE WS-COMMA-CODE  TO MCODEO.
           MOVE WS-COMMA-LIBEL TO MLIBELO.
           MOVE WS-COMMA-CATEG TO MCATEGO.
           MOVE WS-COMMA-FOUR  TO MFOURO.
           MOVE WS-COMMA-APPRO TO MAPPROO.
           MOVE WS-COMMA-QTALE TO MQTALEO.
           PERFORM 7110-RECUPART-DEB
              THRU 7110-RECUPART-FIN
            VARYING WS-NBLOT FROM 1 BY 1
              UNTIL WS-NBLOT > 5.

           PERFORM 7000-INIT-MAP-DEB
              THRU 7000-INIT-MAP-FIN.
           PERFORM 6001-AFF-MAPALARM-DEB
              THRU 6001-AFF-MAPALARM-FIN.

       3020-CLEAR-CREATE-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT AIDE                   *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       3050-AIDE-DEB.

           MOVE 'A' TO WS-TAFF.

           IF MCODEI NOT = LOW-VALUE
           THEN
               MOVE MCODEI  TO WS-COMMA-CODE
           END-IF.
           IF MLIBELI NOT = LOW-VALUE
           THEN
               MOVE MLIBELI TO WS-COMMA-LIBEL
           END-IF.
           IF MCATEGI NOT = LOW-VALUE
           THEN
               MOVE MCATEGI TO WS-COMMA-CATEG
           END-IF.
           IF MFOURI NOT = LOW-VALUE
           THEN
               MOVE MFOURI  TO WS-COMMA-FOUR
           END-IF.
           IF MAPPROI NOT = LOW-VALUE
           THEN
               MOVE MAPPROI TO WS-COMMA-APPRO
           END-IF.
           IF MQTALEI NOT = LOW-VALUE
           THEN
               MOVE MQTALEI TO WS-COMMA-QTALE
           END-IF.
           PERFORM 7101-SAVEARTIF-DEB
              THRU 7101-SAVEARTIF-FIN
            VARYING WS-NBLOT FROM 1 BY 1
              UNTIL WS-NBLOT > 5.

           PERFORM 7000-INIT-MAP-DEB
              THRU 7000-INIT-MAP-FIN.

           PERFORM 6100-AFF-AID-DEB
              THRU 6100-AFF-AID-FIN.

       3050-AIDE-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT TRAITEMENT             *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       3040-TRAITEMENT-DEB.

           PERFORM 7200-RECUPCOMM-DEB
              THRU 7200-RECUPCOMM-FIN.

           EVALUATE TRUE
           WHEN MLIBELI = SPACE OR = LOW-VALUE
                MOVE -1 TO MLIBELL
                MOVE WS-MSG(7) TO MMSGO
                PERFORM 6010-AFF-MAPERR-DEB
                   THRU 6010-AFF-MAPERR-FIN
           WHEN MCATEGI = SPACE OR = LOW-VALUE
                MOVE -1 TO MCATEGL
                MOVE WS-MSG(7) TO MMSGO
                PERFORM 6010-AFF-MAPERR-DEB
                   THRU 6010-AFF-MAPERR-FIN
           WHEN MAPPROI = SPACE
                MOVE -1 TO MAPPROL
                MOVE WS-MSG(7) TO MMSGO
                PERFORM 6010-AFF-MAPERR-DEB
                   THRU 6010-AFF-MAPERR-FIN
           WHEN MAPPROI IS NOT NUMERIC
                MOVE -1 TO MAPPROL
                MOVE WS-MSG(8) TO MMSGO
                PERFORM 6010-AFF-MAPERR-DEB
                   THRU 6010-AFF-MAPERR-FIN
           WHEN MQTALEI = SPACE
                MOVE -1 TO MQTALEL
                MOVE WS-MSG(7) TO MMSGO
                PERFORM 6010-AFF-MAPERR-DEB
                   THRU 6010-AFF-MAPERR-FIN
           WHEN MQTALEI IS NOT NUMERIC
                MOVE -1 TO MQTALEL
                MOVE WS-MSG(8) TO MMSGO
                PERFORM 6010-AFF-MAPERR-DEB
                   THRU 6010-AFF-MAPERR-FIN
           WHEN OTHER
                PERFORM 4000-TRAITEMENT-SUITE-DEB
                   THRU 4000-TRAITEMENT-SUITE-FIN
           END-EVALUATE.

       3040-TRAITEMENT-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT TRT-CLEAR              *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       3060-TRT-CLEAR-DEB.

      *ON RENSEIGNE LE MESSAGE D'ERREUR
           MOVE WS-MSG(2) TO MMSGO.

           PERFORM 7000-INIT-MAP-DEB
              THRU 7000-INIT-MAP-FIN.

           PERFORM 6001-AFF-MAPALARM-DEB
              THRU 6001-AFF-MAPALARM-FIN.

       3060-TRT-CLEAR-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT TRT-PFERROR            *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       3070-TRT-PFERROR-DEB.

      *ON RENSEIGNE LE MESSAGE D'ERREUR
           MOVE WS-MSG(1) TO MMSGO.

      *ON PLACE LE CURSEUR AU BON ENDROIT
           MOVE -1 TO MCODEL.

           PERFORM 6010-AFF-MAPERR-DEB
              THRU 6010-AFF-MAPERR-FIN.

       3070-TRT-PFERROR-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT TRAITEMENT-SUITE       *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       4000-TRAITEMENT-SUITE-DEB.

           MOVE 0 TO WS-NBERREUR.

           PERFORM 7120-VERIF-LOT-DEB
              THRU 7120-VERIF-LOT-FIN
            VARYING WS-NBLOT FROM 1 BY 1
              UNTIL WS-NBLOT > 5 OR WS-NBERREUR = 1.

           MOVE 0 TO WS-COMPTEURLOT WS-COMPTEURSTOCK
           PERFORM 7150-COMPTE-LOT-DEB
              THRU 7150-COMPTE-LOT-FIN
            VARYING WS-NBLOT FROM 1 BY 1
              UNTIL WS-NBLOT > 5 OR WS-NBERREUR = 1.

           PERFORM 7160-VERIF2-LOT-DEB
              THRU 7160-VERIF2-LOT-FIN
            VARYING WS-NBLOT FROM 1 BY 1
              UNTIL WS-NBLOT > WS-COMPTEURLOT OR WS-NBERREUR = 1.

           IF WS-NBERREUR NOT = 1
           THEN
               MOVE 'C' TO WS-TAFF
               MOVE WS-MSG(11) TO MMSGO
               MOVE MLIBELI TO WS-COMMA-LIBEL
               MOVE MCATEGI TO WS-COMMA-CATEG
               MOVE MAPPROI TO WS-COMMA-APPRO
               MOVE MQTALEI TO WS-COMMA-QTALE
               MOVE DFHPROTI TO MLIBELA MCATEGA
                                MAPPROA MQTALEA
               PERFORM 7130-PROTEGE-LOT-DEB
                  THRU 7130-PROTEGE-LOT-FIN
                VARYING WS-NBLOT FROM 1 BY 1
                  UNTIL WS-NBLOT > 5
               MOVE WS-COMPTEURLOT TO MNLOTO
               MOVE WS-COMPTEURSTOCK TO WS-COMPTEURSTOCK-ED
               MOVE WS-COMPTEURSTOCK-ED TO MQTSTKO
               MOVE -1 TO MCODEL
               PERFORM 6010-AFF-MAPERR-DEB
                  THRU 6010-AFF-MAPERR-FIN
           END-IF.

       4000-TRAITEMENT-SUITE-FIN.
           EXIT.

      *===============================================================*
      *    STRUCTURATION DE LA PARTIE INDEPENDANTE DU PROGRAMME       *
      *---------------------------------------------------------------*
      *   6XXX-  : ORDRES DE MANIPULATION DES FICHIERS                *
      *   7XXX-  : TRANSFERTS ET CALCULS COMPLEXES                    *
      *   8XXX-  : ORDRES DE MANIPULATION DES EDITIONS                *
      *   9XXX-  : FIN DE PROGRAMME                                   *
      *   9999-  : FIN DE PROGRAMME                                   *
      *===============================================================*

      *---------------------------------------------------------------*
      *   6XXX-  : ORDRES DE MANIPULATION DES FICHIERS                *
      *---------------------------------------------------------------*

       6000-AFF-MAP-DEB.

      *NUMERO DE LA TACHE
           MOVE EIBTASKN TO WS-TACHE.
           MOVE WS-TACHE TO MTASKO.

           EXEC CICS SEND MAP('HNSM5M6')
                          MAPSET('HNSN5M6')
                          RESP(WS-RC)
                          CURSOR
                          ERASE
                          FRSET
           END-EXEC.

       6000-AFF-MAP-FIN.
           EXIT.

       6001-AFF-MAPALARM-DEB.

      *NUMERO DE LA TACHE
           MOVE EIBTASKN TO WS-TACHE.
           MOVE WS-TACHE TO MTASKO.

           EXEC CICS SEND MAP('HNSM5M6')
                          MAPSET('HNSN5M6')
                          RESP(WS-RC)
                          CURSOR
                          ERASE
                          ALARM
                          FRSET
           END-EXEC.

       6001-AFF-MAPALARM-FIN.
           EXIT.

       6010-AFF-MAPERR-DEB.

      *NUMERO DE LA TACHE
           MOVE EIBTASKN TO WS-TACHE.
           MOVE WS-TACHE TO MTASKO.

           EXEC CICS SEND MAP('HNSM5M6')
                          MAPSET('HNSN5M6')
                          RESP(WS-RC)
                          CURSOR
                          DATAONLY
                          ALARM
           END-EXEC.

       6010-AFF-MAPERR-FIN.
           EXIT.

       6020-LIRE-MAP-DEB.

           EXEC CICS RECEIVE MAP('HNSM5M6')
                             MAPSET('HNSN5M6')
                             RESP(WS-RC)
           END-EXEC.

       6020-LIRE-MAP-FIN.
           EXIT.

       6100-AFF-AID-DEB.

           EXEC CICS SEND MAP('HNSMHP6')
                          MAPSET('HNSN5M6')
                          RESP(WS-RC)
                          CURSOR
                          ERASE
                          FRSET
           END-EXEC.

       6100-AFF-AID-FIN.
           EXIT.

       6200-LIREART-DEB.

           EXEC CICS READ FILE('ART0513')
                          RIDFLD(MCODEI)
                          INTO(WS-ART-ENR)
                          LENGTH(WS-LENGTH)
                          RESP(WS-RC)
           END-EXEC.

       6200-LIREART-FIN.
           EXIT.

       6210-ECRIREART-DEB.

           EXEC CICS WRITE FILE('ART0513')
                           RIDFLD(MCODEI)
                           FROM(WS-ART-ENR)
                           LENGTH(WS-LENGTH)
                           RESP(WS-RC)
           END-EXEC.

       6210-ECRIREART-FIN.
           EXIT.

       6220-DELETEART-DEB.

           EXEC CICS DELETE FILE('ART0513')
                            RIDFLD(MCODEI)
                            RESP(WS-RC)
           END-EXEC.

       6220-DELETEART-FIN.
           EXIT.

       6300-LIREFOU-DEB.

           EXEC CICS READ FILE('FOURNIS')
                          RIDFLD(WS-RIDFLD)
                          INTO(WS-FOU-ENR)
                          LENGTH(WS-LENGTH)
                          RESP(WS-RC)
                          RRN
           END-EXEC.

       6300-LIREFOU-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *   7XXX-  : TRANSFERTS ET CALCULS COMPLEXES                    *
      *---------------------------------------------------------------*

       7000-INIT-MAP-DEB.

      *DEFINITION DE LA POSITION DU COMPTEUR
           MOVE -1 TO MCODEL.

      ****INITIALISATION DES CHAMPS LOGIQUES****
      *DATE DU JOUR
           EXEC CICS ASKTIME
                     ABSTIME(WS-ABSTIME)
           END-EXEC.

           EXEC CICS FORMATTIME
                     ABSTIME(WS-ABSTIME)
                     DDMMYYYY(MDATEO)
                     DATESEP
           END-EXEC.

      *NUMERO DU TERMINAL
           MOVE EIBTRMID TO MTERMO.

      *CODE TRANSACTION
           MOVE EIBTRNID TO MTRANO.

       7000-INIT-MAP-FIN.
           EXIT.

       7100-SAVEART-DEB.

           MOVE WS-LIBLO(WS-NBLOT) TO WS-COMMA-LIBLO(WS-NBLOT).

           MOVE WS-QTLOT(WS-NBLOT) TO WS-COMMA-QTLOT(WS-NBLOT).

           MOVE WS-PRIXA(WS-NBLOT)  TO WS-COMMA-PRIXA(WS-NBLOT).
           MOVE WS-PRIXB(WS-NBLOT)  TO WS-COMMA-PRIXB(WS-NBLOT).

       7100-SAVEART-FIN.
           EXIT.

       7101-SAVEARTIF-DEB.

           IF WS-LIBLO(WS-NBLOT) NOT = LOW-VALUE
           THEN
               MOVE WS-LIBLO(WS-NBLOT) TO WS-COMMA-LIBLO(WS-NBLOT)
           END-IF.

           IF WS-QTLOT(WS-NBLOT) NOT = LOW-VALUE
           THEN
               MOVE WS-QTLOT(WS-NBLOT) TO WS-COMMA-QTLOT(WS-NBLOT)
           END-IF.

           IF WS-PRIXA(WS-NBLOT) NOT = LOW-VALUE
           THEN
               MOVE WS-PRIXA(WS-NBLOT)  TO WS-COMMA-PRIXA(WS-NBLOT)
           END-IF.
           IF WS-PRIXB(WS-NBLOT) NOT = LOW-VALUE
           THEN
               MOVE WS-PRIXB(WS-NBLOT)  TO WS-COMMA-PRIXB(WS-NBLOT)
           END-IF.

       7101-SAVEARTIF-FIN.
           EXIT.
       7110-RECUPART-DEB.

           MOVE WS-COMMA-LIBLO(WS-NBLOT) TO WS-LIBLO(WS-NBLOT).

           MOVE WS-COMMA-QTLOT(WS-NBLOT) TO WS-QTLOT(WS-NBLOT).

           MOVE WS-COMMA-PRIXA(WS-NBLOT) TO WS-PRIXA(WS-NBLOT).
           MOVE WS-COMMA-PRIXB(WS-NBLOT) TO WS-PRIXB(WS-NBLOT).

       7110-RECUPART-FIN.
           EXIT.

       7120-VERIF-LOT-DEB.

           IF NOT (    (WS-LIBLO(WS-NBLOT) = SPACE OR LOW-VALUE)
                   AND (WS-QTLOT(WS-NBLOT) = SPACE OR LOW-VALUE)
                   AND (WS-PRIXA(WS-NBLOT) = SPACE OR LOW-VALUE)
                   AND (WS-PRIXB(WS-NBLOT) = SPACE OR LOW-VALUE) )
           THEN
               EVALUATE TRUE
               WHEN WS-LIBLO(WS-NBLOT) = SPACE OR LOW-VALUE
                    MOVE -1 TO WS-LIBLOL(WS-NBLOT)
                    MOVE WS-MSG(7) TO MMSGO
                    PERFORM 6010-AFF-MAPERR-DEB
                    THRU 6010-AFF-MAPERR-FIN
                    MOVE 1 TO WS-NBERREUR
               WHEN WS-QTLOT(WS-NBLOT) = SPACE OR LOW-VALUE
                    MOVE -1 TO WS-QTLOTL(WS-NBLOT)
                    MOVE WS-MSG(7) TO MMSGO
                    PERFORM 6010-AFF-MAPERR-DEB
                    THRU 6010-AFF-MAPERR-FIN
                    MOVE 1 TO WS-NBERREUR
               WHEN WS-QTLOT(WS-NBLOT) IS NOT NUMERIC
                    MOVE -1 TO WS-QTLOTL(WS-NBLOT)
                    MOVE WS-MSG(8) TO MMSGO
                    PERFORM 6010-AFF-MAPERR-DEB
                    THRU 6010-AFF-MAPERR-FIN
                    MOVE 1 TO WS-NBERREUR
               WHEN WS-PRIXA(WS-NBLOT) = SPACE OR LOW-VALUE
                    MOVE -1 TO WS-PRIXAL(WS-NBLOT)
                    MOVE WS-MSG(7) TO MMSGO
                    PERFORM 6010-AFF-MAPERR-DEB
                    THRU 6010-AFF-MAPERR-FIN
                    MOVE 1 TO WS-NBERREUR
               WHEN WS-PRIXA(WS-NBLOT) IS NOT NUMERIC
                    MOVE -1 TO WS-PRIXAL(WS-NBLOT)
                    MOVE WS-MSG(8) TO MMSGO
                    PERFORM 6010-AFF-MAPERR-DEB
                    THRU 6010-AFF-MAPERR-FIN
                    MOVE 1 TO WS-NBERREUR
               WHEN WS-PRIXB(WS-NBLOT) = SPACE OR LOW-VALUE
                    MOVE -1 TO WS-PRIXBL(WS-NBLOT)
                    MOVE WS-MSG(7) TO MMSGO
                    PERFORM 6010-AFF-MAPERR-DEB
                    THRU 6010-AFF-MAPERR-FIN
                    MOVE 1 TO WS-NBERREUR
               WHEN WS-PRIXB(WS-NBLOT) IS NOT NUMERIC
                    MOVE -1 TO WS-PRIXBL(WS-NBLOT)
                    MOVE WS-MSG(8) TO MMSGO
                    PERFORM 6010-AFF-MAPERR-DEB
                    THRU 6010-AFF-MAPERR-FIN
                    MOVE 1 TO WS-NBERREUR
               END-EVALUATE
           END-IF.

       7120-VERIF-LOT-FIN.
           EXIT.

       7130-PROTEGE-LOT-DEB.

           MOVE DFHPROTI TO WS-LIBLOA(WS-NBLOT)
                            WS-QTLOTA(WS-NBLOT)
                            WS-PRIXAA(WS-NBLOT)
                            WS-PRIXBA(WS-NBLOT).

           PERFORM 7100-SAVEART-DEB
              THRU 7100-SAVEART-FIN.

       7130-PROTEGE-LOT-FIN.
           EXIT.

       7140-LIBERE-LOT-DEB.

           MOVE DFHUNIMD TO WS-LIBLOA(WS-NBLOT)
                            WS-QTLOTA(WS-NBLOT)
                            WS-PRIXAA(WS-NBLOT)
                            WS-PRIXBA(WS-NBLOT).

       7140-LIBERE-LOT-FIN.
           EXIT.

       7150-COMPTE-LOT-DEB.

           IF WS-LIBLO(WS-NBLOT) NOT = SPACE
           AND WS-LIBLO(WS-NBLOT) NOT = LOW-VALUE
           THEN
               ADD 1 TO WS-COMPTEURLOT
               MOVE WS-QTLOT(WS-NBLOT) TO WS-QTLOTNUM
               ADD WS-QTLOTNUM TO WS-COMPTEURSTOCK
           END-IF.

       7150-COMPTE-LOT-FIN.
           EXIT.

       7160-VERIF2-LOT-DEB.

           IF WS-LIBLO(WS-NBLOT) = SPACE
           OR WS-LIBLO(WS-NBLOT) = LOW-VALUE
           THEN
               MOVE 1 TO WS-NBERREUR
               MOVE 'LOT (POINTE PAR LE CURSEUR) MANQUANT' TO MMSGO
               MOVE -1 TO WS-LIBLOL(WS-NBLOT)
               PERFORM 6010-AFF-MAPERR-DEB
               THRU 6010-AFF-MAPERR-FIN
           END-IF.

       7160-VERIF2-LOT-FIN.
           EXIT.

       7200-RECUPCOMM-DEB.

           IF MLIBELI = LOW-VALUE
           THEN
               MOVE WS-COMMA-LIBEL TO MLIBELI
           END-IF.

           IF MCATEGI = LOW-VALUE
           THEN
               MOVE WS-COMMA-CATEG TO MCATEGI
           END-IF.

           IF MAPPROI = LOW-VALUE
           THEN
               MOVE WS-COMMA-APPRO TO MAPPROI
           END-IF.

           IF MQTALEI = LOW-VALUE
           THEN
               MOVE WS-COMMA-QTALE TO MQTALEI
           END-IF.

           PERFORM 7201-RECUPCOMM2-DEB
              THRU 7201-RECUPCOMM2-FIN
            VARYING WS-NBLOT FROM 1 BY 1
              UNTIL WS-NBLOT > 5.
       7200-RECUPCOMM-FIN.
           EXIT.

       7201-RECUPCOMM2-DEB.

           IF WS-LIBLO(WS-NBLOT) = LOW-VALUE
           THEN
               MOVE WS-COMMA-LIBLO(WS-NBLOT) TO WS-LIBLO(WS-NBLOT)
           END-IF.

           IF WS-QTLOT(WS-NBLOT) = LOW-VALUE
           THEN
               MOVE WS-COMMA-QTLOT(WS-NBLOT) TO WS-QTLOT(WS-NBLOT)
           END-IF.

           IF WS-PRIXA(WS-NBLOT) = LOW-VALUE
           THEN
               MOVE WS-COMMA-PRIXA(WS-NBLOT) TO WS-PRIXA(WS-NBLOT)
           END-IF.
           IF WS-PRIXB(WS-NBLOT) = LOW-VALUE
           THEN
               MOVE WS-COMMA-PRIXB(WS-NBLOT) TO WS-PRIXB(WS-NBLOT)
           END-IF.

       7201-RECUPCOMM2-FIN.
           EXIT.

       7300-INITART-DEB.

           MOVE MCODEI           TO WS-ART-CODE.
           MOVE WS-COMMA-LIBEL   TO WS-ART-LIBEL.
           MOVE WS-COMMA-CATEG   TO WS-ART-CATEG.
           MOVE MFOURI           TO WS-ART-FOU.
           MOVE WS-COMMA-APPRO   TO WS-ART-DELAI.
           MOVE WS-COMMA-QTALE   TO WS-ART-ALERT.

           MOVE 0 TO WS-COMPTEURLOT WS-COMPTEURSTOCK.

           PERFORM 7301-INITLOT-DEB
              THRU 7301-INITLOT-FIN
            VARYING WS-NBLOT FROM 1 BY 1
              UNTIL WS-NBLOT > 5.
           MOVE WS-COMPTEURLOT   TO WS-ART-NB-LOT.
           MOVE WS-COMPTEURSTOCK TO WS-ART-QTE.  .

       7300-INITART-FIN.
           EXIT.

       7301-INITLOT-DEB.

           IF WS-COMMA-LIBLO(WS-NBLOT) NOT = SPACE
           AND WS-COMMA-LIBLO(WS-NBLOT) NOT = LOW-VALUE
           THEN
             ADD 1 TO WS-COMPTEURLOT
             MOVE WS-COMMA-QTLOT(WS-NBLOT) TO WS-QTLOTNUM
             ADD WS-QTLOTNUM TO WS-COMPTEURSTOCK
             MOVE WS-COMMA-LIBLO(WS-NBLOT) TO WS-ART-LOT-NUM(WS-NBLOT)
             MOVE WS-COMMA-QTLOT(WS-NBLOT) TO WS-ART-LOT-QTE(WS-NBLOT)
             MOVE WS-COMMA-PRIXA(WS-NBLOT) TO WS-PRIXANUM
             MOVE WS-COMMA-PRIXB(WS-NBLOT) TO WS-PRIXBNUM
             COMPUTE WS-ART-LOT-PXU(WS-NBLOT) = WS-PRIXANUM
                                    + WS-PRIXBNUM / 100
           END-IF.

       7301-INITLOT-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *   8XXX-  : ORDRES DE MANIPULATION DES EDITIONS                *
      *---------------------------------------------------------------*
      *---------------------------------------------------------------*
      *   9XXX-  : ORDRES DE MANIPULATION DES SOUS-PROGRAMMES         *
      *---------------------------------------------------------------*
      *
      *9000-APPEL-SP-DEB.
      *
      *9000-APPEL-SP-FIN.
      *     EXIT.
      *
      *---------------------------------------------------------------*
      *   9999-  : FIN DE PROGRAMME                                   *
      *---------------------------------------------------------------*

       9999-FIN-RTRANSID-DEB.

            EXEC CICS RETURN
                 TRANSID(EIBTRNID)
                 COMMAREA(WS-COMMAREA)
            END-EXEC.

       9999-FIN-RTRANSID-FIN.
            EXIT.
      *===============================================================*
      *--                INFORMATIONS GENERALES                     --*
      *---------------------------------------------------------------*
      *  NOM DU PROGRAMME : HNSC5M7                                   *
      *  NOM DU REDACTEUR : REVERE ALAIN                              *
      *  SOCIETE          : GFI INFORMATIQUE                          *
      *  DATE DE CREATION : 05/09/2014                                *
      *---------------------------------------------------------------*
      *--               OBJECTIFS GENERAUX DU PROGRAMME             --*
      *---------------------------------------------------------------*
      *                                                               *
      *                                                               *
      *---------------------------------------------------------------*
      *--               HISTORIQUE DES MODIFICATIONS                --*
      *---------------------------------------------------------------*
      * DATE  MODIF   ยง          NATURE DE LA MODIFICATION            *
      *---------------------------------------------------------------*
      *               ยง                                               *
      *===============================================================*

       IDENTIFICATION DIVISION.
       PROGRAM-ID.      HNSC5M7.

      *===============================================================*
      *           NE PAS MODIFIER LA PARTIE ENCADREE DU CODE          *
      *===============================================================*
       ENVIRONMENT DIVISION.
       CONFIGURATION SECTION.
       SPECIAL-NAMES.
      * VIDE
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.
      * VIDE
       DATA DIVISION.
       FILE SECTION.
      * VIDE
      *===============================================================*

      *========================
       WORKING-STORAGE SECTION.
      *========================

      *===============================================================*
      *             COPY - INSERTION DE SEQUENCES DE SOURCE           *
      *===============================================================*
      * TEST DES TOUCHES FONCTION
           COPY DFHAID.
      * MODIFICATION DYNAMIQUE DES ATTRIBUTS DE MAP
           COPY DFHBMSCA.
      * TABLE DES MESSAGES
           COPY TABMSG.
      * MAPSET DU PROGRAMME
           COPY HNSNSUP.
      * DESCRIPTION DES ENREGISTREMENTS DU CLUSTER KSDS ARTICLE
           COPY ARTICLE.
      * DESCRIPTION DES ENREGISTREMENTS DU CLUSTER RRDS FOURNISSEUR
      *    COPY FOURNIS.

      *===============================================================*
      *              ZONES DE TRAVAIL DU PROGRAMME                    *
      *===============================================================*
       01  WS-COMMAREA.
           05  WS-AIG                        PIC 9.
                88  LOOP-MENU                VALUE 0.
                88  LOOP-SPG                 VALUE 1 THRU 6.
           05  WS-TAFF                       PIC X.
                88  INIT-TRT                 VALUE LOW-VALUE.
                88  AFF-MAP                  VALUE 'M'.
                88  AFF-AIDE                 VALUE 'A'.
                88  CONFIRMATION             VALUE 'C'.
           05  FILLER                        PIC X.
           05  WS-CODEARTICLE                PIC X(5).
      * ZONE MODIFIABLE SELON LES BESOINS (TAILLE MAX. = 4094 OCTETS)
           05  FILLER                        PIC X(4093).

      * CODE RETOUR
       01  WS-RC                             PIC S9(4) COMP.

      * DATE DU JOUR
       01  WS-ABSTIME                        PIC S9(15) COMP-3.

      * VARIABLE QUI SERVIRA A MODIFIER LE FORMAT DE LA TACHE
       01  WS-TACHE                          PIC 9(4).
      *TAILLE DE L'ENREGISTREMENT READ
       01  WS-LENGTH                         PIC S9(4) COMP VALUE 139.

       LINKAGE SECTION.
       01  DFHCOMMAREA                       PIC X(4096).

      *                  ==============================               *
      *=================<    PROCEDURE      DIVISION   >==============*
      *                  ==============================               *

       PROCEDURE DIVISION.

      *===============================================================*
      *    STRUCTURATION DE LA PARTIE ALGORITHMIQUE DU PROGRAMME      *
      *---------------------------------------------------------------*
      *    1 : LES COMPOSANTS DU DIAGRAMME SONT CODES A L'AIDE DE     *
      *        DEUX PARAGRAPHES  XXXX-COMPOSANT-DEB                   *
      *                          XXYY-COMPOSANR-FIN                   *
      *    2 : XX REPRESENTE LE NIVEAU HIERARCHIQUE                   *
      *        YY DIFFERENCIE LES COMPOSANTS DE MEME NIVEAU           *
      *    3 : TOUT COMPOSANT EST PRECEDE D'UN CARTOUCHE DE           *
      *        COMMENTAIRE QUI EXPLICITE LE ROLE DU COMPOSANT         *
      *===============================================================*


      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT PROGRAMME              *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       0000-PROGRAMME-DEB.

           MOVE DFHCOMMAREA TO WS-COMMAREA.

       0000-PROGRAMME-COR.

           IF WS-AIG NOT = 6
           THEN
               PERFORM 1000-INITIALISATION-DEB
                  THRU 1000-INITIALISATION-FIN
           ELSE
               PERFORM 1010-TEST-LOOP-DEB
                  THRU 1010-TEST-LOOP-FIN
           END-IF.

       0000-PROGRAMME-FIN.

           PERFORM 9999-FIN-RTRANSID-DEB
              THRU 9999-FIN-RTRANSID-FIN.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT INITIALISATION         *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       1000-INITIALISATION-DEB.

      *REMISE A ZERO BINAIRE DE LA MAP LOGIQUE
           MOVE LOW-VALUE TO HNSMSUPO.

           IF WS-TAFF='Z'
           THEN
               MOVE 'C' TO WS-TAFF
               MOVE DFHPROTI TO MCODEA
               MOVE WS-CODEARTICLE TO MCODEO
               MOVE WS-MSG(29) TO MMSGO
           ELSE
               MOVE WS-MSG(3) TO MMSGO
               MOVE LOW-VALUE TO WS-CODEARTICLE
               MOVE 'M' TO WS-TAFF
           END-IF

      *ON INITIALISE LES CHAMPS ET ON AFFICHE LA MAP
           PERFORM 9000-INIT-AFF-MAP-DEB
              THRU 9000-INIT-AFF-MAP-FIN.

       1000-INITIALISATION-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT TEST-LOOP              *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       1010-TEST-LOOP-DEB.
           EXIT.

       1010-TEST-LOOP-COR.

           EVALUATE TRUE
           WHEN AFF-AIDE     PERFORM 2000-LOOP-AIDE-DEB
                                THRU 2000-LOOP-AIDE-FIN
           WHEN CONFIRMATION PERFORM 2010-LOOP-CONFIRMATION-DEB
                                THRU 2010-LOOP-CONFIRMATION-FIN
           WHEN OTHER        PERFORM 2020-ETUDEACTION-DEB
                                THRU 2020-ETUDEACTION-FIN
           END-EVALUATE.

       1010-TEST-LOOP-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT TEST-LOOP              *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       2000-LOOP-AIDE-DEB.

           IF WS-CODEARTICLE NOT = LOW-VALUE
           THEN
               MOVE WS-CODEARTICLE TO MCODEO
           ELSE
               MOVE WS-MSG(3) TO MMSGO
           END-IF.

           MOVE 'M' TO WS-TAFF.

      *ON AFFICHE LA MAP
           PERFORM 9000-INIT-AFF-MAP-DEB
              THRU 9000-INIT-AFF-MAP-FIN.

       2000-LOOP-AIDE-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT LOOP-CONFIRMATION      *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       2010-LOOP-CONFIRMATION-DEB.

      *ON RECUPERE LE CONTENU DE LA MAP LOGIQUE
           PERFORM 6020-LIRE-MAP-DEB
              THRU 6020-LIRE-MAP-FIN.

       2010-LOOP-CONFIRMATION-COR.

           EVALUATE EIBAID
           WHEN DFHENTER PERFORM 3000-DELETE-DEB
                            THRU 3000-DELETE-FIN
           WHEN DFHPF3   PERFORM 3010-CANCELDELETE-DEB
                            THRU 3010-CANCELDELETE-FIN
           WHEN DFHCLEAR PERFORM 3020-CLEAR-DELETE-DEB
                            THRU 3020-CLEAR-DELETE-FIN
           WHEN OTHER    PERFORM 3030-DELETEERREURPF-DEB
                            THRU 3030-DELETEERREURPF-FIN
           END-EVALUATE.

       2010-LOOP-CONFIRMATION-FIN.
           EXIT.

       2020-ETUDEACTION-DEB.

      *ON RECUPERE LE CONTENU DE LA MAP LOGIQUE
           PERFORM 6020-LIRE-MAP-DEB
              THRU 6020-LIRE-MAP-FIN.

       2020-ETUDEACTION-COR.

      *ON REGARDE L'ACTION QUE VIENT D'EFFECTUER L'UTILISATEUR
           EVALUATE EIBAID
           WHEN DFHENTER PERFORM 3040-TRAITEMENT-DEB
                            THRU 3040-TRAITEMENT-FIN
           WHEN DFHPF1   PERFORM 3050-AIDE-DEB
                            THRU 3050-AIDE-FIN
           WHEN DFHCLEAR PERFORM 3060-TRT-CLEAR-DEB
                            THRU 3060-TRT-CLEAR-FIN
           WHEN OTHER    PERFORM 3070-TRT-PFERROR-DEB
                            THRU 3070-TRT-PFERROR-FIN
           END-EVALUATE.

       2020-ETUDEACTION-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT DELETE                 *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       3000-DELETE-DEB.

           PERFORM 6210-DELETEART-DEB
              THRU 6210-DELETEART-FIN.

           MOVE 'M' TO WS-TAFF.

           MOVE DFHUNIMD TO MCODEA.

           MOVE WS-MSG(30) TO MMSGO.

           MOVE SPACE TO MCODEO.

           MOVE -1 TO MCODEL.

           PERFORM 6030-AFF-MAPSERR-DEB
              THRU 6030-AFF-MAPSERR-FIN.

       3000-DELETE-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT CANCELDELETE           *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       3010-CANCELDELETE-DEB.

           MOVE 'M' TO WS-TAFF.

           MOVE DFHUNIMD TO MCODEA.

           MOVE WS-MSG(31) TO MMSGO.

           MOVE SPACE TO MCODEO.

           MOVE -1 TO MCODEL.

           PERFORM 6030-AFF-MAPSERR-DEB
              THRU 6030-AFF-MAPSERR-FIN.

       3010-CANCELDELETE-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT CLEAR-DELETE           *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       3020-CLEAR-DELETE-DEB.

      *DEFINITION DE LA POSITION DU COMPTEUR
           MOVE -1 TO MCODEL.

           MOVE DFHPROTI TO MCODEA.

      ****INITIALISATION DES CHAMPS LOGIQUES****
      *DATE DU JOUR
           EXEC CICS ASKTIME
                     ABSTIME(WS-ABSTIME)
           END-EXEC.

           EXEC CICS FORMATTIME
                     ABSTIME(WS-ABSTIME)
                     DDMMYYYY(MDATEO)
                     DATESEP
           END-EXEC.

      *NUMERO DU TERMINAL
           MOVE EIBTRMID TO MTERMO.

      *CODE TRANSACTION
           MOVE EIBTRNID TO MTRANO.

           MOVE WS-MSG(45) TO MMSGO.

           MOVE WS-CODEARTICLE TO MCODEO.

      *AFFICHAGE DE LA MAP
           PERFORM 6040-AFF-MAPALARM-DEB
              THRU 6040-AFF-MAPALARM-FIN.

       3020-CLEAR-DELETE-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT DELETEERREURPF         *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       3030-DELETEERREURPF-DEB.

           MOVE -1 TO MCODEL.

           MOVE WS-MSG(45) TO MMSGO.

           PERFORM 6010-AFF-MAPERR-DEB
              THRU 6010-AFF-MAPERR-FIN.

       3030-DELETEERREURPF-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT ETUDEACTION            *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       3040-TRAITEMENT-DEB.

      *ON SAUVEGARDE LE CODE ARTICLE DANS LA COMMAREA POUR POUVOIR LE
      *RECUPERER AU RETOUR APRES UNE AIDE
           MOVE MCODEI TO WS-CODEARTICLE.

       3040-TRAITEMENT-COR.

           IF WS-CODEARTICLE = LOW-VALUE
           THEN
               PERFORM 4000-AUCUNEVALEUR-DEB
                  THRU 4000-AUCUNEVALEUR-FIN
           ELSE
               PERFORM 4010-CODERENSEIGNE-DEB
                  THRU 4010-CODERENSEIGNE-FIN
           END-IF.

       3040-TRAITEMENT-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT AIDE                   *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       3050-AIDE-DEB.

           MOVE 'A' TO WS-TAFF.

           PERFORM 6100-AFF-AID-DEB
              THRU 6100-AFF-AID-FIN.

       3050-AIDE-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT TRT-CLEAR              *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       3060-TRT-CLEAR-DEB.

      *ON RENSEIGNE LE MESSAGE D'ERREUR
           MOVE WS-MSG(2) TO MMSGO.

      *ON INITIALISE LES CHAMPS ET ON AFFICHE LA MAP
           PERFORM 9000-INIT-AFF-MAP-DEB
              THRU 9000-INIT-AFF-MAP-FIN.

       3060-TRT-CLEAR-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT TRT-PFERROR            *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       3070-TRT-PFERROR-DEB.

      *ON RENSEIGNE LE MESSAGE D'ERREUR
           MOVE WS-MSG(1) TO MMSGO.

      *ON PLACE LE CURSEUR AU BON ENDROIT
           MOVE -1 TO MCODEL.

           PERFORM 6010-AFF-MAPERR-DEB
              THRU 6010-AFF-MAPERR-FIN.

       3070-TRT-PFERROR-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT AUCUNEVALEUR           *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       4000-AUCUNEVALEUR-DEB.

      *ON RENSEIGNE LE MESSAGE D'ERREUR
           MOVE WS-MSG(6) TO MMSGO.

      *ON PLACE LE CURSEUR AU BON ENDROIT
           MOVE -1 TO MCODEL.

           PERFORM 6010-AFF-MAPERR-DEB
              THRU 6010-AFF-MAPERR-FIN.

       4000-AUCUNEVALEUR-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT CODERENSEIGNE          *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       4010-CODERENSEIGNE-DEB.

           PERFORM 6200-LIREART-DEB
              THRU 6200-LIREART-FIN.

       4010-CODERENSEIGNE-COR.

           IF WS-RC NOT = DFHRESP(NOTFND)
           THEN
               PERFORM 5000-CODETROUVE-DEB
                  THRU 5000-CODETROUVE-FIN
           ELSE
               PERFORM 5010-CODEINEXISTANT-DEB
                  THRU 5010-CODEINEXISTANT-FIN
           END-IF.

       4010-CODERENSEIGNE-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT CODETROUVE             *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       5000-CODETROUVE-DEB.

           MOVE -1 TO MCODEL.

           MOVE 'C' TO WS-TAFF.

           MOVE DFHPROTI TO MCODEA.

           MOVE WS-MSG(29) TO MMSGO.

           PERFORM 6030-AFF-MAPSERR-DEB
              THRU 6030-AFF-MAPSERR-FIN.

       5000-CODETROUVE-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT CODEINEXISTANT         *
      *---------------------------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*

       5010-CODEINEXISTANT-DEB.

      *ON RENSEIGNE LE MESSAGE D'ERREUR
           MOVE WS-MSG(28) TO MMSGO.

      *ON PLACE LE CURSEUR AU BON ENDROIT
           MOVE -1 TO MCODEL.

           PERFORM 6010-AFF-MAPERR-DEB
              THRU 6010-AFF-MAPERR-FIN.

       5010-CODEINEXISTANT-FIN.
           EXIT.

      *===============================================================*
      *    STRUCTURATION DE LA PARTIE INDEPENDANTE DU PROGRAMME       *
      *---------------------------------------------------------------*
      *   6XXX-  : ORDRES DE MANIPULATION DES FICHIERS                *
      *   7XXX-  : TRANSFERTS ET CALCULS COMPLEXES                    *
      *   8XXX-  : ORDRES DE MANIPULATION DES EDITIONS                *
      *   9XXX-  : FIN DE PROGRAMME                                   *
      *   9999-  : FIN DE PROGRAMME                                   *
      *===============================================================*

      *---------------------------------------------------------------*
      *   6XXX-  : ORDRES DE MANIPULATION DES FICHIERS                *
      *---------------------------------------------------------------*

       6000-AFF-MAP-DEB.

      *NUMERO DE LA TACHE
           MOVE EIBTASKN TO WS-TACHE.
           MOVE WS-TACHE TO MTASKO.

           EXEC CICS SEND MAP('HNSMSUP')
                          MAPSET('HNSNSUP')
                          RESP(WS-RC)
                          CURSOR
                          ERASE
                          FRSET
           END-EXEC.

       6000-AFF-MAP-FIN.
           EXIT.

       6010-AFF-MAPERR-DEB.

      *NUMERO DE LA TACHE
           MOVE EIBTASKN TO WS-TACHE.
           MOVE WS-TACHE TO MTASKO.

           EXEC CICS SEND MAP('HNSMSUP')
                          MAPSET('HNSNSUP')
                          RESP(WS-RC)
                          CURSOR
                          DATAONLY
                          ALARM
           END-EXEC.

       6010-AFF-MAPERR-FIN.
           EXIT.

       6020-LIRE-MAP-DEB.

           EXEC CICS RECEIVE MAP('HNSMSUP')
                             MAPSET('HNSNSUP')
                             RESP(WS-RC)
           END-EXEC.

       6020-LIRE-MAP-FIN.
           EXIT.

       6030-AFF-MAPSERR-DEB.

      *NUMERO DE LA TACHE
           MOVE EIBTASKN TO WS-TACHE.
           MOVE WS-TACHE TO MTASKO.

           EXEC CICS SEND MAP('HNSMSUP')
                          MAPSET('HNSNSUP')
                          RESP(WS-RC)
                          CURSOR
                          DATAONLY
           END-EXEC.

       6030-AFF-MAPSERR-FIN.
           EXIT.

       6040-AFF-MAPALARM-DEB.

      *NUMERO DE LA TACHE
           MOVE EIBTASKN TO WS-TACHE.
           MOVE WS-TACHE TO MTASKO.

           EXEC CICS SEND MAP('HNSMSUP')
                          MAPSET('HNSNSUP')
                          RESP(WS-RC)
                          CURSOR
                          ERASE
                          ALARM
                          FRSET
           END-EXEC.

       6040-AFF-MAPALARM-FIN.
           EXIT.
       6100-AFF-AID-DEB.

           EXEC CICS SEND MAP('HNSMHP7')
                          MAPSET('HNSNSUP')
                          RESP(WS-RC)
                          CURSOR
                          ERASE
                          FRSET
           END-EXEC.

       6100-AFF-AID-FIN.
           EXIT.

       6200-LIREART-DEB.

           EXEC CICS READ FILE('ART0513')
                          RIDFLD(WS-CODEARTICLE)
                          INTO(WS-ART-ENR)
                          LENGTH(WS-LENGTH)
                          RESP(WS-RC)
           END-EXEC.

       6200-LIREART-FIN.
           EXIT.

       6210-DELETEART-DEB.

           EXEC CICS DELETE FILE('ART0513')
                            RIDFLD(WS-CODEARTICLE)
                            RESP(WS-RC)
           END-EXEC.

       6210-DELETEART-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *   7XXX-  : TRANSFERTS ET CALCULS COMPLEXES                    *
      *---------------------------------------------------------------*
      *
      *7000-ORDRE-CALCUL-DEB.
      *
      *7000-ORDRE-CALCUL-FIN.
      *     EXIT.
      *
      *---------------------------------------------------------------*
      *   8XXX-  : ORDRES DE MANIPULATION DES EDITIONS                *
      *---------------------------------------------------------------*
      *---------------------------------------------------------------*
      *   9XXX-  : ORDRES DE MANIPULATION DES SOUS-PROGRAMMES         *
      *---------------------------------------------------------------*

       9000-INIT-AFF-MAP-DEB.

      *ON SE TROUVE DANS LE SOUS-PROGRAMME 6
           MOVE 6 TO WS-AIG.

      *DEFINITION DE LA POSITION DU COMPTEUR
           MOVE -1 TO MCODEL.

      ****INITIALISATION DES CHAMPS LOGIQUES****
      *DATE DU JOUR
           EXEC CICS ASKTIME
                     ABSTIME(WS-ABSTIME)
           END-EXEC.

           EXEC CICS FORMATTIME
                     ABSTIME(WS-ABSTIME)
                     DDMMYYYY(MDATEO)
                     DATESEP
           END-EXEC.

      *NUMERO DU TERMINAL
           MOVE EIBTRMID TO MTERMO.

      *CODE TRANSACTION
           MOVE EIBTRNID TO MTRANO.

      *AFFICHAGE DE LA MAP
           PERFORM 6000-AFF-MAP-DEB
              THRU 6000-AFF-MAP-FIN.

       9000-INIT-AFF-MAP-FIN.
           EXIT.
      *---------------------------------------------------------------*
      *   9999-  : FIN DE PROGRAMME                                   *
      *---------------------------------------------------------------*

       9999-FIN-RTRANSID-DEB.

            EXEC CICS RETURN
                 TRANSID(EIBTRNID)
                 COMMAREA(WS-COMMAREA)
            END-EXEC.

       9999-FIN-RTRANSID-FIN.
            EXIT.
      *===============================================================*
      *--                INFORMATIONS GENERALES                     --*
      *---------------------------------------------------------------*
      *  TP CICS <-- LISTE DES COMPTE -->                             *
      *  PROGRAMME   : HNSE5M1                                        *
      *  TRANSACTION : E131                                           *
      *  MAP         : HNGNMP5                                        *
      *  MAPSET      : HNGNMP5                                        *
      *  TABLE DB2   : TCLIENT                                        *
      *===============================================================*

       IDENTIFICATION DIVISION.
       PROGRAM-ID.      HNSE5M1.

       ENVIRONMENT DIVISION.
       CONFIGURATION SECTION.
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.


       DATA DIVISION.
       FILE SECTION.

       WORKING-STORAGE SECTION.

      * COPY MAP
      ******************************************************************
           COPY HNGNMP5.

      * RE-DEFINITION DE LA MAP EN UN TABLEAU
      ******************************************************************
       01  WS-MAP-REDEF REDEFINES HNGNMP5O.
           05  FILLER             PIC X(48).
           05  WS-TAB-MAP.
               10  WS-TAB-LIGNE OCCURS 10.
                   15  FILLER         PIC X(3).
                   15  FILLER         PIC X(4).
                   15  WS-TAB-COMPTE  PIC X(6).
                   15  FILLER         PIC X(5).
                   15  WS-TAB-NOM     PIC X(24).
                   15  FILLER         PIC X(3).
                   15  WS-TAB-VILLE   PIC X(24).
                   15  FILLER         PIC X(6).
                   15  WS-TAB-PCREM   PIC 9(2).
                   15  FILLER         PIC X(5).
           05  FILLER             PIC X(68).
       01  WS-INDICE-TAB          PIC S9(4) COMP.
       01  WS-LIGNE.
           05  FILLER             PIC X(3)    VALUE LOW-VALUE.
           05  FILLER             PIC X(79)   VALUE      '*   ......   *
      -     ' ........................ * ........................ *    .
      -     '.    *'.

      * COPY DU FICHIER VSAM 'COMPTE'
      ******************************************************************
           COPY COPYCPTS.

      * COPY INTERNES CICS
      ******************************************************************
           COPY DFHAID.
           COPY DFHBMSCA.

      * DESCRIPTION DE LA COMMAREA
      ******************************************************************
       01  FILLER PIC X(11) VALUE 'WS-COMMAREA'.
       01  WS-COMMAREA.
           05  WS-COM-PAGE              PIC S9(4) COMP.
           05  WS-COM-PAGE-MAX          PIC S9(4) COMP.

      * DONNEES DIVERSES
      ******************************************************************

       01  WS-RC-MAP                    PIC S9(8) COMP.
       01  WS-RC-QTS                    PIC S9(8) COMP.
       01  WS-MAP                       PIC X(8) VALUE 'HNGNMP5'.
       01  WS-MAPSET                    PIC X(8) VALUE 'HNGNMP5'.
       01  WS-TRANS                     PIC X(4) VALUE 'E131'.
       01  WS-MESSAGE-TXT               PIC X(80).

       01  WS-ABSTIME                   PIC S9(15) COMP-3.
       01  WS-TIME                      PIC X(8).
       01  WS-DATE8                     PIC X(10).
       01  WS-ID-TS.
           05  WS-ID-TRANS              PIC X(4) VALUE 'E131'.
           05  WS-ID-TERM               PIC X(4).
       01  WS-ITEM                      PIC S9(4) COMP.
       01  WS-MAXITEM                   PIC S9(4) COMP.
       01  WS-SQLCODE                   PIC +ZZZ9.
       01  WS-SQLID                     PIC X(8).
       01  WS-SQLERRD                   PIC ZZ9.

      * DECLARATIONS DB2
      ******************************************************************

           EXEC SQL INCLUDE SQLCA       END-EXEC.

           EXEC SQL INCLUDE TCLIENT     END-EXEC.

      *  CURSEUR TCLIENT
      ******************************************************************

            EXEC SQL DECLARE CURTCLIENT CURSOR FOR
                SELECT CDNUMCLI,
                       LBNOMCLI,
                       LBVILCLI,
                       PCREMCLI
                FROM TCLIENT
            END-EXEC.

       LINKAGE SECTION.
FRD   ************************************************************
FRD   * AVIEZ-VOUS REMARQUรฉ CETTE ERREUR DANS L'EXEMPLE COMMENTรฉ *
FRD   ************************************************************
FRD    01  DFHCOMMAREA                  PIC X(4).
FRD   *01  DFHCOMMAREA                  PIC X(2).


       PROCEDURE DIVISION.

       0000-PROGRAMME-DEB.

            MOVE EIBTRMID TO WS-ID-TERM.

      * TEST SI TRANSMISSION DE LA COMMAREA
      ******************************************************************
            IF EIBCALEN > 0
               MOVE DFHCOMMAREA TO WS-COMMAREA
            END-IF.

            PERFORM 7000-ASKTIME-DEB
               THRU 7000-ASKTIME-FIN.

      * TEST SUR LA TRANSACTION APPELANTE
      ******************************************************************
            EVALUATE  EIBCALEN
               WHEN 0
                  PERFORM 1000-PASSAGE1-DEB
                     THRU 1000-PASSAGE1-FIN
               WHEN NOT 0
                  PERFORM 1010-PASSAGEN-DEB
                     THRU 1010-PASSAGEN-FIN
              END-EVALUATE.
       0000-PROGRAMME-FIN.
            EXIT.

      * 1ER PASSAGE :INIT ET AFFICHAGE DE LA MAP
      *         SAUVEGARDE EN QTS DU FICHIER
      ******************************************************************
       1000-PASSAGE1-DEB.
FRD   ************************************************************
FRD   * AVIEZ-VOUS REMARQUรฉ CETTE ERREUR DANS L'EXEMPLE COMMENTรฉ *
FRD   ************************************************************
FRD         MOVE ZERO TO WS-COM-PAGE-MAX.
LC          MOVE 1 TO WS-COM-PAGE.
            PERFORM 6040-DELETE-QTS-DEB
               THRU 6040-DELETE-QTS-FIN.
            PERFORM 6030-OPEN-TCLIENT-DEB
               THRU 6030-OPEN-TCLIENT-FIN.
            PERFORM 6000-FETCH-TCLIENT-DEB
               THRU 6000-FETCH-TCLIENT-FIN.
            PERFORM 2000-REMPLISSAGE-QTS-DEB
               THRU 2000-REMPLISSAGE-QTS-FIN
              UNTIL SQLCODE = +100.

            MOVE LOW-VALUE TO HNGNMP5O.
            MOVE 1 TO WS-ITEM.
            MOVE WS-ID-TERM  TO TERMO.
            MOVE WS-ID-TRANS TO TRANSO.
            MOVE WS-DATE8    TO DATEO.

            EXEC SQL
                 SELECT CURRENT SQLID INTO :WS-SQLID
                 FROM SYSIBM.SYSDUMMY1
            END-EXEC.
            MOVE WS-SQLID    TO HEUREO.

            PERFORM 6010-LECTURE-QTS-DEB
               THRU 6010-LECTURE-QTS-FIN.

            PERFORM 8000-SEND-MAP-ERASE-DEB
               THRU 8000-SEND-MAP-ERASE-FIN.
            PERFORM 8060-RETURN-TRANSID-DEB
               THRU 8060-RETURN-TRANSID-FIN.
       1000-PASSAGE1-FIN.
            EXIT.

      * NEME PASSAGE : TEST DE LA TOUCHE FONCTION
      *         CLEAR : FIN DE TRANSACTION
      *         PF7   : GESTION DE LA PAGE PRECEDENTE
      *         PF8   : GESTION DE LA PAGE SUIVANTE
      *         AUTRE TOUCHE FONCTION
      ******************************************************************
       1010-PASSAGEN-DEB.
            MOVE LOW-VALUE TO HNGNMP5O.
            EVALUATE EIBAID
               WHEN DFHCLEAR
                  PERFORM 2010-CLEAR-DEB
                     THRU 2010-CLEAR-FIN
               WHEN DFHPF7
                  PERFORM 2040-PAGE-PRECEDENTE-DEB
                     THRU 2040-PAGE-PRECEDENTE-FIN
               WHEN DFHPF8
                  PERFORM 2050-PAGE-SUIVANTE-DEB
                     THRU 2050-PAGE-SUIVANTE-FIN
               WHEN OTHER
                  PERFORM 2080-AUTRES-TOUCHES-DEB
                     THRU 2080-AUTRES-TOUCHES-FIN
              END-EVALUATE.
            MOVE WS-DATE8    TO DATEO.

            EXEC SQL
                 SELECT CURRENT SQLID INTO :WS-SQLID
                 FROM SYSIBM.SYSDUMMY1
            END-EXEC.
            MOVE WS-SQLID    TO HEUREO.

            MOVE WS-ID-TERM  TO TERMO.
            MOVE WS-ID-TRANS TO TRANSO.
            PERFORM 8020-SEND-MAP-DATA-DEB
               THRU 8020-SEND-MAP-DATA-FIN.
            PERFORM 8060-RETURN-TRANSID-DEB
               THRU 8060-RETURN-TRANSID-FIN.
       1010-PASSAGEN-FIN.
            EXIT.

      * ERREUR DE TRANSACTION
      ******************************************************************
       1020-ERREUR-TRANS-DEB.
            MOVE 'CODE TRANSACTION INCONNU' TO WS-MESSAGE-TXT.
            PERFORM 8030-SEND-TEXT-DEB
               THRU 8030-SEND-TEXT-FIN.
       1020-ERREUR-TRANS-FIN.
            EXIT.

      * REMPLISSAGE DE LA QTS
      *     INIT DE TOUTES LES LIGNES
      *     FETCH DU CURSEUR TCLIENT
      *     REMPLISSAGE DES LIGNES
      *     ECRITURE DE LA QTS (LES 10 LIGNES DE LA MAP)
      ******************************************************************
       2000-REMPLISSAGE-QTS-DEB.
            PERFORM VARYING WS-INDICE-TAB FROM 1 BY 1
                      UNTIL WS-INDICE-TAB > 10
               MOVE WS-LIGNE TO WS-TAB-LIGNE(WS-INDICE-TAB)
            END-PERFORM.

            PERFORM VARYING WS-INDICE-TAB FROM 1 BY 1
                      UNTIL SQLCODE = +100
                         OR WS-INDICE-TAB > 10
               MOVE CDNUMCLI TO WS-TAB-COMPTE(WS-INDICE-TAB)
               MOVE LBNOMCLI TO WS-TAB-NOM(WS-INDICE-TAB)
               MOVE LBVILCLI TO WS-TAB-VILLE(WS-INDICE-TAB)
               MOVE PCREMCLI TO WS-TAB-PCREM(WS-INDICE-TAB)
               PERFORM 6000-FETCH-TCLIENT-DEB
                  THRU 6000-FETCH-TCLIENT-FIN
            END-PERFORM.
            PERFORM 6020-ECRITURE-QTS-DEB
               THRU 6020-ECRITURE-QTS-FIN.
       2000-REMPLISSAGE-QTS-FIN.
            EXIT.

      * TOUCHE CLEAR : FIN DE TRANSACTION
      ******************************************************************
       2010-CLEAR-DEB.
            EXEC SQL
                 DELETE FROM TCLIENT
                 WHERE CDNUMCLI NOT IN
                      (SELECT CDNUMCLI FROM TCOMMAN)
            END-EXEC.

            IF SQLCODE NOT = +0
                  MOVE SQLCODE TO WS-SQLCODE
                  STRING 'ERR. DELETE CLIENT, SQLCODE = ' DELIMITED BY
                                                          SIZE
                         WS-SQLCODE DELIMITED BY SIZE
                         ' & SQLERRMC = ' DELIMITED BY SIZE
                         SQLERRMC DELIMITED BY SIZE
                         INTO WS-MESSAGE-TXT
               PERFORM 8030-SEND-TEXT-DEB
                  THRU 8030-SEND-TEXT-FIN
            END-IF.
            MOVE SQLERRD(3) TO WS-SQLERRD.
            STRING 'FIN DE TRANSACTION, ' DELIMITED BY SIZE
                   WS-SQLERRD DELIMITED BY SIZE
                   ' TRANSACTIONS SUPPRIMEES' DELIMITED BY SIZE
                   INTO WS-MESSAGE-TXT.
            EXEC CICS
                 SYNCPOINT
            END-EXEC.
            PERFORM 8030-SEND-TEXT-DEB
               THRU 8030-SEND-TEXT-FIN.
       2010-CLEAR-FIN.
            EXIT.

      * TOUCHE PF7 : RETOUR AU MENU
      ******************************************************************
       2040-PAGE-PRECEDENTE-DEB.
            IF WS-COM-PAGE > 1
               SUBTRACT 1 FROM WS-COM-PAGE
               MOVE WS-COM-PAGE TO WS-ITEM
               PERFORM 6010-LECTURE-QTS-DEB
                  THRU 6010-LECTURE-QTS-FIN
               MOVE ALL '.' TO MESSAGEO
            ELSE
               MOVE 'VOUS ETES SUR LA 1ERE PAGE' TO MESSAGEO
            END-IF.

       2040-PAGE-PRECEDENTE-FIN.
            EXIT.

      * TOUCHE PF8 : PAGE SUIVANTE
      ******************************************************************
       2050-PAGE-SUIVANTE-DEB.
            IF WS-COM-PAGE  < WS-COM-PAGE-MAX
               ADD 1 TO WS-COM-PAGE
               MOVE WS-COM-PAGE TO WS-ITEM
               PERFORM 6010-LECTURE-QTS-DEB
                  THRU 6010-LECTURE-QTS-FIN
               MOVE ALL '.' TO MESSAGEO
            ELSE
               MOVE 'VOUS ETES SUR LA DERNIERE PAGE' TO MESSAGEO
            END-IF.
       2050-PAGE-SUIVANTE-FIN.
            EXIT.

      * TOUCHE INVALIDE
      ******************************************************************
       2080-AUTRES-TOUCHES-DEB.
            MOVE 'TOUCHE FONCTION INVALIDE' TO MESSAGEO.
       2080-AUTRES-TOUCHES-FIN.
            EXIT.

      * FETCH DE LA TABLE TCLIENT
      ******************************************************************
       6000-FETCH-TCLIENT-DEB.
            EXEC SQL FETCH CURTCLIENT
                     INTO :CDNUMCLI,
                          :LBNOMCLI,
                          :LBVILCLI,
                          :PCREMCLI
            END-EXEC.

            EVALUATE SQLCODE
               WHEN +0
               WHEN +100
                  CONTINUE
               WHEN OTHER
                  MOVE SQLCODE TO WS-SQLCODE
                  STRING 'ERR. FETCH TCLIENT, SQLCODE = ' DELIMITED BY
                                                          SIZE
                         WS-SQLCODE DELIMITED BY SIZE
                         ' & SQLERRMC = ' DELIMITED BY SIZE
                         SQLERRMC DELIMITED BY SIZE
                         INTO WS-MESSAGE-TXT
                  PERFORM 8030-SEND-TEXT-DEB
                     THRU 8030-SEND-TEXT-FIN
            END-EVALUATE.
       6000-FETCH-TCLIENT-FIN.
            EXIT.

      * LECTURE DANS LA QTS
      ******************************************************************
       6010-LECTURE-QTS-DEB.
            EXEC CICS READQ TS QUEUE (WS-ID-TS)
                               INTO  (WS-TAB-MAP)
                               ITEM  (WS-ITEM)
                               RESP  (WS-RC-QTS)
            END-EXEC.
            IF WS-RC-QTS NOT = DFHRESP(NORMAL)
                  MOVE 'ERR. LECTURE QTS' TO WS-MESSAGE-TXT
               PERFORM 8030-SEND-TEXT-DEB
                  THRU 8030-SEND-TEXT-FIN
            END-IF.
       6010-LECTURE-QTS-FIN.
            EXIT.

      * ECRITURE DANS LA QTS
      ******************************************************************
       6020-ECRITURE-QTS-DEB.
            EXEC CICS WRITEQ TS QUEUE     (WS-ID-TS)
                                FROM      (WS-TAB-MAP)
                                AUXILIARY
                                NUMITEMS  (WS-MAXITEM)
                                NOSUSPEND
                                RESP      (WS-RC-QTS)
            END-EXEC.
            IF WS-RC-QTS NOT = DFHRESP(NORMAL)
                  MOVE 'ERR. ECRITURE QTS' TO WS-MESSAGE-TXT
               PERFORM 8030-SEND-TEXT-DEB
                  THRU 8030-SEND-TEXT-FIN
            END-IF.
      ************************************************************
      * AVIEZ-VOUS REMARQUรฉ CETTE ERREUR DANS L'EXEMPLE COMMENTรฉ *
      ************************************************************
FRD         ADD 1 TO WS-COM-PAGE-MAX.
       6020-ECRITURE-QTS-FIN.
            EXIT.

      * OPEN DU CURSEUR TCLIENT
      ******************************************************************
       6030-OPEN-TCLIENT-DEB.
            EXEC SQL  OPEN CURTCLIENT
            END-EXEC.
            IF SQLCODE NOT = +0
                  MOVE SQLCODE TO WS-SQLCODE
                  STRING 'ERR. OPEN TCLIENT, SQLCODE = ' DELIMITED BY
                                                          SIZE
                         WS-SQLCODE DELIMITED BY SIZE
                         ' & SQLERRMC = ' DELIMITED BY SIZE
                         SQLERRMC DELIMITED BY SIZE
                         INTO WS-MESSAGE-TXT
               PERFORM 8030-SEND-TEXT-DEB
                  THRU 8030-SEND-TEXT-FIN
            END-IF.
       6030-OPEN-TCLIENT-FIN.
            EXIT.

      * SUPPRESSION DE LA QTS
      ******************************************************************
       6040-DELETE-QTS-DEB.
            EXEC CICS DELETEQ TS QUEUE     (WS-ID-TS)
                                 RESP      (WS-RC-QTS)
            END-EXEC.
            IF WS-RC-QTS NOT = DFHRESP(NORMAL) AND NOT = DFHRESP(QIDERR)
               MOVE 'ERR. SUPPRESSION QTS' TO WS-MESSAGE-TXT
               PERFORM 8030-SEND-TEXT-DEB
                  THRU 8030-SEND-TEXT-FIN
            END-IF.
       6040-DELETE-QTS-FIN.
            EXIT.

      * DEMANDE DE LA DATE
      ******************************************************************
       7000-ASKTIME-DEB.
            EXEC CICS ASKTIME ABSTIME (WS-ABSTIME)
            END-EXEC.
            EXEC CICS FORMATTIME ABSTIME (WS-ABSTIME)
                                 TIME    (WS-TIME)
                                 DDMMYY  (WS-DATE8)
                                 DATESEP ('/')
                                 TIMESEP (':')
            END-EXEC.
       7000-ASKTIME-FIN.
            EXIT.

      * ENVOI DE MAP AVEC ERASE D'ECRAN
      ******************************************************************
       8000-SEND-MAP-ERASE-DEB.
            EXEC CICS SEND MAP    (WS-MAP)
                           MAPSET (WS-MAPSET)
                           FROM   (HNGNMP5O)
                           ERASE
                           RESP   (WS-RC-MAP)
            END-EXEC.
            IF WS-RC-MAP NOT = DFHRESP(NORMAL)
               MOVE 'ERR. SEND MAP, TRANS WNP5' TO WS-MESSAGE-TXT
               PERFORM 8030-SEND-TEXT-DEB
                  THRU 8030-SEND-TEXT-FIN
            END-IF.
       8000-SEND-MAP-ERASE-FIN.
            EXIT.

      * ENVOI DE MAP AVEC DONNEES UNIQUEMENT
      ******************************************************************
       8020-SEND-MAP-DATA-DEB.
            EXEC CICS SEND MAP      (WS-MAP)
                           MAPSET   (WS-MAPSET)
                           FROM     (HNGNMP5O)
                           DATAONLY
                           CURSOR
                           ERASEAUP
                           RESP     (WS-RC-MAP)
            END-EXEC.
            IF WS-RC-MAP NOT = DFHRESP(NORMAL)
               MOVE 'ERR. SEND MAP, TRANS WNP5' TO WS-MESSAGE-TXT
               PERFORM 8030-SEND-TEXT-DEB
                  THRU 8030-SEND-TEXT-FIN
            END-IF.
       8020-SEND-MAP-DATA-FIN.
            EXIT.

      * ENVOI DE TEXTE NON FORMATE
      *****************************************************************
       8030-SEND-TEXT-DEB.
            EXEC CICS SEND TEXT
                           FROM  (WS-MESSAGE-TXT)
                           ERASE
                           RESP  (WS-RC-MAP)
            END-EXEC.
            PERFORM 8050-RETURN-DEB
               THRU 8050-RETURN-FIN.
       8030-SEND-TEXT-FIN.
            EXIT.

      * RETURN A CICS
      ******************************************************************
       8050-RETURN-DEB.
            EXEC CICS RETURN
            END-EXEC.
       8050-RETURN-FIN.
            EXIT.

      * RETURN AVEC TRANSID ET COMMAREA
      ******************************************************************
       8060-RETURN-TRANSID-DEB.
            EXEC CICS RETURN TRANSID (WS-TRANS)
                             COMMAREA (WS-COMMAREA)
            END-EXEC.
       8060-RETURN-TRANSID-FIN.
            EXIT.
      *===============================================================*
      * SQUELETTE BATCH DB2 01.01 - HN INSTITUT 2001                  *
      *===============================================================*
      *                       P R O G R A M M E                       *
      *===============================================================*
      * PROGRAMME   : HNSP5M1                                         *
      *===============================================================*
      *                                                               *
      *===============================================================*
      *  DATE  ยง         HISTORIQUE DES INTERVENTIONS        ยง USERID *
      *--------+---------------------------------------------+--------*
      *../../..ยง                                             ยง        *
      *--------+---------------------------------------------+--------*
      *===============================================================*

      *****************************************************************
       IDENTIFICATION DIVISION.
      *****************************************************************
       PROGRAM-ID.    HNSP5M1 IS INITIAL.

      *****************************************************************
       ENVIRONMENT DIVISION.
      *****************************************************************
       CONFIGURATION SECTION.
       SPECIAL-NAMES.

       INPUT-OUTPUT SECTION.
       FILE-CONTROL.
           SELECT F-REQ ASSIGN TO INP001
                  FILE STATUS IS WS-FS-REQ.
       I-O-CONTROL.

      *****************************************************************
       DATA DIVISION.
      *****************************************************************
       FILE SECTION.
       FD  F-REQ RECORD CONTAINS 80 CHARACTERS
                 RECORDING MODE IS F.

       01  E-REQ                         PIC X(80).

      *===============================================================*
       WORKING-STORAGE SECTION.
      *===============================================================*

       01  WS-SQLCODE                    PIC S9(4)
                                         SIGN IS LEADING
                                         SEPARATE CHARACTER.
       01  WS-FS-REQ                     PIC XX.
       88  FIN-REQ                       VALUE '10'.
       88  OK-REQ                        VALUE '00'.

       01  WS-REQ.
           05  WS-REQ-CODE               PIC X(4).
           05  WS-REQ-ARG.
               10  WS-REQ-NOM            PIC X(8).
               10  WS-REQ-PRENOM         PIC X(8).
               10  FILLER                PIC X(60).
           05  FILLER REDEFINES WS-REQ-ARG.
               10  WS-REQ-SERVICE        PIC X(10).
               10  FILLER                PIC X(66).

      *    *----------------------------------------------------------*
      *    * DECLARATIONS DB2                                         *
      *    *----------------------------------------------------------*
           EXEC SQL
                BEGIN DECLARE SECTION
           END-EXEC.

           EXEC SQL
                INCLUDE EMPLOYE
           END-EXEC.

           EXEC SQL
                INCLUDE SERVICE
           END-EXEC.

           EXEC SQL
                END DECLARE SECTION
           END-EXEC.

           EXEC SQL
                DECLARE CURSEUR
                CURSOR FOR
                  SELECT NOM_EMP, PRENOM, A.SERVIS, TITRE
                  FROM EMPLOYE AS A, SERVICE AS B
                  WHERE A.SERVIS = B.SERVIS
                    AND NOM_SERV = :NOM-SERV
           END-EXEC.

           EXEC SQL
                INCLUDE SQLCA
           END-EXEC.

      *****************************************************************
       LINKAGE SECTION.
      *****************************************************************

      *****************************************************************
       PROCEDURE DIVISION.
      *****************************************************************

      *---- OUVERTURE DU FICHIER DES REQUETES

           OPEN INPUT F-REQ.
           IF NOT OK-REQ
              DISPLAY '*********************************************'
              DISPLAY 'FILE STATUS = ' WS-FS-REQ
              DISPLAY 'PB D''OUVERTURE DU FICHIER - FIN DU PROGRAMME'
              STOP RUN
           END-IF.

      *---- LECTURE D'INITIALISATION

           READ F-REQ INTO WS-REQ.
           IF NOT OK-REQ
              DISPLAY '*********************************************'
              DISPLAY 'FILE STATUS = ' WS-FS-REQ
              DISPLAY 'PB DE 1ERE LECTURE DU FICHIER - FIN DU PROGRAMME'
              STOP RUN
           END-IF.

      *---- INITIALISATION DYNAMIQUE DU SQLID (PREFIXE DE TABLE)


      *---- BOUCLE DU TRAITEMENT JUSQU'A DETECTION DE LA FIN DE FICHIER

           PERFORM TRT-REQ
              UNTIL FIN-REQ.

      *---- FIN DU PROGRAMME

           CLOSE F-REQ.
           IF NOT OK-REQ
              DISPLAY '*********************************************'
              DISPLAY 'FILE STATUS = ' WS-FS-REQ
              DISPLAY 'PB DE FERMETURE DU FICHIER - FIN DU PROGRAMME'
           ELSE
              DISPLAY '*********************************************'
              DISPLAY 'FIN NORMALE DU PROGRAMME'
           END-IF.

           STOP RUN.

      *===============================================================*
       TRT-REQ.
      *===============================================================*

      *---- AFFICHAGE DE LA REQUETE LUE

           DISPLAY '*********************************************'.
           DISPLAY 'REQUETE ' E-REQ.

      *---- TEST DU CODE REQUETE (TRAITEMENT A EFFECTUER)

           EVALUATE WS-REQ-CODE
            WHEN 'RNOM' PERFORM TRT-RNOM
            WHEN 'RSEN' PERFORM TRT-RSEN
            WHEN OTHER
              DISPLAY '*********************************************'
              DISPLAY 'CODE REQUETE ' WS-REQ-CODE 'ERRONE.'
           END-EVALUATE.

      *---- LECTURE DE LA REQUETE SUIVANTE

           READ F-REQ INTO WS-REQ.
           IF NOT OK-REQ AND NOT FIN-REQ
              DISPLAY '*********************************************'
              DISPLAY 'FILE STATUS = ' WS-FS-REQ
              DISPLAY 'PB DE LECTURE - FIN DU PROGRAMME'
              STOP RUN
           END-IF.

      *===============================================================*
       TRT-RNOM.
      *===============================================================*

      *---- SELECT FERMEE (RAMENE 1 LIGNE OU AUCUNE)

           MOVE WS-REQ-NOM    TO NOM-EMP.
           MOVE WS-REQ-PRENOM TO PRENOM.
           EXEC SQL
                SELECT NOM_EMP,  PRENOM,  SERVIS,  TITRE
                 INTO :NOM-EMP, :PRENOM, :DCLEMPLOYE.SERVIS, :TITRE
                FROM EMPLOYE
                WHERE NOM_EMP = :NOM-EMP
                  AND PRENOM = :PRENOM
           END-EXEC.

      *---- TEST SQLCODE (IMPRESSION LIGNE OU MESSAGE D'ANOMALIE)

           IF SQLCODE NOT = +0
              THEN MOVE SQLCODE TO WS-SQLCODE
              DISPLAY '*********************************************'
                   DISPLAY 'PB SELECT - SQLCODE = ' WS-SQLCODE
              ELSE
              DISPLAY '---------------------------------------------'
                   DISPLAY DCLEMPLOYE
           END-IF.

      *===============================================================*
       TRT-RSEN.
      *===============================================================*

      *---- OUVERTURE DU CURSEUR

           MOVE WS-REQ-SERVICE TO NOM-SERV.

           EXEC SQL
                OPEN CURSEUR
           END-EXEC.

      *---- TEST SQLCODE (FETCH D'INITIALISATION OU MESSAGE D'ANOMALIE)

           IF SQLCODE NOT = +0
              THEN MOVE SQLCODE TO WS-SQLCODE
              DISPLAY '*********************************************'
                   DISPLAY 'PB D''OUVERTURE DU CURSEUR - SQLCODE = '
                           WS-SQLCODE
           END-IF.

      *---- BOUCLE SUR LE FETCH JUSQU'A FIN DE SOUS TABLE OU ERREUR

           EXEC SQL
                FETCH CURSEUR
                INTO :NOM-EMP, :PRENOM, :DCLEMPLOYE.SERVIS, :TITRE
           END-EXEC.

           IF SQLCODE = +0
              THEN
              DISPLAY '---------------------------------------------'
                   PERFORM UNTIL SQLCODE = +100 OR NOT = +0
                   DISPLAY DCLEMPLOYE
                   EXEC SQL
                        FETCH CURSEUR
                        INTO :NOM-EMP, :PRENOM, :DCLEMPLOYE.SERVIS,
                             :TITRE
                   END-EXEC
                   IF SQLCODE NOT = +100 AND NOT = +0
                      THEN MOVE SQLCODE TO WS-SQLCODE
              DISPLAY '*********************************************'
              DISPLAY 'PB DE LECTURE DU CURSEUR - SQLCODE = ' WS-SQLCODE
                   END-IF
                   END-PERFORM
           END-IF.

      *---- FERMETURE DU CURSEUR
           EXEC SQL
                CLOSE CURSEUR
           END-EXEC.

           IF SQLCODE = +100
              THEN
                   IF SQLCODE NOT = +0
                      THEN MOVE SQLCODE TO WS-SQLCODE
              DISPLAY '*********************************************'
              DISPLAY 'PB DE FERMETURE DU CURSEUR - SQLCODE = '
                      WS-SQLCODE
                   END-IF
           END-IF.
      *===============================================================*
      *--                INFORMATIONS GENERALES                     --*
      *---------------------------------------------------------------*
      *  NOM DU PROGRAMME : HNSP5M2                                   *
      *  NOM DU REDACTEUR : REVERE ALAIN                              *
      *  SOCIETE          : GFI INFORMATIQUE                          *
      *  DATE DE CREATION : 24/09/2014                                *
      *---------------------------------------------------------------*
      *--               OBJECTIFS GENERAUX DU PROGRAMME             --*
      *---------------------------------------------------------------*
      * CRรฉER UN COMPTE-RENDU DES MOUVEMENTS BANCAIRE PAR CLIENT ET   *
      * POUR L'ENSEMBLE DES CLIENTS                                   *
      *---------------------------------------------------------------*
      *--               HISTORIQUE DES MODIFICATIONS                --*
      *---------------------------------------------------------------*
      * DATE  MODIF   ยง          NATURE DE LA MODIFICATION            *
      *---------------------------------------------------------------*
      *               ยง                                               *
      *               ยง                                               *
      *===============================================================*

       IDENTIFICATION DIVISION.
       PROGRAM-ID.      HNSP5M2.

      *                  ==============================               *
      *=================<   ENVIRONMENT     DIVISION   >==============*
      *                  ==============================               *
      *                                                               *
      *===============================================================*

      **********************
       ENVIRONMENT DIVISION.
      **********************

      *======================
       CONFIGURATION SECTION.
      *======================

      *--------------
       SPECIAL-NAMES.
      *--------------
           DECIMAL-POINT IS COMMA.

      *=====================
       INPUT-OUTPUT SECTION.
      *=====================

      *-------------
       FILE-CONTROL.
      *-------------

      ***************
       DATA DIVISION.
      ***************

      *=============
       FILE SECTION.
      *=============

      *========================
       WORKING-STORAGE SECTION.
      *========================
       01  WS-SQLCODE            PIC S9(4)
                                 SIGN IS LEADING
                                 SEPARATE CHARACTER.

       01  WS-LASTER.
           05 FILLER             PIC X(45) VALUE ALL '*'.
      *LIGNE DE 45 ETOILES
       01  WS-LCPTE.
           05 FILLER             PIC X(33) VALUE
      -          'NUMERO DE COMPTE               : '.
           05 WS-OCPT            PIC X(10).
      *LIGNE  INDIQUANT LE NUMERO DE COMPTE POUR LE COMPTE RENDU CLIENT
       01  WS-LTIRET.
           05 FILLER             PIC X(45) VALUE ALL '-'.
      *LIGNE DE 45 TIRETS
       01  WS-LCB.
           05 FILLER             PIC X(33) VALUE
      -          'CUMUL CARTE-BLEUE              : '.
           05 WS-OCB-ED          PIC ++++++++9,99.
       01 WS-OCB                 PIC S9(8)V99 COMP-3.
      *LIGNE INDIQUANT LE CUMUL DE CARTE BLEU POUR LE COMPTE RENDU
      *CLIENT
       01  WS-LRDAB.
           05 FILLER             PIC X(33) VALUE
      -          'CUMUL RETRAIT DAB              : '.
           05 WS-ORDAB-ED        PIC ++++++++9,99.
       01 WS-ORDAB               PIC S9(8)V99 COMP-3.
      *LIGNE INDIQUANT LE CUMUL DES RETRAITS POUR LE COMPTE RENDU
      *CLIENT
       01  WS-LDGUI.
           05 FILLER             PIC X(33) VALUE
      -          'CUMUL DEPOT GUICHET            : '.
           05 WS-ODGUI-ED        PIC ++++++++9,99.
       01 WS-ODGUI               PIC S9(8)V99 COMP-3.
      *LIGNE INDIQUANT LE CUMUL DES DEPOTS POUR LE COMPTE RENDU CLIENT
       01  WS-LBAL.
           05 FILLER             PIC X(33) VALUE
      -          'BALANCE DES OPERATIONS         : '.
           05 WS-OBAL-ED         PIC ++++++++9,99.
       01 WS-OBAL                PIC S9(8)V99 COMP-3.
      *LIGNE INDIQUANT LA BALANCE POUR LE COMPTE RENDU CLIENT

       01  WS-LECPT.
           05 FILLER             PIC X(34) VALUE
      -          'ERREUR POUR LE COMPTE           : '.
           05 WS-ECPT            PIC 9(10).
      *LIGNE INDIQUANT LE NUMERO DU COMPTE EN ERREUR
       01  WS-LEMVT.
           05 FILLER             PIC X(34) VALUE
      -          'CODE MOUVEMENT                  : '.
           05 WS-EMVT            PIC X.
      *LIGNE INDIQUANT LE CODE MOUVEMENT EN ERREUR
       01  WS-LEMT.
           05 FILLER             PIC X(33) VALUE
      -          'MONTANT                         :'.
           05 WS-EMT-ED          PIC ++++++++9,99.
       01 WS-EMT                 PIC S9(8)V99 COMP-3.
      *LIGNE INDIQUANT LE MONTANT EN ERREUR

       01  WS-LCCLI.
           05 FILLER             PIC X(33) VALUE
      -          'NOMBRE DE CLIENTS              : '.
           05 WS-CCLI            PIC 9(12).
      *LIGNE INDIQUANT LE NOMBRE DE CLIENT
       01  WS-LCMVT.
           05 FILLER             PIC X(33) VALUE
      -          'NOMBRE DE MOUVEMENTS           : '.
           05 WS-CMVT            PIC 9(12).
      *LIGNE INDIQUANT LE NOMBRE DE MOUVEMENTS
       01  WS-LCERR.
           05 FILLER             PIC X(33) VALUE
      -          'NOMBRE DE MOUVEMENTS ERRONรฉS   : '.
           05 WS-CERR            PIC 9(12).
      *LIGNE INDIQUANT LE NOMBRE DE MOUVEMENTS EN ERREUR
       01  WS-LCRET.
           05 FILLER             PIC X(33) VALUE
      -          'NOMBRE DE RETRAITS             : '.
           05 WS-CRET            PIC 9(12).
      *LIGNE INDIQUANT LE NOMBRE DE RETRAITS
       01  WS-LCCB.
           05 FILLER             PIC X(33) VALUE
      -          'NOMBRE DE CARTES BLEUES        : '.
           05 WS-CCB             PIC 9(12).
      *LIGNE INDIQUANT LE NOMBRE DE CARTES BLEUES
       01  WS-LCDEP.
           05 FILLER             PIC X(33) VALUE
      -          'NOMBRE DE DรฉPรดTS               : '.
           05 WS-CDEP            PIC 9(12).
      *LIGNE INDIQUANT LE NOMBRE DE DEPOTS

      *---------------------------------------------------------------*
      *      DECLARATIONS DB2                                         *
      *---------------------------------------------------------------*

           EXEC SQL
                BEGIN DECLARE SECTION
           END-EXEC.

           EXEC SQL
                INCLUDE MVT
           END-EXEC.

           EXEC SQL
                END DECLARE SECTION
           END-EXEC.

           EXEC SQL
                INCLUDE SQLCA
           END-EXEC.

           EXEC SQL
                DECLARE CURSEURMVTS
                CURSOR FOR
                   SELECT MVT_CPTE, MVT_CODE, MVT_MONTANT
                   FROM MOUVEMENTS
           END-EXEC.

      *                  ==============================               *
      *=================<    PROCEDURE      DIVISION   >==============*
      *                  ==============================               *

      *===============================================================*
       PROCEDURE           DIVISION.

      *===============================================================*
      *===============================================================*
      *    STRUCTURATION DE LA PARTIE ALGORITHMIQUE DU PROGRAMME      *
      *---------------------------------------------------------------*
      *                                                               *
      *    1 : LES COMPOSANTS DU DIAGRAMME SONT CODES A L'AIDE DE     *
      *        DEUX PARAGRAPHES  XXXX-COMPOSANT-DEB                   *
      *                          XXYY-COMPOSANR-FIN                   *
      *                                                               *
      *    2 : XX REPRESENTE LE NIVEAU HIERARCHIQUE                   *
      *        YY DIFFERENCIE LES COMPOSANTS DE MEME NIVEAU           *
      *                                                               *
      *    3 : TOUT COMPOSANT EST PRECEDE D'UN CARTOUCHE DE           *
      *        COMMENTAIRE QUI EXPLICITE LE ROLE DU COMPOSANT         *
      *                                                               *
      *                                                               *
      *===============================================================*
      *===============================================================*


      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT PROGRAMME              *
      *               ==================================              *
      *OUVRE LE FICHIER F-MVTS, LE LIS ET INITIALISE LES VARIABLES    *
      *                                                               *
      *BOUCLE SUR LES LIGNES DU FICHIER F-MVTS                        *
      *                                                               *
      *FERME LE FICHIER F-MVTS, CALCUL LE NB DE MOUVEMENT, AFFICHE LE *
      *COMPTE RENDU FINAL ET FERME LE PROGRAMME                       *
      *---------------------------------------------------------------*

       0000-PROGRAMME-DEB.
      *PREPARATION DU TRAITEMENT

           PERFORM  6000-OPEN-MVTS-DEB
              THRU  6000-OPEN-MVTS-FIN.

           PERFORM  6010-FETCH-MVTS-DEB
              THRU  6010-FETCH-MVTS-FIN.

           MOVE 0 TO WS-CCLI WS-CMVT WS-CERR WS-CRET WS-CCB WS-CDEP.

      *APPEL DU COMPOSANT SUIVANT
       0000-PROGRAMME-COR.

           PERFORM  1000-COMPTE-DEB
              THRU  1000-COMPTE-FIN
             UNTIL  SQLCODE = +100.

      *FIN DU TRAITEMENT
       0000-PROGRAMME-FIN.

           COMPUTE WS-CMVT = WS-CERR
                           + WS-CRET
                           + WS-CCB
                           + WS-CDEP.

           PERFORM  8000-COMPTERENDU-DEB
              THRU  8000-COMPTERENDU-FIN.

           PERFORM  6020-CLOSE-MVTS-DEB
              THRU  6020-CLOSE-MVTS-FIN.

           PERFORM  9999-FIN-PROGRAMME-DEB
              THRU  9999-FIN-PROGRAMME-FIN.


      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT COMPTE                 *
      *               ==================================              *
      *AJOUTE UN AU COMPTE DE CLIENT, INITIALISE LES VALEURS DES      *
      *DIFFERENTS MOUVEMENTS DU CLIENT                                *
      *                                                               *
      *BOUCLE SUR LES MOUVEMENTS                                      *
      *                                                               *
      *CALCULE LA BALANCE TOTAL ET AFFICHE LE COMPTE RENDU CLIENT     *
      *****************************************************************

       1000-COMPTE-DEB.
      *PREPARATION DU TRAITEMENT

           MOVE MVT-CPTE TO WS-OCPT.
           MOVE 0 TO WS-OCB WS-ORDAB WS-ODGUI.
           ADD 1 TO WS-CCLI.

      *APPEL DU COMPOSANT SUIVANT

           PERFORM 2000-MOUVEMENT-DEB
              THRU 2000-MOUVEMENT-FIN
             UNTIL WS-OCPT NOT = MVT-CPTE OR SQLCODE = +100.

      *FIN DU TRAITEMENT
           IF WS-ODGUI IS POSITIVE
           OR WS-ORDAB IS POSITIVE
           OR WS-OCB IS POSITIVE
           THEN
               COMPUTE WS-OBAL = WS-ODGUI - WS-ORDAB - WS-OCB

               PERFORM 8010-ETATCLIENT-DEB
                  THRU 8010-ETATCLIENT-FIN
           END-IF.

       1000-COMPTE-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT COMPTE                 *
      *               ==================================              *
      *PASSE AU COMPOSANT SUIVANT SELON LA VALEUR DE WS-MVT-CODE      *
      *                                                               *
      *LIT LE PROCHAIN ENREGITREMENT DU FICHIER F-MVTS                *
      *                                                               *
      *****************************************************************

       2000-MOUVEMENT-DEB.

      *APPEL DU COMPOSANT SUIVANT

           EVALUATE MVT-CODE
               WHEN 'R'   PERFORM 3000-RETRAIT-DEB
                             THRU 3000-RETRAIT-FIN
               WHEN 'C'   PERFORM 3010-CB-DEB
                             THRU 3010-CB-FIN
               WHEN 'D'   PERFORM 3020-DEPOT-DEB
                             THRU 3020-DEPOT-FIN
               WHEN OTHER PERFORM 3030-AUTRES-DEB
                             THRU 3030-AUTRES-FIN
           END-EVALUATE.

      *FIN DU TRAITEMENT

           PERFORM 6010-FETCH-MVTS-DEB
              THRU 6010-FETCH-MVTS-FIN.

       2000-MOUVEMENT-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT RETRAIT                *
      *               ==================================              *
      *AJOUTE UN AU COMPTEUR RETRAIT                                  *
      *AJOUT LE MONTANT DE LA TRANSACTION A LA SOMME RETRAIT DU CLIENT*
      *****************************************************************

       3000-RETRAIT-DEB.
           ADD 1 TO WS-CRET.
           ADD MVT-MONTANT TO WS-ORDAB.

       3000-RETRAIT-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT CB                     *
      *               ==================================              *
      *AJOUTE UN AU COMPTEUR CB                                       *
      *AJOUT LE MONTANT DE LA TRANSACTION A LA SOMME CB      DU CLIENT*
      *****************************************************************

       3010-CB-DEB.
           ADD 1 TO WS-CCB.
           ADD MVT-MONTANT TO WS-OCB.

       3010-CB-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT DEPOT                  *
      *               ==================================              *
      *AJOUTE UN AU COMPTEUR DEPOT                                    *
      *AJOUT LE MONTANT DE LA TRANSACTION A LA SOMME DEPOT   DU CLIENT*
      *****************************************************************

       3020-DEPOT-DEB.
           ADD 1 TO WS-CDEP.
           ADD MVT-MONTANT TO WS-ODGUI.

       3020-DEPOT-FIN.
           EXIT.

      *---------------------------------------------------------------*
      *               DESCRIPTION DU COMPOSANT AUTRES                 *
      *               ==================================              *
      *AJOUTE UN AU COMPTEUR ERREUR                                   *
      *GENERE L ETAT ERREUR POUR LE MOUVEMENT EN COURS                *
      *****************************************************************

       3030-AUTRES-DEB.
           ADD 1 TO WS-CERR.
           MOVE MVT-CPTE TO WS-ECPT.
           MOVE MVT-CODE TO WS-EMVT.
           MOVE MVT-MONTANT TO WS-EMT.
           PERFORM 8020-ETATERREUR-DEB
              THRU 8020-ETATERREUR-FIN.

       3030-AUTRES-FIN.
           EXIT.

      *===============================================================*
      *===============================================================*
      *    STRUCTURATION DE LA PARTIE INDEPENDANTE DU PROGRAMME       *
      *---------------------------------------------------------------*
      *                                                               *
      *   6XXX-  : ORDRES DE MANIPULATION DES FICHIERS                *
      *   7XXX-  : TRANSFERTS ET CALCULS COMPLEXES                    *
      *   8XXX-  : ORDRES DE MANIPULATION DES EDITIONS                *
      *   9XXX-  : PROTECTION FIN DE PROGRAMME                        *
      *   9999-  : PROTECTION FIN DE PROGRAMME                        *
      *                                                               *
      *===============================================================*
      *===============================================================*

      *---------------------------------------------------------------*
      *   6XXX-  : ORDRES DE MANIPULATION DES FICHIERS                *
      *---------------------------------------------------------------*
      *                                                               *
       6000-OPEN-MVTS-DEB.

           EXEC SQL
                OPEN CURSEURMVTS
           END-EXEC.

           IF NOT SQLCODE = +0
           THEN
               IF SQLCODE = +100
                 DISPLAY 'FICHIER MOUVEMENTS VIDE'
                 PERFORM 9999-FIN-PROGRAMME-DEB
                    THRU 9999-FIN-PROGRAMME-FIN
               ELSE
                 DISPLAY 'ERREUR D''OUVERTURE DU FICHIER MOUVEMENTS'
      -                  ', CODE ANOMALIE = ' SQLCODE
                 PERFORM 9999-ERREUR-PROGRAMME-DEB
                    THRU 9999-ERREUR-PROGRAMME-FIN
               END-IF
           END-IF.

       6000-OPEN-MVTS-FIN.
           EXIT.

       6010-FETCH-MVTS-DEB.

           EXEC SQL
                FETCH CURSEURMVTS
                INTO :MVT-CPTE, :MVT-CODE, :MVT-MONTANT
           END-EXEC.
           IF NOT SQLCODE = +0 AND NOT SQLCODE = +100
           THEN
               DISPLAY 'ERREUR DE LECTURE DU FICHIER MOUVEMENTS'
      -                ', CODE ANOMALIE = ' SQLCODE
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.
       6010-FETCH-MVTS-FIN.
           EXIT.

       6020-CLOSE-MVTS-DEB.

           EXEC SQL
                CLOSE CURSEURMVTS
           END-EXEC.

           IF NOT SQLCODE = +0
           THEN
               DISPLAY 'ERREUR DE FERMETURE DU FICHIER MOUVEMENTS'
      -                ', CODE ANOMALIE = ' SQLCODE
               PERFORM 9999-ERREUR-PROGRAMME-DEB
                  THRU 9999-ERREUR-PROGRAMME-FIN
           END-IF.
       6020-CLOSE-MVTS-FIN.
           EXIT.

      *
      *---------------------------------------------------------------*
      *   7XXX-  : TRANSFERTS ET CALCULS COMPLEXES                    *
      *---------------------------------------------------------------*
      *
      *7000-ORDRE-CALCUL-DEB.
      *
      *7000-ORDRE-CALCUL-FIN.
      *     EXIT.
      *
      *---------------------------------------------------------------*
      *   8XXX-  : ORDRES DE MANIPULATION DES EDITIONS                *
      *---------------------------------------------------------------*

       8000-COMPTERENDU-DEB.
           DISPLAY WS-LASTER.
           DISPLAY WS-LCCLI.
           DISPLAY WS-LCMVT.
           DISPLAY WS-LCERR.
           DISPLAY WS-LCRET.
           DISPLAY WS-LCCB.
           DISPLAY WS-LCDEP.
           DISPLAY WS-LASTER.

       8000-COMPTERENDU-FIN.
           EXIT.
       8010-ETATCLIENT-DEB.
           DISPLAY WS-LASTER.
           DISPLAY WS-LCPTE.
           DISPLAY WS-LTIRET.
           MOVE WS-OCB TO WS-OCB-ED.
           DISPLAY WS-LCB.
           MOVE WS-ORDAB TO WS-ORDAB-ED.
           DISPLAY WS-LRDAB.
           MOVE WS-ODGUI TO WS-ODGUI-ED.
           DISPLAY WS-LDGUI.
           DISPLAY WS-LTIRET.
           MOVE WS-OBAL TO WS-OBAL-ED.
           DISPLAY WS-LBAL.
           DISPLAY WS-LASTER.

       8010-ETATCLIENT-FIN.
           EXIT.

       8020-ETATERREUR-DEB.
           DISPLAY WS-LASTER.
           DISPLAY WS-LECPT.
           DISPLAY WS-LEMVT.
           MOVE WS-EMT TO WS-EMT-ED.
           DISPLAY WS-LEMT.
           DISPLAY WS-LASTER.

       8020-ETATERREUR-FIN.
           EXIT.

       8999-STATISTIQUES-DEB.

            DISPLAY '************************************************'
            DISPLAY '*     STATISTIQUES DU PROGRAMME HNSO5M1        *'
            DISPLAY '*     ==================================       *'
            DISPLAY '************************************************'.

       8999-STATISTIQUES-FIN.
            EXIT.

      *---------------------------------------------------------------*
      *   9XXX-  : ORDRES DE MANIPULATION DES SOUS-PROGRAMMES         *
      *---------------------------------------------------------------*
      *
      *9000-APPEL-SP-DEB.
      *
      *9000-APPEL-SP-FIN.
      *     EXIT.
      *
      *---------------------------------------------------------------*
      *   9999-  : PROTECTION FIN DE PROGRAMME                        *
      *---------------------------------------------------------------*

       9999-FIN-PROGRAMME-DEB.

            DISPLAY '*==============================================*'
            DISPLAY '*     FIN NORMALE DU PROGRAMME HNSO5M1         *'
            DISPLAY '*==============================================*'
            STOP RUN.

       9999-FIN-PROGRAMME-FIN.
            EXIT.

       9999-ERREUR-PROGRAMME-DEB.

            DISPLAY '*==============================================*'
            DISPLAY '*        UNE ANOMALIE A ETE DETECTEE           *'
            DISPLAY '*     FIN ANORMALE DU PROGRAMME HNSO5M1        *'
            DISPLAY '*==============================================*'
            MOVE 12 TO RETURN-CODE.
            STOP RUN.

       9999-ERREUR-PROGRAMME-FIN.
            EXIT.


